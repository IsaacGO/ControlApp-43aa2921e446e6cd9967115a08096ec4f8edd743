//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ControlApp.DataAccess {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ControlAppDevDataSetIsaac")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ControlAppDevDataSetIsaac : global::System.Data.DataSet {
        
        private LogDataTable tableLog;
        
        private TBL_AREADataTable tableTBL_AREA;
        
        private TBL_CUSTOMERDataTable tableTBL_CUSTOMER;
        
        private TBL_CXCDataTable tableTBL_CXC;
        
        private TBL_DPTDataTable tableTBL_DPT;
        
        private TBL_NOTEDataTable tableTBL_NOTE;
        
        private TBL_ORDERDataTable tableTBL_ORDER;
        
        private TBL_PERMISSIONDataTable tableTBL_PERMISSION;
        
        private TBL_POSITIONDataTable tableTBL_POSITION;
        
        private TBL_PREPAIDDataTable tableTBL_PREPAID;
        
        private TBL_PRODUCTDataTable tableTBL_PRODUCT;
        
        private TBL_RECEIPTDataTable tableTBL_RECEIPT;
        
        private TBL_ROLEDataTable tableTBL_ROLE;
        
        private TBL_ROLE_PERMISSIONDataTable tableTBL_ROLE_PERMISSION;
        
        private TBL_SESSIONDataTable tableTBL_SESSION;
        
        private TBL_STOCKDataTable tableTBL_STOCK;
        
        private TBL_USERDataTable tableTBL_USER;
        
        private SP_CRUD_AREADataTable tableSP_CRUD_AREA;
        
        private SP_CRUD_CUSTOMERDataTable tableSP_CRUD_CUSTOMER;
        
        private SP_CRUD_CXCDataTable tableSP_CRUD_CXC;
        
        private SP_CRUD_DPTDataTable tableSP_CRUD_DPT;
        
        private SP_CRUD_ORDERDataTable tableSP_CRUD_ORDER;
        
        private SP_CRUD_PERDataTable tableSP_CRUD_PER;
        
        private SP_CRUD_POSITIONDataTable tableSP_CRUD_POSITION;
        
        private SP_CRUD_PREPAIDDataTable tableSP_CRUD_PREPAID;
        
        private SP_CRUD_PRODUCTDataTable tableSP_CRUD_PRODUCT;
        
        private SP_CRUD_RECEIPTDataTable tableSP_CRUD_RECEIPT;
        
        private SP_CRUD_ROLEDataTable tableSP_CRUD_ROLE;
        
        private SP_CRUD_ROLE_PERDataTable tableSP_CRUD_ROLE_PER;
        
        private SP_CRUD_STOCKDataTable tableSP_CRUD_STOCK;
        
        private SP_CRUD_USERDataTable tableSP_CRUD_USER;
        
        private SP_CRUD_NOTEDataTable tableSP_CRUD_NOTE;
        
        private global::System.Data.DataRelation relationFK_TBL_AREA_TBL_DPT;
        
        private global::System.Data.DataRelation relationFK_TBL_CUSTOMER_TBL_USER;
        
        private global::System.Data.DataRelation relationFK_TBL_CXC_TBL_STOCK;
        
        private global::System.Data.DataRelation relationFK_TBL_CXC_TBL_USER1;
        
        private global::System.Data.DataRelation relationFK_TBL_ORDER_TBL_PREPAID;
        
        private global::System.Data.DataRelation relationFK_TBL_ORDER_TBL_USER;
        
        private global::System.Data.DataRelation relationFK_TBL_PERMISSION_TBL_DPT;
        
        private global::System.Data.DataRelation relationFK_TBL_POSITION_TBL_AREA;
        
        private global::System.Data.DataRelation relationFK_TBL_PREPAID_TBL_CUSTOMER;
        
        private global::System.Data.DataRelation relationFK_TBL_PREPAID_TBL_PRODUCT;
        
        private global::System.Data.DataRelation relationFK_TBL_PREPAID_TBL_USER;
        
        private global::System.Data.DataRelation relationFK_TBL_PRODUCT_TBL_USER;
        
        private global::System.Data.DataRelation relationFK_TBL_RECEIPT_TBL_PRICE_TAG;
        
        private global::System.Data.DataRelation relationFK_TBL_RECEIPT_TBL_STOCK;
        
        private global::System.Data.DataRelation relationFK_TBL_RECEIPT_TBL_USER;
        
        private global::System.Data.DataRelation relationFK_TBL_ROLE_PERMISSION_TBL_PERMISSION;
        
        private global::System.Data.DataRelation relationFK_TBL_ROLE_PERMISSION_TBL_ROLE;
        
        private global::System.Data.DataRelation relationFK_TBL_SESSION_TBL_USER;
        
        private global::System.Data.DataRelation relationFK_TBL_STOCK_TBL_PRODUCT;
        
        private global::System.Data.DataRelation relationFK_TBL_STOCK_TBL_USER;
        
        private global::System.Data.DataRelation relationFK_TBL_USER_TBL_AREA;
        
        private global::System.Data.DataRelation relationFK_TBL_USER_TBL_DPT;
        
        private global::System.Data.DataRelation relationFK_TBL_USER_TBL_POSITION;
        
        private global::System.Data.DataRelation relationFK_TBL_USER_TBL_ROLE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ControlAppDevDataSetIsaac() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected ControlAppDevDataSetIsaac(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Log"] != null)) {
                    base.Tables.Add(new LogDataTable(ds.Tables["Log"]));
                }
                if ((ds.Tables["TBL_AREA"] != null)) {
                    base.Tables.Add(new TBL_AREADataTable(ds.Tables["TBL_AREA"]));
                }
                if ((ds.Tables["TBL_CUSTOMER"] != null)) {
                    base.Tables.Add(new TBL_CUSTOMERDataTable(ds.Tables["TBL_CUSTOMER"]));
                }
                if ((ds.Tables["TBL_CXC"] != null)) {
                    base.Tables.Add(new TBL_CXCDataTable(ds.Tables["TBL_CXC"]));
                }
                if ((ds.Tables["TBL_DPT"] != null)) {
                    base.Tables.Add(new TBL_DPTDataTable(ds.Tables["TBL_DPT"]));
                }
                if ((ds.Tables["TBL_NOTE"] != null)) {
                    base.Tables.Add(new TBL_NOTEDataTable(ds.Tables["TBL_NOTE"]));
                }
                if ((ds.Tables["TBL_ORDER"] != null)) {
                    base.Tables.Add(new TBL_ORDERDataTable(ds.Tables["TBL_ORDER"]));
                }
                if ((ds.Tables["TBL_PERMISSION"] != null)) {
                    base.Tables.Add(new TBL_PERMISSIONDataTable(ds.Tables["TBL_PERMISSION"]));
                }
                if ((ds.Tables["TBL_POSITION"] != null)) {
                    base.Tables.Add(new TBL_POSITIONDataTable(ds.Tables["TBL_POSITION"]));
                }
                if ((ds.Tables["TBL_PREPAID"] != null)) {
                    base.Tables.Add(new TBL_PREPAIDDataTable(ds.Tables["TBL_PREPAID"]));
                }
                if ((ds.Tables["TBL_PRODUCT"] != null)) {
                    base.Tables.Add(new TBL_PRODUCTDataTable(ds.Tables["TBL_PRODUCT"]));
                }
                if ((ds.Tables["TBL_RECEIPT"] != null)) {
                    base.Tables.Add(new TBL_RECEIPTDataTable(ds.Tables["TBL_RECEIPT"]));
                }
                if ((ds.Tables["TBL_ROLE"] != null)) {
                    base.Tables.Add(new TBL_ROLEDataTable(ds.Tables["TBL_ROLE"]));
                }
                if ((ds.Tables["TBL_ROLE_PERMISSION"] != null)) {
                    base.Tables.Add(new TBL_ROLE_PERMISSIONDataTable(ds.Tables["TBL_ROLE_PERMISSION"]));
                }
                if ((ds.Tables["TBL_SESSION"] != null)) {
                    base.Tables.Add(new TBL_SESSIONDataTable(ds.Tables["TBL_SESSION"]));
                }
                if ((ds.Tables["TBL_STOCK"] != null)) {
                    base.Tables.Add(new TBL_STOCKDataTable(ds.Tables["TBL_STOCK"]));
                }
                if ((ds.Tables["TBL_USER"] != null)) {
                    base.Tables.Add(new TBL_USERDataTable(ds.Tables["TBL_USER"]));
                }
                if ((ds.Tables["SP_CRUD_AREA"] != null)) {
                    base.Tables.Add(new SP_CRUD_AREADataTable(ds.Tables["SP_CRUD_AREA"]));
                }
                if ((ds.Tables["SP_CRUD_CUSTOMER"] != null)) {
                    base.Tables.Add(new SP_CRUD_CUSTOMERDataTable(ds.Tables["SP_CRUD_CUSTOMER"]));
                }
                if ((ds.Tables["SP_CRUD_CXC"] != null)) {
                    base.Tables.Add(new SP_CRUD_CXCDataTable(ds.Tables["SP_CRUD_CXC"]));
                }
                if ((ds.Tables["SP_CRUD_DPT"] != null)) {
                    base.Tables.Add(new SP_CRUD_DPTDataTable(ds.Tables["SP_CRUD_DPT"]));
                }
                if ((ds.Tables["SP_CRUD_ORDER"] != null)) {
                    base.Tables.Add(new SP_CRUD_ORDERDataTable(ds.Tables["SP_CRUD_ORDER"]));
                }
                if ((ds.Tables["SP_CRUD_PER"] != null)) {
                    base.Tables.Add(new SP_CRUD_PERDataTable(ds.Tables["SP_CRUD_PER"]));
                }
                if ((ds.Tables["SP_CRUD_POSITION"] != null)) {
                    base.Tables.Add(new SP_CRUD_POSITIONDataTable(ds.Tables["SP_CRUD_POSITION"]));
                }
                if ((ds.Tables["SP_CRUD_PREPAID"] != null)) {
                    base.Tables.Add(new SP_CRUD_PREPAIDDataTable(ds.Tables["SP_CRUD_PREPAID"]));
                }
                if ((ds.Tables["SP_CRUD_PRODUCT"] != null)) {
                    base.Tables.Add(new SP_CRUD_PRODUCTDataTable(ds.Tables["SP_CRUD_PRODUCT"]));
                }
                if ((ds.Tables["SP_CRUD_RECEIPT"] != null)) {
                    base.Tables.Add(new SP_CRUD_RECEIPTDataTable(ds.Tables["SP_CRUD_RECEIPT"]));
                }
                if ((ds.Tables["SP_CRUD_ROLE"] != null)) {
                    base.Tables.Add(new SP_CRUD_ROLEDataTable(ds.Tables["SP_CRUD_ROLE"]));
                }
                if ((ds.Tables["SP_CRUD_ROLE_PER"] != null)) {
                    base.Tables.Add(new SP_CRUD_ROLE_PERDataTable(ds.Tables["SP_CRUD_ROLE_PER"]));
                }
                if ((ds.Tables["SP_CRUD_STOCK"] != null)) {
                    base.Tables.Add(new SP_CRUD_STOCKDataTable(ds.Tables["SP_CRUD_STOCK"]));
                }
                if ((ds.Tables["SP_CRUD_USER"] != null)) {
                    base.Tables.Add(new SP_CRUD_USERDataTable(ds.Tables["SP_CRUD_USER"]));
                }
                if ((ds.Tables["SP_CRUD_NOTE"] != null)) {
                    base.Tables.Add(new SP_CRUD_NOTEDataTable(ds.Tables["SP_CRUD_NOTE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LogDataTable Log {
            get {
                return this.tableLog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_AREADataTable TBL_AREA {
            get {
                return this.tableTBL_AREA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_CUSTOMERDataTable TBL_CUSTOMER {
            get {
                return this.tableTBL_CUSTOMER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_CXCDataTable TBL_CXC {
            get {
                return this.tableTBL_CXC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_DPTDataTable TBL_DPT {
            get {
                return this.tableTBL_DPT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_NOTEDataTable TBL_NOTE {
            get {
                return this.tableTBL_NOTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_ORDERDataTable TBL_ORDER {
            get {
                return this.tableTBL_ORDER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_PERMISSIONDataTable TBL_PERMISSION {
            get {
                return this.tableTBL_PERMISSION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_POSITIONDataTable TBL_POSITION {
            get {
                return this.tableTBL_POSITION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_PREPAIDDataTable TBL_PREPAID {
            get {
                return this.tableTBL_PREPAID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_PRODUCTDataTable TBL_PRODUCT {
            get {
                return this.tableTBL_PRODUCT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_RECEIPTDataTable TBL_RECEIPT {
            get {
                return this.tableTBL_RECEIPT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_ROLEDataTable TBL_ROLE {
            get {
                return this.tableTBL_ROLE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_ROLE_PERMISSIONDataTable TBL_ROLE_PERMISSION {
            get {
                return this.tableTBL_ROLE_PERMISSION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_SESSIONDataTable TBL_SESSION {
            get {
                return this.tableTBL_SESSION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_STOCKDataTable TBL_STOCK {
            get {
                return this.tableTBL_STOCK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_USERDataTable TBL_USER {
            get {
                return this.tableTBL_USER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_AREADataTable SP_CRUD_AREA {
            get {
                return this.tableSP_CRUD_AREA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_CUSTOMERDataTable SP_CRUD_CUSTOMER {
            get {
                return this.tableSP_CRUD_CUSTOMER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_CXCDataTable SP_CRUD_CXC {
            get {
                return this.tableSP_CRUD_CXC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_DPTDataTable SP_CRUD_DPT {
            get {
                return this.tableSP_CRUD_DPT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_ORDERDataTable SP_CRUD_ORDER {
            get {
                return this.tableSP_CRUD_ORDER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_PERDataTable SP_CRUD_PER {
            get {
                return this.tableSP_CRUD_PER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_POSITIONDataTable SP_CRUD_POSITION {
            get {
                return this.tableSP_CRUD_POSITION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_PREPAIDDataTable SP_CRUD_PREPAID {
            get {
                return this.tableSP_CRUD_PREPAID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_PRODUCTDataTable SP_CRUD_PRODUCT {
            get {
                return this.tableSP_CRUD_PRODUCT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_RECEIPTDataTable SP_CRUD_RECEIPT {
            get {
                return this.tableSP_CRUD_RECEIPT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_ROLEDataTable SP_CRUD_ROLE {
            get {
                return this.tableSP_CRUD_ROLE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_ROLE_PERDataTable SP_CRUD_ROLE_PER {
            get {
                return this.tableSP_CRUD_ROLE_PER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_STOCKDataTable SP_CRUD_STOCK {
            get {
                return this.tableSP_CRUD_STOCK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_USERDataTable SP_CRUD_USER {
            get {
                return this.tableSP_CRUD_USER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_CRUD_NOTEDataTable SP_CRUD_NOTE {
            get {
                return this.tableSP_CRUD_NOTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ControlAppDevDataSetIsaac cln = ((ControlAppDevDataSetIsaac)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Log"] != null)) {
                    base.Tables.Add(new LogDataTable(ds.Tables["Log"]));
                }
                if ((ds.Tables["TBL_AREA"] != null)) {
                    base.Tables.Add(new TBL_AREADataTable(ds.Tables["TBL_AREA"]));
                }
                if ((ds.Tables["TBL_CUSTOMER"] != null)) {
                    base.Tables.Add(new TBL_CUSTOMERDataTable(ds.Tables["TBL_CUSTOMER"]));
                }
                if ((ds.Tables["TBL_CXC"] != null)) {
                    base.Tables.Add(new TBL_CXCDataTable(ds.Tables["TBL_CXC"]));
                }
                if ((ds.Tables["TBL_DPT"] != null)) {
                    base.Tables.Add(new TBL_DPTDataTable(ds.Tables["TBL_DPT"]));
                }
                if ((ds.Tables["TBL_NOTE"] != null)) {
                    base.Tables.Add(new TBL_NOTEDataTable(ds.Tables["TBL_NOTE"]));
                }
                if ((ds.Tables["TBL_ORDER"] != null)) {
                    base.Tables.Add(new TBL_ORDERDataTable(ds.Tables["TBL_ORDER"]));
                }
                if ((ds.Tables["TBL_PERMISSION"] != null)) {
                    base.Tables.Add(new TBL_PERMISSIONDataTable(ds.Tables["TBL_PERMISSION"]));
                }
                if ((ds.Tables["TBL_POSITION"] != null)) {
                    base.Tables.Add(new TBL_POSITIONDataTable(ds.Tables["TBL_POSITION"]));
                }
                if ((ds.Tables["TBL_PREPAID"] != null)) {
                    base.Tables.Add(new TBL_PREPAIDDataTable(ds.Tables["TBL_PREPAID"]));
                }
                if ((ds.Tables["TBL_PRODUCT"] != null)) {
                    base.Tables.Add(new TBL_PRODUCTDataTable(ds.Tables["TBL_PRODUCT"]));
                }
                if ((ds.Tables["TBL_RECEIPT"] != null)) {
                    base.Tables.Add(new TBL_RECEIPTDataTable(ds.Tables["TBL_RECEIPT"]));
                }
                if ((ds.Tables["TBL_ROLE"] != null)) {
                    base.Tables.Add(new TBL_ROLEDataTable(ds.Tables["TBL_ROLE"]));
                }
                if ((ds.Tables["TBL_ROLE_PERMISSION"] != null)) {
                    base.Tables.Add(new TBL_ROLE_PERMISSIONDataTable(ds.Tables["TBL_ROLE_PERMISSION"]));
                }
                if ((ds.Tables["TBL_SESSION"] != null)) {
                    base.Tables.Add(new TBL_SESSIONDataTable(ds.Tables["TBL_SESSION"]));
                }
                if ((ds.Tables["TBL_STOCK"] != null)) {
                    base.Tables.Add(new TBL_STOCKDataTable(ds.Tables["TBL_STOCK"]));
                }
                if ((ds.Tables["TBL_USER"] != null)) {
                    base.Tables.Add(new TBL_USERDataTable(ds.Tables["TBL_USER"]));
                }
                if ((ds.Tables["SP_CRUD_AREA"] != null)) {
                    base.Tables.Add(new SP_CRUD_AREADataTable(ds.Tables["SP_CRUD_AREA"]));
                }
                if ((ds.Tables["SP_CRUD_CUSTOMER"] != null)) {
                    base.Tables.Add(new SP_CRUD_CUSTOMERDataTable(ds.Tables["SP_CRUD_CUSTOMER"]));
                }
                if ((ds.Tables["SP_CRUD_CXC"] != null)) {
                    base.Tables.Add(new SP_CRUD_CXCDataTable(ds.Tables["SP_CRUD_CXC"]));
                }
                if ((ds.Tables["SP_CRUD_DPT"] != null)) {
                    base.Tables.Add(new SP_CRUD_DPTDataTable(ds.Tables["SP_CRUD_DPT"]));
                }
                if ((ds.Tables["SP_CRUD_ORDER"] != null)) {
                    base.Tables.Add(new SP_CRUD_ORDERDataTable(ds.Tables["SP_CRUD_ORDER"]));
                }
                if ((ds.Tables["SP_CRUD_PER"] != null)) {
                    base.Tables.Add(new SP_CRUD_PERDataTable(ds.Tables["SP_CRUD_PER"]));
                }
                if ((ds.Tables["SP_CRUD_POSITION"] != null)) {
                    base.Tables.Add(new SP_CRUD_POSITIONDataTable(ds.Tables["SP_CRUD_POSITION"]));
                }
                if ((ds.Tables["SP_CRUD_PREPAID"] != null)) {
                    base.Tables.Add(new SP_CRUD_PREPAIDDataTable(ds.Tables["SP_CRUD_PREPAID"]));
                }
                if ((ds.Tables["SP_CRUD_PRODUCT"] != null)) {
                    base.Tables.Add(new SP_CRUD_PRODUCTDataTable(ds.Tables["SP_CRUD_PRODUCT"]));
                }
                if ((ds.Tables["SP_CRUD_RECEIPT"] != null)) {
                    base.Tables.Add(new SP_CRUD_RECEIPTDataTable(ds.Tables["SP_CRUD_RECEIPT"]));
                }
                if ((ds.Tables["SP_CRUD_ROLE"] != null)) {
                    base.Tables.Add(new SP_CRUD_ROLEDataTable(ds.Tables["SP_CRUD_ROLE"]));
                }
                if ((ds.Tables["SP_CRUD_ROLE_PER"] != null)) {
                    base.Tables.Add(new SP_CRUD_ROLE_PERDataTable(ds.Tables["SP_CRUD_ROLE_PER"]));
                }
                if ((ds.Tables["SP_CRUD_STOCK"] != null)) {
                    base.Tables.Add(new SP_CRUD_STOCKDataTable(ds.Tables["SP_CRUD_STOCK"]));
                }
                if ((ds.Tables["SP_CRUD_USER"] != null)) {
                    base.Tables.Add(new SP_CRUD_USERDataTable(ds.Tables["SP_CRUD_USER"]));
                }
                if ((ds.Tables["SP_CRUD_NOTE"] != null)) {
                    base.Tables.Add(new SP_CRUD_NOTEDataTable(ds.Tables["SP_CRUD_NOTE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableLog = ((LogDataTable)(base.Tables["Log"]));
            if ((initTable == true)) {
                if ((this.tableLog != null)) {
                    this.tableLog.InitVars();
                }
            }
            this.tableTBL_AREA = ((TBL_AREADataTable)(base.Tables["TBL_AREA"]));
            if ((initTable == true)) {
                if ((this.tableTBL_AREA != null)) {
                    this.tableTBL_AREA.InitVars();
                }
            }
            this.tableTBL_CUSTOMER = ((TBL_CUSTOMERDataTable)(base.Tables["TBL_CUSTOMER"]));
            if ((initTable == true)) {
                if ((this.tableTBL_CUSTOMER != null)) {
                    this.tableTBL_CUSTOMER.InitVars();
                }
            }
            this.tableTBL_CXC = ((TBL_CXCDataTable)(base.Tables["TBL_CXC"]));
            if ((initTable == true)) {
                if ((this.tableTBL_CXC != null)) {
                    this.tableTBL_CXC.InitVars();
                }
            }
            this.tableTBL_DPT = ((TBL_DPTDataTable)(base.Tables["TBL_DPT"]));
            if ((initTable == true)) {
                if ((this.tableTBL_DPT != null)) {
                    this.tableTBL_DPT.InitVars();
                }
            }
            this.tableTBL_NOTE = ((TBL_NOTEDataTable)(base.Tables["TBL_NOTE"]));
            if ((initTable == true)) {
                if ((this.tableTBL_NOTE != null)) {
                    this.tableTBL_NOTE.InitVars();
                }
            }
            this.tableTBL_ORDER = ((TBL_ORDERDataTable)(base.Tables["TBL_ORDER"]));
            if ((initTable == true)) {
                if ((this.tableTBL_ORDER != null)) {
                    this.tableTBL_ORDER.InitVars();
                }
            }
            this.tableTBL_PERMISSION = ((TBL_PERMISSIONDataTable)(base.Tables["TBL_PERMISSION"]));
            if ((initTable == true)) {
                if ((this.tableTBL_PERMISSION != null)) {
                    this.tableTBL_PERMISSION.InitVars();
                }
            }
            this.tableTBL_POSITION = ((TBL_POSITIONDataTable)(base.Tables["TBL_POSITION"]));
            if ((initTable == true)) {
                if ((this.tableTBL_POSITION != null)) {
                    this.tableTBL_POSITION.InitVars();
                }
            }
            this.tableTBL_PREPAID = ((TBL_PREPAIDDataTable)(base.Tables["TBL_PREPAID"]));
            if ((initTable == true)) {
                if ((this.tableTBL_PREPAID != null)) {
                    this.tableTBL_PREPAID.InitVars();
                }
            }
            this.tableTBL_PRODUCT = ((TBL_PRODUCTDataTable)(base.Tables["TBL_PRODUCT"]));
            if ((initTable == true)) {
                if ((this.tableTBL_PRODUCT != null)) {
                    this.tableTBL_PRODUCT.InitVars();
                }
            }
            this.tableTBL_RECEIPT = ((TBL_RECEIPTDataTable)(base.Tables["TBL_RECEIPT"]));
            if ((initTable == true)) {
                if ((this.tableTBL_RECEIPT != null)) {
                    this.tableTBL_RECEIPT.InitVars();
                }
            }
            this.tableTBL_ROLE = ((TBL_ROLEDataTable)(base.Tables["TBL_ROLE"]));
            if ((initTable == true)) {
                if ((this.tableTBL_ROLE != null)) {
                    this.tableTBL_ROLE.InitVars();
                }
            }
            this.tableTBL_ROLE_PERMISSION = ((TBL_ROLE_PERMISSIONDataTable)(base.Tables["TBL_ROLE_PERMISSION"]));
            if ((initTable == true)) {
                if ((this.tableTBL_ROLE_PERMISSION != null)) {
                    this.tableTBL_ROLE_PERMISSION.InitVars();
                }
            }
            this.tableTBL_SESSION = ((TBL_SESSIONDataTable)(base.Tables["TBL_SESSION"]));
            if ((initTable == true)) {
                if ((this.tableTBL_SESSION != null)) {
                    this.tableTBL_SESSION.InitVars();
                }
            }
            this.tableTBL_STOCK = ((TBL_STOCKDataTable)(base.Tables["TBL_STOCK"]));
            if ((initTable == true)) {
                if ((this.tableTBL_STOCK != null)) {
                    this.tableTBL_STOCK.InitVars();
                }
            }
            this.tableTBL_USER = ((TBL_USERDataTable)(base.Tables["TBL_USER"]));
            if ((initTable == true)) {
                if ((this.tableTBL_USER != null)) {
                    this.tableTBL_USER.InitVars();
                }
            }
            this.tableSP_CRUD_AREA = ((SP_CRUD_AREADataTable)(base.Tables["SP_CRUD_AREA"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_AREA != null)) {
                    this.tableSP_CRUD_AREA.InitVars();
                }
            }
            this.tableSP_CRUD_CUSTOMER = ((SP_CRUD_CUSTOMERDataTable)(base.Tables["SP_CRUD_CUSTOMER"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_CUSTOMER != null)) {
                    this.tableSP_CRUD_CUSTOMER.InitVars();
                }
            }
            this.tableSP_CRUD_CXC = ((SP_CRUD_CXCDataTable)(base.Tables["SP_CRUD_CXC"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_CXC != null)) {
                    this.tableSP_CRUD_CXC.InitVars();
                }
            }
            this.tableSP_CRUD_DPT = ((SP_CRUD_DPTDataTable)(base.Tables["SP_CRUD_DPT"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_DPT != null)) {
                    this.tableSP_CRUD_DPT.InitVars();
                }
            }
            this.tableSP_CRUD_ORDER = ((SP_CRUD_ORDERDataTable)(base.Tables["SP_CRUD_ORDER"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_ORDER != null)) {
                    this.tableSP_CRUD_ORDER.InitVars();
                }
            }
            this.tableSP_CRUD_PER = ((SP_CRUD_PERDataTable)(base.Tables["SP_CRUD_PER"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_PER != null)) {
                    this.tableSP_CRUD_PER.InitVars();
                }
            }
            this.tableSP_CRUD_POSITION = ((SP_CRUD_POSITIONDataTable)(base.Tables["SP_CRUD_POSITION"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_POSITION != null)) {
                    this.tableSP_CRUD_POSITION.InitVars();
                }
            }
            this.tableSP_CRUD_PREPAID = ((SP_CRUD_PREPAIDDataTable)(base.Tables["SP_CRUD_PREPAID"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_PREPAID != null)) {
                    this.tableSP_CRUD_PREPAID.InitVars();
                }
            }
            this.tableSP_CRUD_PRODUCT = ((SP_CRUD_PRODUCTDataTable)(base.Tables["SP_CRUD_PRODUCT"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_PRODUCT != null)) {
                    this.tableSP_CRUD_PRODUCT.InitVars();
                }
            }
            this.tableSP_CRUD_RECEIPT = ((SP_CRUD_RECEIPTDataTable)(base.Tables["SP_CRUD_RECEIPT"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_RECEIPT != null)) {
                    this.tableSP_CRUD_RECEIPT.InitVars();
                }
            }
            this.tableSP_CRUD_ROLE = ((SP_CRUD_ROLEDataTable)(base.Tables["SP_CRUD_ROLE"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_ROLE != null)) {
                    this.tableSP_CRUD_ROLE.InitVars();
                }
            }
            this.tableSP_CRUD_ROLE_PER = ((SP_CRUD_ROLE_PERDataTable)(base.Tables["SP_CRUD_ROLE_PER"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_ROLE_PER != null)) {
                    this.tableSP_CRUD_ROLE_PER.InitVars();
                }
            }
            this.tableSP_CRUD_STOCK = ((SP_CRUD_STOCKDataTable)(base.Tables["SP_CRUD_STOCK"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_STOCK != null)) {
                    this.tableSP_CRUD_STOCK.InitVars();
                }
            }
            this.tableSP_CRUD_USER = ((SP_CRUD_USERDataTable)(base.Tables["SP_CRUD_USER"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_USER != null)) {
                    this.tableSP_CRUD_USER.InitVars();
                }
            }
            this.tableSP_CRUD_NOTE = ((SP_CRUD_NOTEDataTable)(base.Tables["SP_CRUD_NOTE"]));
            if ((initTable == true)) {
                if ((this.tableSP_CRUD_NOTE != null)) {
                    this.tableSP_CRUD_NOTE.InitVars();
                }
            }
            this.relationFK_TBL_AREA_TBL_DPT = this.Relations["FK_TBL_AREA_TBL_DPT"];
            this.relationFK_TBL_CUSTOMER_TBL_USER = this.Relations["FK_TBL_CUSTOMER_TBL_USER"];
            this.relationFK_TBL_CXC_TBL_STOCK = this.Relations["FK_TBL_CXC_TBL_STOCK"];
            this.relationFK_TBL_CXC_TBL_USER1 = this.Relations["FK_TBL_CXC_TBL_USER1"];
            this.relationFK_TBL_ORDER_TBL_PREPAID = this.Relations["FK_TBL_ORDER_TBL_PREPAID"];
            this.relationFK_TBL_ORDER_TBL_USER = this.Relations["FK_TBL_ORDER_TBL_USER"];
            this.relationFK_TBL_PERMISSION_TBL_DPT = this.Relations["FK_TBL_PERMISSION_TBL_DPT"];
            this.relationFK_TBL_POSITION_TBL_AREA = this.Relations["FK_TBL_POSITION_TBL_AREA"];
            this.relationFK_TBL_PREPAID_TBL_CUSTOMER = this.Relations["FK_TBL_PREPAID_TBL_CUSTOMER"];
            this.relationFK_TBL_PREPAID_TBL_PRODUCT = this.Relations["FK_TBL_PREPAID_TBL_PRODUCT"];
            this.relationFK_TBL_PREPAID_TBL_USER = this.Relations["FK_TBL_PREPAID_TBL_USER"];
            this.relationFK_TBL_PRODUCT_TBL_USER = this.Relations["FK_TBL_PRODUCT_TBL_USER"];
            this.relationFK_TBL_RECEIPT_TBL_PRICE_TAG = this.Relations["FK_TBL_RECEIPT_TBL_PRICE_TAG"];
            this.relationFK_TBL_RECEIPT_TBL_STOCK = this.Relations["FK_TBL_RECEIPT_TBL_STOCK"];
            this.relationFK_TBL_RECEIPT_TBL_USER = this.Relations["FK_TBL_RECEIPT_TBL_USER"];
            this.relationFK_TBL_ROLE_PERMISSION_TBL_PERMISSION = this.Relations["FK_TBL_ROLE_PERMISSION_TBL_PERMISSION"];
            this.relationFK_TBL_ROLE_PERMISSION_TBL_ROLE = this.Relations["FK_TBL_ROLE_PERMISSION_TBL_ROLE"];
            this.relationFK_TBL_SESSION_TBL_USER = this.Relations["FK_TBL_SESSION_TBL_USER"];
            this.relationFK_TBL_STOCK_TBL_PRODUCT = this.Relations["FK_TBL_STOCK_TBL_PRODUCT"];
            this.relationFK_TBL_STOCK_TBL_USER = this.Relations["FK_TBL_STOCK_TBL_USER"];
            this.relationFK_TBL_USER_TBL_AREA = this.Relations["FK_TBL_USER_TBL_AREA"];
            this.relationFK_TBL_USER_TBL_DPT = this.Relations["FK_TBL_USER_TBL_DPT"];
            this.relationFK_TBL_USER_TBL_POSITION = this.Relations["FK_TBL_USER_TBL_POSITION"];
            this.relationFK_TBL_USER_TBL_ROLE = this.Relations["FK_TBL_USER_TBL_ROLE"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ControlAppDevDataSetIsaac";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ControlAppDevDataSetIsaac.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLog = new LogDataTable();
            base.Tables.Add(this.tableLog);
            this.tableTBL_AREA = new TBL_AREADataTable();
            base.Tables.Add(this.tableTBL_AREA);
            this.tableTBL_CUSTOMER = new TBL_CUSTOMERDataTable();
            base.Tables.Add(this.tableTBL_CUSTOMER);
            this.tableTBL_CXC = new TBL_CXCDataTable();
            base.Tables.Add(this.tableTBL_CXC);
            this.tableTBL_DPT = new TBL_DPTDataTable();
            base.Tables.Add(this.tableTBL_DPT);
            this.tableTBL_NOTE = new TBL_NOTEDataTable();
            base.Tables.Add(this.tableTBL_NOTE);
            this.tableTBL_ORDER = new TBL_ORDERDataTable();
            base.Tables.Add(this.tableTBL_ORDER);
            this.tableTBL_PERMISSION = new TBL_PERMISSIONDataTable();
            base.Tables.Add(this.tableTBL_PERMISSION);
            this.tableTBL_POSITION = new TBL_POSITIONDataTable();
            base.Tables.Add(this.tableTBL_POSITION);
            this.tableTBL_PREPAID = new TBL_PREPAIDDataTable();
            base.Tables.Add(this.tableTBL_PREPAID);
            this.tableTBL_PRODUCT = new TBL_PRODUCTDataTable();
            base.Tables.Add(this.tableTBL_PRODUCT);
            this.tableTBL_RECEIPT = new TBL_RECEIPTDataTable();
            base.Tables.Add(this.tableTBL_RECEIPT);
            this.tableTBL_ROLE = new TBL_ROLEDataTable();
            base.Tables.Add(this.tableTBL_ROLE);
            this.tableTBL_ROLE_PERMISSION = new TBL_ROLE_PERMISSIONDataTable();
            base.Tables.Add(this.tableTBL_ROLE_PERMISSION);
            this.tableTBL_SESSION = new TBL_SESSIONDataTable();
            base.Tables.Add(this.tableTBL_SESSION);
            this.tableTBL_STOCK = new TBL_STOCKDataTable();
            base.Tables.Add(this.tableTBL_STOCK);
            this.tableTBL_USER = new TBL_USERDataTable();
            base.Tables.Add(this.tableTBL_USER);
            this.tableSP_CRUD_AREA = new SP_CRUD_AREADataTable();
            base.Tables.Add(this.tableSP_CRUD_AREA);
            this.tableSP_CRUD_CUSTOMER = new SP_CRUD_CUSTOMERDataTable();
            base.Tables.Add(this.tableSP_CRUD_CUSTOMER);
            this.tableSP_CRUD_CXC = new SP_CRUD_CXCDataTable();
            base.Tables.Add(this.tableSP_CRUD_CXC);
            this.tableSP_CRUD_DPT = new SP_CRUD_DPTDataTable();
            base.Tables.Add(this.tableSP_CRUD_DPT);
            this.tableSP_CRUD_ORDER = new SP_CRUD_ORDERDataTable();
            base.Tables.Add(this.tableSP_CRUD_ORDER);
            this.tableSP_CRUD_PER = new SP_CRUD_PERDataTable();
            base.Tables.Add(this.tableSP_CRUD_PER);
            this.tableSP_CRUD_POSITION = new SP_CRUD_POSITIONDataTable();
            base.Tables.Add(this.tableSP_CRUD_POSITION);
            this.tableSP_CRUD_PREPAID = new SP_CRUD_PREPAIDDataTable();
            base.Tables.Add(this.tableSP_CRUD_PREPAID);
            this.tableSP_CRUD_PRODUCT = new SP_CRUD_PRODUCTDataTable();
            base.Tables.Add(this.tableSP_CRUD_PRODUCT);
            this.tableSP_CRUD_RECEIPT = new SP_CRUD_RECEIPTDataTable();
            base.Tables.Add(this.tableSP_CRUD_RECEIPT);
            this.tableSP_CRUD_ROLE = new SP_CRUD_ROLEDataTable();
            base.Tables.Add(this.tableSP_CRUD_ROLE);
            this.tableSP_CRUD_ROLE_PER = new SP_CRUD_ROLE_PERDataTable();
            base.Tables.Add(this.tableSP_CRUD_ROLE_PER);
            this.tableSP_CRUD_STOCK = new SP_CRUD_STOCKDataTable();
            base.Tables.Add(this.tableSP_CRUD_STOCK);
            this.tableSP_CRUD_USER = new SP_CRUD_USERDataTable();
            base.Tables.Add(this.tableSP_CRUD_USER);
            this.tableSP_CRUD_NOTE = new SP_CRUD_NOTEDataTable();
            base.Tables.Add(this.tableSP_CRUD_NOTE);
            this.relationFK_TBL_AREA_TBL_DPT = new global::System.Data.DataRelation("FK_TBL_AREA_TBL_DPT", new global::System.Data.DataColumn[] {
                        this.tableTBL_DPT.ID_DPTColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_AREA.ID_DPTColumn}, false);
            this.Relations.Add(this.relationFK_TBL_AREA_TBL_DPT);
            this.relationFK_TBL_CUSTOMER_TBL_USER = new global::System.Data.DataRelation("FK_TBL_CUSTOMER_TBL_USER", new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_USERColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_CUSTOMER.CUSTOMER_CREATEBYColumn}, false);
            this.Relations.Add(this.relationFK_TBL_CUSTOMER_TBL_USER);
            this.relationFK_TBL_CXC_TBL_STOCK = new global::System.Data.DataRelation("FK_TBL_CXC_TBL_STOCK", new global::System.Data.DataColumn[] {
                        this.tableTBL_STOCK.ID_STOCKColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_CXC.ID_STOCKColumn}, false);
            this.Relations.Add(this.relationFK_TBL_CXC_TBL_STOCK);
            this.relationFK_TBL_CXC_TBL_USER1 = new global::System.Data.DataRelation("FK_TBL_CXC_TBL_USER1", new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_USERColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_CXC.ID_USERColumn}, false);
            this.Relations.Add(this.relationFK_TBL_CXC_TBL_USER1);
            this.relationFK_TBL_ORDER_TBL_PREPAID = new global::System.Data.DataRelation("FK_TBL_ORDER_TBL_PREPAID", new global::System.Data.DataColumn[] {
                        this.tableTBL_PREPAID.ID_PREPAIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_ORDER.ID_PREPAIDColumn}, false);
            this.Relations.Add(this.relationFK_TBL_ORDER_TBL_PREPAID);
            this.relationFK_TBL_ORDER_TBL_USER = new global::System.Data.DataRelation("FK_TBL_ORDER_TBL_USER", new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_USERColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_ORDER.ORDER_CREATEBYColumn}, false);
            this.Relations.Add(this.relationFK_TBL_ORDER_TBL_USER);
            this.relationFK_TBL_PERMISSION_TBL_DPT = new global::System.Data.DataRelation("FK_TBL_PERMISSION_TBL_DPT", new global::System.Data.DataColumn[] {
                        this.tableTBL_DPT.ID_DPTColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_PERMISSION.ID_DPTColumn}, false);
            this.Relations.Add(this.relationFK_TBL_PERMISSION_TBL_DPT);
            this.relationFK_TBL_POSITION_TBL_AREA = new global::System.Data.DataRelation("FK_TBL_POSITION_TBL_AREA", new global::System.Data.DataColumn[] {
                        this.tableTBL_AREA.ID_AREAColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_POSITION.ID_AREAColumn}, false);
            this.Relations.Add(this.relationFK_TBL_POSITION_TBL_AREA);
            this.relationFK_TBL_PREPAID_TBL_CUSTOMER = new global::System.Data.DataRelation("FK_TBL_PREPAID_TBL_CUSTOMER", new global::System.Data.DataColumn[] {
                        this.tableTBL_CUSTOMER.ID_CUSTOMERColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_PREPAID.ID_CUSTOMERColumn}, false);
            this.Relations.Add(this.relationFK_TBL_PREPAID_TBL_CUSTOMER);
            this.relationFK_TBL_PREPAID_TBL_PRODUCT = new global::System.Data.DataRelation("FK_TBL_PREPAID_TBL_PRODUCT", new global::System.Data.DataColumn[] {
                        this.tableTBL_PRODUCT.ID_PRODUCTColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_PREPAID.ID_PRODUCTColumn}, false);
            this.Relations.Add(this.relationFK_TBL_PREPAID_TBL_PRODUCT);
            this.relationFK_TBL_PREPAID_TBL_USER = new global::System.Data.DataRelation("FK_TBL_PREPAID_TBL_USER", new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_USERColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_PREPAID.PREPAID_CREATEBYColumn}, false);
            this.Relations.Add(this.relationFK_TBL_PREPAID_TBL_USER);
            this.relationFK_TBL_PRODUCT_TBL_USER = new global::System.Data.DataRelation("FK_TBL_PRODUCT_TBL_USER", new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_USERColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_PRODUCT.PRODUCT_CREATEBYColumn}, false);
            this.Relations.Add(this.relationFK_TBL_PRODUCT_TBL_USER);
            this.relationFK_TBL_RECEIPT_TBL_PRICE_TAG = new global::System.Data.DataRelation("FK_TBL_RECEIPT_TBL_PRICE_TAG", new global::System.Data.DataColumn[] {
                        this.tableTBL_PRODUCT.ID_PRODUCTColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_RECEIPT.ID_PRODUCTColumn}, false);
            this.Relations.Add(this.relationFK_TBL_RECEIPT_TBL_PRICE_TAG);
            this.relationFK_TBL_RECEIPT_TBL_STOCK = new global::System.Data.DataRelation("FK_TBL_RECEIPT_TBL_STOCK", new global::System.Data.DataColumn[] {
                        this.tableTBL_STOCK.ID_STOCKColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_RECEIPT.ID_STOCKColumn}, false);
            this.Relations.Add(this.relationFK_TBL_RECEIPT_TBL_STOCK);
            this.relationFK_TBL_RECEIPT_TBL_USER = new global::System.Data.DataRelation("FK_TBL_RECEIPT_TBL_USER", new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_USERColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_RECEIPT.RECEIPT_CREATEBYColumn}, false);
            this.Relations.Add(this.relationFK_TBL_RECEIPT_TBL_USER);
            this.relationFK_TBL_ROLE_PERMISSION_TBL_PERMISSION = new global::System.Data.DataRelation("FK_TBL_ROLE_PERMISSION_TBL_PERMISSION", new global::System.Data.DataColumn[] {
                        this.tableTBL_PERMISSION.ID_PERColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_ROLE_PERMISSION.ID_PERColumn}, false);
            this.Relations.Add(this.relationFK_TBL_ROLE_PERMISSION_TBL_PERMISSION);
            this.relationFK_TBL_ROLE_PERMISSION_TBL_ROLE = new global::System.Data.DataRelation("FK_TBL_ROLE_PERMISSION_TBL_ROLE", new global::System.Data.DataColumn[] {
                        this.tableTBL_ROLE.ID_ROLEColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_ROLE_PERMISSION.ID_ROLEColumn}, false);
            this.Relations.Add(this.relationFK_TBL_ROLE_PERMISSION_TBL_ROLE);
            this.relationFK_TBL_SESSION_TBL_USER = new global::System.Data.DataRelation("FK_TBL_SESSION_TBL_USER", new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_USERColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_SESSION.ID_USERColumn}, false);
            this.Relations.Add(this.relationFK_TBL_SESSION_TBL_USER);
            this.relationFK_TBL_STOCK_TBL_PRODUCT = new global::System.Data.DataRelation("FK_TBL_STOCK_TBL_PRODUCT", new global::System.Data.DataColumn[] {
                        this.tableTBL_PRODUCT.ID_PRODUCTColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_STOCK.ID_PRODUCTColumn}, false);
            this.Relations.Add(this.relationFK_TBL_STOCK_TBL_PRODUCT);
            this.relationFK_TBL_STOCK_TBL_USER = new global::System.Data.DataRelation("FK_TBL_STOCK_TBL_USER", new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_USERColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_STOCK.STOCK_CREATEBYColumn}, false);
            this.Relations.Add(this.relationFK_TBL_STOCK_TBL_USER);
            this.relationFK_TBL_USER_TBL_AREA = new global::System.Data.DataRelation("FK_TBL_USER_TBL_AREA", new global::System.Data.DataColumn[] {
                        this.tableTBL_AREA.ID_AREAColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_AREAColumn}, false);
            this.Relations.Add(this.relationFK_TBL_USER_TBL_AREA);
            this.relationFK_TBL_USER_TBL_DPT = new global::System.Data.DataRelation("FK_TBL_USER_TBL_DPT", new global::System.Data.DataColumn[] {
                        this.tableTBL_DPT.ID_DPTColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_DPTColumn}, false);
            this.Relations.Add(this.relationFK_TBL_USER_TBL_DPT);
            this.relationFK_TBL_USER_TBL_POSITION = new global::System.Data.DataRelation("FK_TBL_USER_TBL_POSITION", new global::System.Data.DataColumn[] {
                        this.tableTBL_POSITION.ID_POSITIONColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_POSITIONColumn}, false);
            this.Relations.Add(this.relationFK_TBL_USER_TBL_POSITION);
            this.relationFK_TBL_USER_TBL_ROLE = new global::System.Data.DataRelation("FK_TBL_USER_TBL_ROLE", new global::System.Data.DataColumn[] {
                        this.tableTBL_ROLE.ID_ROLEColumn}, new global::System.Data.DataColumn[] {
                        this.tableTBL_USER.ID_ROLEColumn}, false);
            this.Relations.Add(this.relationFK_TBL_USER_TBL_ROLE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeLog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_AREA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_CUSTOMER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_CXC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_DPT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_NOTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_ORDER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_PERMISSION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_POSITION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_PREPAID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_PRODUCT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_RECEIPT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_ROLE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_ROLE_PERMISSION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_SESSION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_STOCK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBL_USER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_AREA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_CUSTOMER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_CXC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_DPT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_ORDER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_PER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_POSITION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_PREPAID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_PRODUCT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_RECEIPT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_ROLE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_ROLE_PER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_STOCK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_USER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSP_CRUD_NOTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void LogRowChangeEventHandler(object sender, LogRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_AREARowChangeEventHandler(object sender, TBL_AREARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_CUSTOMERRowChangeEventHandler(object sender, TBL_CUSTOMERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_CXCRowChangeEventHandler(object sender, TBL_CXCRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_DPTRowChangeEventHandler(object sender, TBL_DPTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_NOTERowChangeEventHandler(object sender, TBL_NOTERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_ORDERRowChangeEventHandler(object sender, TBL_ORDERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_PERMISSIONRowChangeEventHandler(object sender, TBL_PERMISSIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_POSITIONRowChangeEventHandler(object sender, TBL_POSITIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_PREPAIDRowChangeEventHandler(object sender, TBL_PREPAIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_PRODUCTRowChangeEventHandler(object sender, TBL_PRODUCTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_RECEIPTRowChangeEventHandler(object sender, TBL_RECEIPTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_ROLERowChangeEventHandler(object sender, TBL_ROLERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_ROLE_PERMISSIONRowChangeEventHandler(object sender, TBL_ROLE_PERMISSIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_SESSIONRowChangeEventHandler(object sender, TBL_SESSIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_STOCKRowChangeEventHandler(object sender, TBL_STOCKRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBL_USERRowChangeEventHandler(object sender, TBL_USERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_AREARowChangeEventHandler(object sender, SP_CRUD_AREARowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_CUSTOMERRowChangeEventHandler(object sender, SP_CRUD_CUSTOMERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_CXCRowChangeEventHandler(object sender, SP_CRUD_CXCRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_DPTRowChangeEventHandler(object sender, SP_CRUD_DPTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_ORDERRowChangeEventHandler(object sender, SP_CRUD_ORDERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_PERRowChangeEventHandler(object sender, SP_CRUD_PERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_POSITIONRowChangeEventHandler(object sender, SP_CRUD_POSITIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_PREPAIDRowChangeEventHandler(object sender, SP_CRUD_PREPAIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_PRODUCTRowChangeEventHandler(object sender, SP_CRUD_PRODUCTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_RECEIPTRowChangeEventHandler(object sender, SP_CRUD_RECEIPTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_ROLERowChangeEventHandler(object sender, SP_CRUD_ROLERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_ROLE_PERRowChangeEventHandler(object sender, SP_CRUD_ROLE_PERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_STOCKRowChangeEventHandler(object sender, SP_CRUD_STOCKRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_USERRowChangeEventHandler(object sender, SP_CRUD_USERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SP_CRUD_NOTERowChangeEventHandler(object sender, SP_CRUD_NOTERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LogDataTable : global::System.Data.TypedTableBase<LogRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnThread;
            
            private global::System.Data.DataColumn columnLevel;
            
            private global::System.Data.DataColumn columnLogger;
            
            private global::System.Data.DataColumn columnMessage;
            
            private global::System.Data.DataColumn columnException;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LogDataTable() {
                this.TableName = "Log";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected LogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ThreadColumn {
                get {
                    return this.columnThread;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LevelColumn {
                get {
                    return this.columnLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LoggerColumn {
                get {
                    return this.columnLogger;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MessageColumn {
                get {
                    return this.columnMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ExceptionColumn {
                get {
                    return this.columnException;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LogRow this[int index] {
                get {
                    return ((LogRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LogRowChangeEventHandler LogRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LogRowChangeEventHandler LogRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LogRowChangeEventHandler LogRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event LogRowChangeEventHandler LogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddLogRow(LogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LogRow AddLogRow(System.DateTime Date, string Thread, string Level, string Logger, string Message, string Exception) {
                LogRow rowLogRow = ((LogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Date,
                        Thread,
                        Level,
                        Logger,
                        Message,
                        Exception};
                rowLogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLogRow);
                return rowLogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LogDataTable cln = ((LogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnDate = base.Columns["Date"];
                this.columnThread = base.Columns["Thread"];
                this.columnLevel = base.Columns["Level"];
                this.columnLogger = base.Columns["Logger"];
                this.columnMessage = base.Columns["Message"];
                this.columnException = base.Columns["Exception"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnThread = new global::System.Data.DataColumn("Thread", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThread);
                this.columnLevel = new global::System.Data.DataColumn("Level", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevel);
                this.columnLogger = new global::System.Data.DataColumn("Logger", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogger);
                this.columnMessage = new global::System.Data.DataColumn("Message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessage);
                this.columnException = new global::System.Data.DataColumn("Exception", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnException);
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnDate.AllowDBNull = false;
                this.columnThread.AllowDBNull = false;
                this.columnThread.MaxLength = 255;
                this.columnLevel.AllowDBNull = false;
                this.columnLevel.MaxLength = 50;
                this.columnLogger.AllowDBNull = false;
                this.columnLogger.MaxLength = 255;
                this.columnMessage.AllowDBNull = false;
                this.columnMessage.MaxLength = 4000;
                this.columnException.MaxLength = 2000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LogRow NewLogRow() {
                return ((LogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LogRowChanged != null)) {
                    this.LogRowChanged(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LogRowChanging != null)) {
                    this.LogRowChanging(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LogRowDeleted != null)) {
                    this.LogRowDeleted(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LogRowDeleting != null)) {
                    this.LogRowDeleting(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveLogRow(LogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_AREADataTable : global::System.Data.TypedTableBase<TBL_AREARow> {
            
            private global::System.Data.DataColumn columnID_AREA;
            
            private global::System.Data.DataColumn columnID_DPT;
            
            private global::System.Data.DataColumn columnAREA_NAME;
            
            private global::System.Data.DataColumn columnAREA_STATE;
            
            private global::System.Data.DataColumn columnAREA_CREATEBY;
            
            private global::System.Data.DataColumn columnAREA_UPDATEDBY;
            
            private global::System.Data.DataColumn columnAREA_CREATEDATE;
            
            private global::System.Data.DataColumn columnAREA_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_AREADataTable() {
                this.TableName = "TBL_AREA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_AREADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_AREADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_AREAColumn {
                get {
                    return this.columnID_AREA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_DPTColumn {
                get {
                    return this.columnID_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_NAMEColumn {
                get {
                    return this.columnAREA_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_STATEColumn {
                get {
                    return this.columnAREA_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_CREATEBYColumn {
                get {
                    return this.columnAREA_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_UPDATEDBYColumn {
                get {
                    return this.columnAREA_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_CREATEDATEColumn {
                get {
                    return this.columnAREA_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_UPDATEDATEColumn {
                get {
                    return this.columnAREA_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_AREARow this[int index] {
                get {
                    return ((TBL_AREARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_AREARowChangeEventHandler TBL_AREARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_AREARowChangeEventHandler TBL_AREARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_AREARowChangeEventHandler TBL_AREARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_AREARowChangeEventHandler TBL_AREARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_AREARow(TBL_AREARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_AREARow AddTBL_AREARow(TBL_DPTRow parentTBL_DPTRowByFK_TBL_AREA_TBL_DPT, string AREA_NAME, bool AREA_STATE, string AREA_CREATEBY, string AREA_UPDATEDBY, System.DateTime AREA_CREATEDATE, System.DateTime AREA_UPDATEDATE) {
                TBL_AREARow rowTBL_AREARow = ((TBL_AREARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        AREA_NAME,
                        AREA_STATE,
                        AREA_CREATEBY,
                        AREA_UPDATEDBY,
                        AREA_CREATEDATE,
                        AREA_UPDATEDATE};
                if ((parentTBL_DPTRowByFK_TBL_AREA_TBL_DPT != null)) {
                    columnValuesArray[1] = parentTBL_DPTRowByFK_TBL_AREA_TBL_DPT[0];
                }
                rowTBL_AREARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_AREARow);
                return rowTBL_AREARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_AREARow FindByID_AREA(int ID_AREA) {
                return ((TBL_AREARow)(this.Rows.Find(new object[] {
                            ID_AREA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_AREADataTable cln = ((TBL_AREADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_AREADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_AREA = base.Columns["ID_AREA"];
                this.columnID_DPT = base.Columns["ID_DPT"];
                this.columnAREA_NAME = base.Columns["AREA_NAME"];
                this.columnAREA_STATE = base.Columns["AREA_STATE"];
                this.columnAREA_CREATEBY = base.Columns["AREA_CREATEBY"];
                this.columnAREA_UPDATEDBY = base.Columns["AREA_UPDATEDBY"];
                this.columnAREA_CREATEDATE = base.Columns["AREA_CREATEDATE"];
                this.columnAREA_UPDATEDATE = base.Columns["AREA_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_AREA = new global::System.Data.DataColumn("ID_AREA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AREA);
                this.columnID_DPT = new global::System.Data.DataColumn("ID_DPT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_DPT);
                this.columnAREA_NAME = new global::System.Data.DataColumn("AREA_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_NAME);
                this.columnAREA_STATE = new global::System.Data.DataColumn("AREA_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_STATE);
                this.columnAREA_CREATEBY = new global::System.Data.DataColumn("AREA_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_CREATEBY);
                this.columnAREA_UPDATEDBY = new global::System.Data.DataColumn("AREA_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_UPDATEDBY);
                this.columnAREA_CREATEDATE = new global::System.Data.DataColumn("AREA_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_CREATEDATE);
                this.columnAREA_UPDATEDATE = new global::System.Data.DataColumn("AREA_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_AREA}, true));
                this.columnID_AREA.AutoIncrement = true;
                this.columnID_AREA.AutoIncrementSeed = -1;
                this.columnID_AREA.AutoIncrementStep = -1;
                this.columnID_AREA.AllowDBNull = false;
                this.columnID_AREA.ReadOnly = true;
                this.columnID_AREA.Unique = true;
                this.columnAREA_NAME.AllowDBNull = false;
                this.columnAREA_NAME.MaxLength = 25;
                this.columnAREA_STATE.AllowDBNull = false;
                this.columnAREA_CREATEBY.AllowDBNull = false;
                this.columnAREA_CREATEBY.MaxLength = 50;
                this.columnAREA_UPDATEDBY.MaxLength = 50;
                this.columnAREA_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_AREARow NewTBL_AREARow() {
                return ((TBL_AREARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_AREARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_AREARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_AREARowChanged != null)) {
                    this.TBL_AREARowChanged(this, new TBL_AREARowChangeEvent(((TBL_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_AREARowChanging != null)) {
                    this.TBL_AREARowChanging(this, new TBL_AREARowChangeEvent(((TBL_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_AREARowDeleted != null)) {
                    this.TBL_AREARowDeleted(this, new TBL_AREARowChangeEvent(((TBL_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_AREARowDeleting != null)) {
                    this.TBL_AREARowDeleting(this, new TBL_AREARowChangeEvent(((TBL_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_AREARow(TBL_AREARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_AREADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_CUSTOMERDataTable : global::System.Data.TypedTableBase<TBL_CUSTOMERRow> {
            
            private global::System.Data.DataColumn columnID_CUSTOMER;
            
            private global::System.Data.DataColumn columnCUSTOMER_NAME;
            
            private global::System.Data.DataColumn columnCUSTOMER_STATE;
            
            private global::System.Data.DataColumn columnCUSTOMER_CREATEBY;
            
            private global::System.Data.DataColumn columnCUSTOMER_UPDATEDBY;
            
            private global::System.Data.DataColumn columnCUSTOMER_CREATEDATE;
            
            private global::System.Data.DataColumn columnCUSTOMER_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CUSTOMERDataTable() {
                this.TableName = "TBL_CUSTOMER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_CUSTOMERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_CUSTOMERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_CUSTOMERColumn {
                get {
                    return this.columnID_CUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_NAMEColumn {
                get {
                    return this.columnCUSTOMER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_STATEColumn {
                get {
                    return this.columnCUSTOMER_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_CREATEBYColumn {
                get {
                    return this.columnCUSTOMER_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_UPDATEDBYColumn {
                get {
                    return this.columnCUSTOMER_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_CREATEDATEColumn {
                get {
                    return this.columnCUSTOMER_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_UPDATEDATEColumn {
                get {
                    return this.columnCUSTOMER_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CUSTOMERRow this[int index] {
                get {
                    return ((TBL_CUSTOMERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_CUSTOMERRowChangeEventHandler TBL_CUSTOMERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_CUSTOMERRowChangeEventHandler TBL_CUSTOMERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_CUSTOMERRowChangeEventHandler TBL_CUSTOMERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_CUSTOMERRowChangeEventHandler TBL_CUSTOMERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_CUSTOMERRow(TBL_CUSTOMERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CUSTOMERRow AddTBL_CUSTOMERRow(string ID_CUSTOMER, string CUSTOMER_NAME, bool CUSTOMER_STATE, TBL_USERRow parentTBL_USERRowByFK_TBL_CUSTOMER_TBL_USER, string CUSTOMER_UPDATEDBY, System.DateTime CUSTOMER_CREATEDATE, System.DateTime CUSTOMER_UPDATEDATE) {
                TBL_CUSTOMERRow rowTBL_CUSTOMERRow = ((TBL_CUSTOMERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_CUSTOMER,
                        CUSTOMER_NAME,
                        CUSTOMER_STATE,
                        null,
                        CUSTOMER_UPDATEDBY,
                        CUSTOMER_CREATEDATE,
                        CUSTOMER_UPDATEDATE};
                if ((parentTBL_USERRowByFK_TBL_CUSTOMER_TBL_USER != null)) {
                    columnValuesArray[3] = parentTBL_USERRowByFK_TBL_CUSTOMER_TBL_USER[0];
                }
                rowTBL_CUSTOMERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_CUSTOMERRow);
                return rowTBL_CUSTOMERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CUSTOMERRow FindByID_CUSTOMER(string ID_CUSTOMER) {
                return ((TBL_CUSTOMERRow)(this.Rows.Find(new object[] {
                            ID_CUSTOMER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_CUSTOMERDataTable cln = ((TBL_CUSTOMERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_CUSTOMERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_CUSTOMER = base.Columns["ID_CUSTOMER"];
                this.columnCUSTOMER_NAME = base.Columns["CUSTOMER_NAME"];
                this.columnCUSTOMER_STATE = base.Columns["CUSTOMER_STATE"];
                this.columnCUSTOMER_CREATEBY = base.Columns["CUSTOMER_CREATEBY"];
                this.columnCUSTOMER_UPDATEDBY = base.Columns["CUSTOMER_UPDATEDBY"];
                this.columnCUSTOMER_CREATEDATE = base.Columns["CUSTOMER_CREATEDATE"];
                this.columnCUSTOMER_UPDATEDATE = base.Columns["CUSTOMER_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_CUSTOMER = new global::System.Data.DataColumn("ID_CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CUSTOMER);
                this.columnCUSTOMER_NAME = new global::System.Data.DataColumn("CUSTOMER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_NAME);
                this.columnCUSTOMER_STATE = new global::System.Data.DataColumn("CUSTOMER_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_STATE);
                this.columnCUSTOMER_CREATEBY = new global::System.Data.DataColumn("CUSTOMER_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_CREATEBY);
                this.columnCUSTOMER_UPDATEDBY = new global::System.Data.DataColumn("CUSTOMER_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_UPDATEDBY);
                this.columnCUSTOMER_CREATEDATE = new global::System.Data.DataColumn("CUSTOMER_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_CREATEDATE);
                this.columnCUSTOMER_UPDATEDATE = new global::System.Data.DataColumn("CUSTOMER_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_CUSTOMER}, true));
                this.columnID_CUSTOMER.AllowDBNull = false;
                this.columnID_CUSTOMER.Unique = true;
                this.columnID_CUSTOMER.MaxLength = 50;
                this.columnCUSTOMER_NAME.AllowDBNull = false;
                this.columnCUSTOMER_NAME.MaxLength = 25;
                this.columnCUSTOMER_STATE.AllowDBNull = false;
                this.columnCUSTOMER_CREATEBY.AllowDBNull = false;
                this.columnCUSTOMER_CREATEBY.MaxLength = 50;
                this.columnCUSTOMER_UPDATEDBY.MaxLength = 50;
                this.columnCUSTOMER_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CUSTOMERRow NewTBL_CUSTOMERRow() {
                return ((TBL_CUSTOMERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_CUSTOMERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_CUSTOMERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_CUSTOMERRowChanged != null)) {
                    this.TBL_CUSTOMERRowChanged(this, new TBL_CUSTOMERRowChangeEvent(((TBL_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_CUSTOMERRowChanging != null)) {
                    this.TBL_CUSTOMERRowChanging(this, new TBL_CUSTOMERRowChangeEvent(((TBL_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_CUSTOMERRowDeleted != null)) {
                    this.TBL_CUSTOMERRowDeleted(this, new TBL_CUSTOMERRowChangeEvent(((TBL_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_CUSTOMERRowDeleting != null)) {
                    this.TBL_CUSTOMERRowDeleting(this, new TBL_CUSTOMERRowChangeEvent(((TBL_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_CUSTOMERRow(TBL_CUSTOMERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_CUSTOMERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_CXCDataTable : global::System.Data.TypedTableBase<TBL_CXCRow> {
            
            private global::System.Data.DataColumn columnID_CXC;
            
            private global::System.Data.DataColumn columnID_USER;
            
            private global::System.Data.DataColumn columnID_STOCK;
            
            private global::System.Data.DataColumn columnDATE_CXC;
            
            private global::System.Data.DataColumn columnQUANTITY_RETREAT;
            
            private global::System.Data.DataColumn columnQUANTITY_RETURN;
            
            private global::System.Data.DataColumn columnTOTAL_CXC;
            
            private global::System.Data.DataColumn columnBALANCE_CXC;
            
            private global::System.Data.DataColumn columnCXC_STATE;
            
            private global::System.Data.DataColumn columnCXC_CREATEBY;
            
            private global::System.Data.DataColumn columnCXC_UPDATEDBY;
            
            private global::System.Data.DataColumn columnCXC_CREATEDATE;
            
            private global::System.Data.DataColumn columnCXC_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CXCDataTable() {
                this.TableName = "TBL_CXC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_CXCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_CXCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_CXCColumn {
                get {
                    return this.columnID_CXC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_USERColumn {
                get {
                    return this.columnID_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_STOCKColumn {
                get {
                    return this.columnID_STOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATE_CXCColumn {
                get {
                    return this.columnDATE_CXC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QUANTITY_RETREATColumn {
                get {
                    return this.columnQUANTITY_RETREAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QUANTITY_RETURNColumn {
                get {
                    return this.columnQUANTITY_RETURN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_CXCColumn {
                get {
                    return this.columnTOTAL_CXC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BALANCE_CXCColumn {
                get {
                    return this.columnBALANCE_CXC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CXC_STATEColumn {
                get {
                    return this.columnCXC_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CXC_CREATEBYColumn {
                get {
                    return this.columnCXC_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CXC_UPDATEDBYColumn {
                get {
                    return this.columnCXC_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CXC_CREATEDATEColumn {
                get {
                    return this.columnCXC_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CXC_UPDATEDATEColumn {
                get {
                    return this.columnCXC_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CXCRow this[int index] {
                get {
                    return ((TBL_CXCRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_CXCRowChangeEventHandler TBL_CXCRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_CXCRowChangeEventHandler TBL_CXCRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_CXCRowChangeEventHandler TBL_CXCRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_CXCRowChangeEventHandler TBL_CXCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_CXCRow(TBL_CXCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CXCRow AddTBL_CXCRow(TBL_USERRow parentTBL_USERRowByFK_TBL_CXC_TBL_USER1, TBL_STOCKRow parentTBL_STOCKRowByFK_TBL_CXC_TBL_STOCK, System.DateTime DATE_CXC, int QUANTITY_RETREAT, int QUANTITY_RETURN, decimal TOTAL_CXC, int BALANCE_CXC, bool CXC_STATE, string CXC_CREATEBY, string CXC_UPDATEDBY, System.DateTime CXC_CREATEDATE, System.DateTime CXC_UPDATEDATE) {
                TBL_CXCRow rowTBL_CXCRow = ((TBL_CXCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        DATE_CXC,
                        QUANTITY_RETREAT,
                        QUANTITY_RETURN,
                        TOTAL_CXC,
                        BALANCE_CXC,
                        CXC_STATE,
                        CXC_CREATEBY,
                        CXC_UPDATEDBY,
                        CXC_CREATEDATE,
                        CXC_UPDATEDATE};
                if ((parentTBL_USERRowByFK_TBL_CXC_TBL_USER1 != null)) {
                    columnValuesArray[1] = parentTBL_USERRowByFK_TBL_CXC_TBL_USER1[0];
                }
                if ((parentTBL_STOCKRowByFK_TBL_CXC_TBL_STOCK != null)) {
                    columnValuesArray[2] = parentTBL_STOCKRowByFK_TBL_CXC_TBL_STOCK[0];
                }
                rowTBL_CXCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_CXCRow);
                return rowTBL_CXCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CXCRow FindByID_CXC(int ID_CXC) {
                return ((TBL_CXCRow)(this.Rows.Find(new object[] {
                            ID_CXC})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_CXCDataTable cln = ((TBL_CXCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_CXCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_CXC = base.Columns["ID_CXC"];
                this.columnID_USER = base.Columns["ID_USER"];
                this.columnID_STOCK = base.Columns["ID_STOCK"];
                this.columnDATE_CXC = base.Columns["DATE_CXC"];
                this.columnQUANTITY_RETREAT = base.Columns["QUANTITY_RETREAT"];
                this.columnQUANTITY_RETURN = base.Columns["QUANTITY_RETURN"];
                this.columnTOTAL_CXC = base.Columns["TOTAL_CXC"];
                this.columnBALANCE_CXC = base.Columns["BALANCE_CXC"];
                this.columnCXC_STATE = base.Columns["CXC_STATE"];
                this.columnCXC_CREATEBY = base.Columns["CXC_CREATEBY"];
                this.columnCXC_UPDATEDBY = base.Columns["CXC_UPDATEDBY"];
                this.columnCXC_CREATEDATE = base.Columns["CXC_CREATEDATE"];
                this.columnCXC_UPDATEDATE = base.Columns["CXC_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_CXC = new global::System.Data.DataColumn("ID_CXC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CXC);
                this.columnID_USER = new global::System.Data.DataColumn("ID_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_USER);
                this.columnID_STOCK = new global::System.Data.DataColumn("ID_STOCK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_STOCK);
                this.columnDATE_CXC = new global::System.Data.DataColumn("DATE_CXC", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_CXC);
                this.columnQUANTITY_RETREAT = new global::System.Data.DataColumn("QUANTITY_RETREAT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY_RETREAT);
                this.columnQUANTITY_RETURN = new global::System.Data.DataColumn("QUANTITY_RETURN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY_RETURN);
                this.columnTOTAL_CXC = new global::System.Data.DataColumn("TOTAL_CXC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_CXC);
                this.columnBALANCE_CXC = new global::System.Data.DataColumn("BALANCE_CXC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBALANCE_CXC);
                this.columnCXC_STATE = new global::System.Data.DataColumn("CXC_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXC_STATE);
                this.columnCXC_CREATEBY = new global::System.Data.DataColumn("CXC_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXC_CREATEBY);
                this.columnCXC_UPDATEDBY = new global::System.Data.DataColumn("CXC_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXC_UPDATEDBY);
                this.columnCXC_CREATEDATE = new global::System.Data.DataColumn("CXC_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXC_CREATEDATE);
                this.columnCXC_UPDATEDATE = new global::System.Data.DataColumn("CXC_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXC_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_CXC}, true));
                this.columnID_CXC.AutoIncrement = true;
                this.columnID_CXC.AutoIncrementSeed = -1;
                this.columnID_CXC.AutoIncrementStep = -1;
                this.columnID_CXC.AllowDBNull = false;
                this.columnID_CXC.ReadOnly = true;
                this.columnID_CXC.Unique = true;
                this.columnID_USER.AllowDBNull = false;
                this.columnID_USER.MaxLength = 50;
                this.columnDATE_CXC.AllowDBNull = false;
                this.columnTOTAL_CXC.AllowDBNull = false;
                this.columnBALANCE_CXC.AllowDBNull = false;
                this.columnCXC_STATE.AllowDBNull = false;
                this.columnCXC_CREATEBY.AllowDBNull = false;
                this.columnCXC_CREATEBY.MaxLength = 50;
                this.columnCXC_UPDATEDBY.AllowDBNull = false;
                this.columnCXC_UPDATEDBY.MaxLength = 50;
                this.columnCXC_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CXCRow NewTBL_CXCRow() {
                return ((TBL_CXCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_CXCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_CXCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_CXCRowChanged != null)) {
                    this.TBL_CXCRowChanged(this, new TBL_CXCRowChangeEvent(((TBL_CXCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_CXCRowChanging != null)) {
                    this.TBL_CXCRowChanging(this, new TBL_CXCRowChangeEvent(((TBL_CXCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_CXCRowDeleted != null)) {
                    this.TBL_CXCRowDeleted(this, new TBL_CXCRowChangeEvent(((TBL_CXCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_CXCRowDeleting != null)) {
                    this.TBL_CXCRowDeleting(this, new TBL_CXCRowChangeEvent(((TBL_CXCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_CXCRow(TBL_CXCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_CXCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_DPTDataTable : global::System.Data.TypedTableBase<TBL_DPTRow> {
            
            private global::System.Data.DataColumn columnID_DPT;
            
            private global::System.Data.DataColumn columnNAME_DPT;
            
            private global::System.Data.DataColumn columnSTATE_DPT;
            
            private global::System.Data.DataColumn columnCREATEBY_DPT;
            
            private global::System.Data.DataColumn columnUPDATEBY_DPT;
            
            private global::System.Data.DataColumn columnCREATEDATE_DPT;
            
            private global::System.Data.DataColumn columnUPDATEDATE_DPT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_DPTDataTable() {
                this.TableName = "TBL_DPT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_DPTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_DPTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_DPTColumn {
                get {
                    return this.columnID_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_DPTColumn {
                get {
                    return this.columnNAME_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STATE_DPTColumn {
                get {
                    return this.columnSTATE_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CREATEBY_DPTColumn {
                get {
                    return this.columnCREATEBY_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UPDATEBY_DPTColumn {
                get {
                    return this.columnUPDATEBY_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CREATEDATE_DPTColumn {
                get {
                    return this.columnCREATEDATE_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UPDATEDATE_DPTColumn {
                get {
                    return this.columnUPDATEDATE_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_DPTRow this[int index] {
                get {
                    return ((TBL_DPTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_DPTRowChangeEventHandler TBL_DPTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_DPTRowChangeEventHandler TBL_DPTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_DPTRowChangeEventHandler TBL_DPTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_DPTRowChangeEventHandler TBL_DPTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_DPTRow(TBL_DPTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_DPTRow AddTBL_DPTRow(string NAME_DPT, bool STATE_DPT, string CREATEBY_DPT, string UPDATEBY_DPT, System.DateTime CREATEDATE_DPT, System.DateTime UPDATEDATE_DPT) {
                TBL_DPTRow rowTBL_DPTRow = ((TBL_DPTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME_DPT,
                        STATE_DPT,
                        CREATEBY_DPT,
                        UPDATEBY_DPT,
                        CREATEDATE_DPT,
                        UPDATEDATE_DPT};
                rowTBL_DPTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_DPTRow);
                return rowTBL_DPTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_DPTRow FindByID_DPT(int ID_DPT) {
                return ((TBL_DPTRow)(this.Rows.Find(new object[] {
                            ID_DPT})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_DPTDataTable cln = ((TBL_DPTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_DPTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_DPT = base.Columns["ID_DPT"];
                this.columnNAME_DPT = base.Columns["NAME_DPT"];
                this.columnSTATE_DPT = base.Columns["STATE_DPT"];
                this.columnCREATEBY_DPT = base.Columns["CREATEBY_DPT"];
                this.columnUPDATEBY_DPT = base.Columns["UPDATEBY_DPT"];
                this.columnCREATEDATE_DPT = base.Columns["CREATEDATE_DPT"];
                this.columnUPDATEDATE_DPT = base.Columns["UPDATEDATE_DPT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_DPT = new global::System.Data.DataColumn("ID_DPT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_DPT);
                this.columnNAME_DPT = new global::System.Data.DataColumn("NAME_DPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_DPT);
                this.columnSTATE_DPT = new global::System.Data.DataColumn("STATE_DPT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE_DPT);
                this.columnCREATEBY_DPT = new global::System.Data.DataColumn("CREATEBY_DPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEBY_DPT);
                this.columnUPDATEBY_DPT = new global::System.Data.DataColumn("UPDATEBY_DPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEBY_DPT);
                this.columnCREATEDATE_DPT = new global::System.Data.DataColumn("CREATEDATE_DPT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEDATE_DPT);
                this.columnUPDATEDATE_DPT = new global::System.Data.DataColumn("UPDATEDATE_DPT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEDATE_DPT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_DPT}, true));
                this.columnID_DPT.AutoIncrement = true;
                this.columnID_DPT.AutoIncrementSeed = -1;
                this.columnID_DPT.AutoIncrementStep = -1;
                this.columnID_DPT.AllowDBNull = false;
                this.columnID_DPT.ReadOnly = true;
                this.columnID_DPT.Unique = true;
                this.columnNAME_DPT.AllowDBNull = false;
                this.columnNAME_DPT.MaxLength = 75;
                this.columnSTATE_DPT.AllowDBNull = false;
                this.columnCREATEBY_DPT.MaxLength = 50;
                this.columnUPDATEBY_DPT.MaxLength = 50;
                this.columnCREATEDATE_DPT.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_DPTRow NewTBL_DPTRow() {
                return ((TBL_DPTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_DPTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_DPTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_DPTRowChanged != null)) {
                    this.TBL_DPTRowChanged(this, new TBL_DPTRowChangeEvent(((TBL_DPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_DPTRowChanging != null)) {
                    this.TBL_DPTRowChanging(this, new TBL_DPTRowChangeEvent(((TBL_DPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_DPTRowDeleted != null)) {
                    this.TBL_DPTRowDeleted(this, new TBL_DPTRowChangeEvent(((TBL_DPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_DPTRowDeleting != null)) {
                    this.TBL_DPTRowDeleting(this, new TBL_DPTRowChangeEvent(((TBL_DPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_DPTRow(TBL_DPTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_DPTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_NOTEDataTable : global::System.Data.TypedTableBase<TBL_NOTERow> {
            
            private global::System.Data.DataColumn columnID_NOTE;
            
            private global::System.Data.DataColumn columnNOTE_TITLE;
            
            private global::System.Data.DataColumn columnNOTE_DATE;
            
            private global::System.Data.DataColumn columnNOTE_CONTENT;
            
            private global::System.Data.DataColumn columnNOTE_CREATEBY;
            
            private global::System.Data.DataColumn columnNOTE_UPDATEBY;
            
            private global::System.Data.DataColumn columnNOTE_CREATEDATE;
            
            private global::System.Data.DataColumn columnNOTE_UPDATEDATE;
            
            private global::System.Data.DataColumn columnNOTE_STATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_NOTEDataTable() {
                this.TableName = "TBL_NOTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_NOTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_NOTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_NOTEColumn {
                get {
                    return this.columnID_NOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_TITLEColumn {
                get {
                    return this.columnNOTE_TITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_DATEColumn {
                get {
                    return this.columnNOTE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_CONTENTColumn {
                get {
                    return this.columnNOTE_CONTENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_CREATEBYColumn {
                get {
                    return this.columnNOTE_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_UPDATEBYColumn {
                get {
                    return this.columnNOTE_UPDATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_CREATEDATEColumn {
                get {
                    return this.columnNOTE_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_UPDATEDATEColumn {
                get {
                    return this.columnNOTE_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_STATEColumn {
                get {
                    return this.columnNOTE_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_NOTERow this[int index] {
                get {
                    return ((TBL_NOTERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_NOTERowChangeEventHandler TBL_NOTERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_NOTERowChangeEventHandler TBL_NOTERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_NOTERowChangeEventHandler TBL_NOTERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_NOTERowChangeEventHandler TBL_NOTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_NOTERow(TBL_NOTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_NOTERow AddTBL_NOTERow(string NOTE_TITLE, System.DateTime NOTE_DATE, string NOTE_CONTENT, string NOTE_CREATEBY, string NOTE_UPDATEBY, System.DateTime NOTE_CREATEDATE, System.DateTime NOTE_UPDATEDATE, bool NOTE_STATE) {
                TBL_NOTERow rowTBL_NOTERow = ((TBL_NOTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NOTE_TITLE,
                        NOTE_DATE,
                        NOTE_CONTENT,
                        NOTE_CREATEBY,
                        NOTE_UPDATEBY,
                        NOTE_CREATEDATE,
                        NOTE_UPDATEDATE,
                        NOTE_STATE};
                rowTBL_NOTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_NOTERow);
                return rowTBL_NOTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_NOTEDataTable cln = ((TBL_NOTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_NOTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_NOTE = base.Columns["ID_NOTE"];
                this.columnNOTE_TITLE = base.Columns["NOTE_TITLE"];
                this.columnNOTE_DATE = base.Columns["NOTE_DATE"];
                this.columnNOTE_CONTENT = base.Columns["NOTE_CONTENT"];
                this.columnNOTE_CREATEBY = base.Columns["NOTE_CREATEBY"];
                this.columnNOTE_UPDATEBY = base.Columns["NOTE_UPDATEBY"];
                this.columnNOTE_CREATEDATE = base.Columns["NOTE_CREATEDATE"];
                this.columnNOTE_UPDATEDATE = base.Columns["NOTE_UPDATEDATE"];
                this.columnNOTE_STATE = base.Columns["NOTE_STATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_NOTE = new global::System.Data.DataColumn("ID_NOTE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_NOTE);
                this.columnNOTE_TITLE = new global::System.Data.DataColumn("NOTE_TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_TITLE);
                this.columnNOTE_DATE = new global::System.Data.DataColumn("NOTE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_DATE);
                this.columnNOTE_CONTENT = new global::System.Data.DataColumn("NOTE_CONTENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_CONTENT);
                this.columnNOTE_CREATEBY = new global::System.Data.DataColumn("NOTE_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_CREATEBY);
                this.columnNOTE_UPDATEBY = new global::System.Data.DataColumn("NOTE_UPDATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_UPDATEBY);
                this.columnNOTE_CREATEDATE = new global::System.Data.DataColumn("NOTE_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_CREATEDATE);
                this.columnNOTE_UPDATEDATE = new global::System.Data.DataColumn("NOTE_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_UPDATEDATE);
                this.columnNOTE_STATE = new global::System.Data.DataColumn("NOTE_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_STATE);
                this.columnID_NOTE.AutoIncrement = true;
                this.columnID_NOTE.AutoIncrementSeed = -1;
                this.columnID_NOTE.AutoIncrementStep = -1;
                this.columnID_NOTE.AllowDBNull = false;
                this.columnID_NOTE.ReadOnly = true;
                this.columnNOTE_TITLE.AllowDBNull = false;
                this.columnNOTE_TITLE.MaxLength = 100;
                this.columnNOTE_DATE.AllowDBNull = false;
                this.columnNOTE_CONTENT.AllowDBNull = false;
                this.columnNOTE_CONTENT.MaxLength = 1000;
                this.columnNOTE_CREATEBY.AllowDBNull = false;
                this.columnNOTE_CREATEBY.MaxLength = 50;
                this.columnNOTE_UPDATEBY.MaxLength = 50;
                this.columnNOTE_CREATEDATE.AllowDBNull = false;
                this.columnNOTE_STATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_NOTERow NewTBL_NOTERow() {
                return ((TBL_NOTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_NOTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_NOTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_NOTERowChanged != null)) {
                    this.TBL_NOTERowChanged(this, new TBL_NOTERowChangeEvent(((TBL_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_NOTERowChanging != null)) {
                    this.TBL_NOTERowChanging(this, new TBL_NOTERowChangeEvent(((TBL_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_NOTERowDeleted != null)) {
                    this.TBL_NOTERowDeleted(this, new TBL_NOTERowChangeEvent(((TBL_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_NOTERowDeleting != null)) {
                    this.TBL_NOTERowDeleting(this, new TBL_NOTERowChangeEvent(((TBL_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_NOTERow(TBL_NOTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_NOTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_ORDERDataTable : global::System.Data.TypedTableBase<TBL_ORDERRow> {
            
            private global::System.Data.DataColumn columnID_ORDER;
            
            private global::System.Data.DataColumn columnID_PREPAID;
            
            private global::System.Data.DataColumn columnORDER_QUANTITY;
            
            private global::System.Data.DataColumn columnORDER_DATE;
            
            private global::System.Data.DataColumn columnORDER_DELIVERY;
            
            private global::System.Data.DataColumn columnORDER_STATE;
            
            private global::System.Data.DataColumn columnORDER_CREATEBY;
            
            private global::System.Data.DataColumn columnORDER_UPDATEDBY;
            
            private global::System.Data.DataColumn columnORDER_CREATEDATE;
            
            private global::System.Data.DataColumn columnORDER_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ORDERDataTable() {
                this.TableName = "TBL_ORDER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_ORDERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_ORDERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ORDERColumn {
                get {
                    return this.columnID_ORDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PREPAIDColumn {
                get {
                    return this.columnID_PREPAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_QUANTITYColumn {
                get {
                    return this.columnORDER_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_DATEColumn {
                get {
                    return this.columnORDER_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_DELIVERYColumn {
                get {
                    return this.columnORDER_DELIVERY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_STATEColumn {
                get {
                    return this.columnORDER_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_CREATEBYColumn {
                get {
                    return this.columnORDER_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_UPDATEDBYColumn {
                get {
                    return this.columnORDER_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_CREATEDATEColumn {
                get {
                    return this.columnORDER_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_UPDATEDATEColumn {
                get {
                    return this.columnORDER_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ORDERRow this[int index] {
                get {
                    return ((TBL_ORDERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ORDERRowChangeEventHandler TBL_ORDERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ORDERRowChangeEventHandler TBL_ORDERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ORDERRowChangeEventHandler TBL_ORDERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ORDERRowChangeEventHandler TBL_ORDERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_ORDERRow(TBL_ORDERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ORDERRow AddTBL_ORDERRow(TBL_PREPAIDRow parentTBL_PREPAIDRowByFK_TBL_ORDER_TBL_PREPAID, int ORDER_QUANTITY, System.DateTime ORDER_DATE, bool ORDER_DELIVERY, bool ORDER_STATE, TBL_USERRow parentTBL_USERRowByFK_TBL_ORDER_TBL_USER, string ORDER_UPDATEDBY, System.DateTime ORDER_CREATEDATE, System.DateTime ORDER_UPDATEDATE) {
                TBL_ORDERRow rowTBL_ORDERRow = ((TBL_ORDERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        ORDER_QUANTITY,
                        ORDER_DATE,
                        ORDER_DELIVERY,
                        ORDER_STATE,
                        null,
                        ORDER_UPDATEDBY,
                        ORDER_CREATEDATE,
                        ORDER_UPDATEDATE};
                if ((parentTBL_PREPAIDRowByFK_TBL_ORDER_TBL_PREPAID != null)) {
                    columnValuesArray[1] = parentTBL_PREPAIDRowByFK_TBL_ORDER_TBL_PREPAID[0];
                }
                if ((parentTBL_USERRowByFK_TBL_ORDER_TBL_USER != null)) {
                    columnValuesArray[6] = parentTBL_USERRowByFK_TBL_ORDER_TBL_USER[0];
                }
                rowTBL_ORDERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_ORDERRow);
                return rowTBL_ORDERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ORDERRow FindByID_ORDER(int ID_ORDER) {
                return ((TBL_ORDERRow)(this.Rows.Find(new object[] {
                            ID_ORDER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_ORDERDataTable cln = ((TBL_ORDERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_ORDERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_ORDER = base.Columns["ID_ORDER"];
                this.columnID_PREPAID = base.Columns["ID_PREPAID"];
                this.columnORDER_QUANTITY = base.Columns["ORDER_QUANTITY"];
                this.columnORDER_DATE = base.Columns["ORDER_DATE"];
                this.columnORDER_DELIVERY = base.Columns["ORDER_DELIVERY"];
                this.columnORDER_STATE = base.Columns["ORDER_STATE"];
                this.columnORDER_CREATEBY = base.Columns["ORDER_CREATEBY"];
                this.columnORDER_UPDATEDBY = base.Columns["ORDER_UPDATEDBY"];
                this.columnORDER_CREATEDATE = base.Columns["ORDER_CREATEDATE"];
                this.columnORDER_UPDATEDATE = base.Columns["ORDER_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_ORDER = new global::System.Data.DataColumn("ID_ORDER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ORDER);
                this.columnID_PREPAID = new global::System.Data.DataColumn("ID_PREPAID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PREPAID);
                this.columnORDER_QUANTITY = new global::System.Data.DataColumn("ORDER_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_QUANTITY);
                this.columnORDER_DATE = new global::System.Data.DataColumn("ORDER_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_DATE);
                this.columnORDER_DELIVERY = new global::System.Data.DataColumn("ORDER_DELIVERY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_DELIVERY);
                this.columnORDER_STATE = new global::System.Data.DataColumn("ORDER_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_STATE);
                this.columnORDER_CREATEBY = new global::System.Data.DataColumn("ORDER_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_CREATEBY);
                this.columnORDER_UPDATEDBY = new global::System.Data.DataColumn("ORDER_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_UPDATEDBY);
                this.columnORDER_CREATEDATE = new global::System.Data.DataColumn("ORDER_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_CREATEDATE);
                this.columnORDER_UPDATEDATE = new global::System.Data.DataColumn("ORDER_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ORDER}, true));
                this.columnID_ORDER.AutoIncrement = true;
                this.columnID_ORDER.AutoIncrementSeed = -1;
                this.columnID_ORDER.AutoIncrementStep = -1;
                this.columnID_ORDER.AllowDBNull = false;
                this.columnID_ORDER.ReadOnly = true;
                this.columnID_ORDER.Unique = true;
                this.columnID_PREPAID.AllowDBNull = false;
                this.columnORDER_QUANTITY.AllowDBNull = false;
                this.columnORDER_DATE.AllowDBNull = false;
                this.columnORDER_DELIVERY.AllowDBNull = false;
                this.columnORDER_STATE.AllowDBNull = false;
                this.columnORDER_CREATEBY.AllowDBNull = false;
                this.columnORDER_CREATEBY.MaxLength = 50;
                this.columnORDER_UPDATEDBY.AllowDBNull = false;
                this.columnORDER_UPDATEDBY.MaxLength = 50;
                this.columnORDER_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ORDERRow NewTBL_ORDERRow() {
                return ((TBL_ORDERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_ORDERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_ORDERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_ORDERRowChanged != null)) {
                    this.TBL_ORDERRowChanged(this, new TBL_ORDERRowChangeEvent(((TBL_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_ORDERRowChanging != null)) {
                    this.TBL_ORDERRowChanging(this, new TBL_ORDERRowChangeEvent(((TBL_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_ORDERRowDeleted != null)) {
                    this.TBL_ORDERRowDeleted(this, new TBL_ORDERRowChangeEvent(((TBL_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_ORDERRowDeleting != null)) {
                    this.TBL_ORDERRowDeleting(this, new TBL_ORDERRowChangeEvent(((TBL_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_ORDERRow(TBL_ORDERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_ORDERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_PERMISSIONDataTable : global::System.Data.TypedTableBase<TBL_PERMISSIONRow> {
            
            private global::System.Data.DataColumn columnID_PER;
            
            private global::System.Data.DataColumn columnID_DPT;
            
            private global::System.Data.DataColumn columnNAME_PERMISSION;
            
            private global::System.Data.DataColumn columnDESCRIP_PERMISSION;
            
            private global::System.Data.DataColumn columnPER_STATE;
            
            private global::System.Data.DataColumn columnPER_CREATEBY;
            
            private global::System.Data.DataColumn columnPER_UPDATEDBY;
            
            private global::System.Data.DataColumn columnPER_CREATEDATE;
            
            private global::System.Data.DataColumn columnPER_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PERMISSIONDataTable() {
                this.TableName = "TBL_PERMISSION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_PERMISSIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_PERMISSIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PERColumn {
                get {
                    return this.columnID_PER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_DPTColumn {
                get {
                    return this.columnID_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_PERMISSIONColumn {
                get {
                    return this.columnNAME_PERMISSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DESCRIP_PERMISSIONColumn {
                get {
                    return this.columnDESCRIP_PERMISSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER_STATEColumn {
                get {
                    return this.columnPER_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER_CREATEBYColumn {
                get {
                    return this.columnPER_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER_UPDATEDBYColumn {
                get {
                    return this.columnPER_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER_CREATEDATEColumn {
                get {
                    return this.columnPER_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER_UPDATEDATEColumn {
                get {
                    return this.columnPER_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PERMISSIONRow this[int index] {
                get {
                    return ((TBL_PERMISSIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PERMISSIONRowChangeEventHandler TBL_PERMISSIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PERMISSIONRowChangeEventHandler TBL_PERMISSIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PERMISSIONRowChangeEventHandler TBL_PERMISSIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PERMISSIONRowChangeEventHandler TBL_PERMISSIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_PERMISSIONRow(TBL_PERMISSIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PERMISSIONRow AddTBL_PERMISSIONRow(TBL_DPTRow parentTBL_DPTRowByFK_TBL_PERMISSION_TBL_DPT, string NAME_PERMISSION, string DESCRIP_PERMISSION, bool PER_STATE, string PER_CREATEBY, string PER_UPDATEDBY, System.DateTime PER_CREATEDATE, System.DateTime PER_UPDATEDATE) {
                TBL_PERMISSIONRow rowTBL_PERMISSIONRow = ((TBL_PERMISSIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        NAME_PERMISSION,
                        DESCRIP_PERMISSION,
                        PER_STATE,
                        PER_CREATEBY,
                        PER_UPDATEDBY,
                        PER_CREATEDATE,
                        PER_UPDATEDATE};
                if ((parentTBL_DPTRowByFK_TBL_PERMISSION_TBL_DPT != null)) {
                    columnValuesArray[1] = parentTBL_DPTRowByFK_TBL_PERMISSION_TBL_DPT[0];
                }
                rowTBL_PERMISSIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_PERMISSIONRow);
                return rowTBL_PERMISSIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PERMISSIONRow FindByID_PER(int ID_PER) {
                return ((TBL_PERMISSIONRow)(this.Rows.Find(new object[] {
                            ID_PER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_PERMISSIONDataTable cln = ((TBL_PERMISSIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_PERMISSIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_PER = base.Columns["ID_PER"];
                this.columnID_DPT = base.Columns["ID_DPT"];
                this.columnNAME_PERMISSION = base.Columns["NAME_PERMISSION"];
                this.columnDESCRIP_PERMISSION = base.Columns["DESCRIP_PERMISSION"];
                this.columnPER_STATE = base.Columns["PER_STATE"];
                this.columnPER_CREATEBY = base.Columns["PER_CREATEBY"];
                this.columnPER_UPDATEDBY = base.Columns["PER_UPDATEDBY"];
                this.columnPER_CREATEDATE = base.Columns["PER_CREATEDATE"];
                this.columnPER_UPDATEDATE = base.Columns["PER_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_PER = new global::System.Data.DataColumn("ID_PER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PER);
                this.columnID_DPT = new global::System.Data.DataColumn("ID_DPT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_DPT);
                this.columnNAME_PERMISSION = new global::System.Data.DataColumn("NAME_PERMISSION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_PERMISSION);
                this.columnDESCRIP_PERMISSION = new global::System.Data.DataColumn("DESCRIP_PERMISSION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIP_PERMISSION);
                this.columnPER_STATE = new global::System.Data.DataColumn("PER_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER_STATE);
                this.columnPER_CREATEBY = new global::System.Data.DataColumn("PER_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER_CREATEBY);
                this.columnPER_UPDATEDBY = new global::System.Data.DataColumn("PER_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER_UPDATEDBY);
                this.columnPER_CREATEDATE = new global::System.Data.DataColumn("PER_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER_CREATEDATE);
                this.columnPER_UPDATEDATE = new global::System.Data.DataColumn("PER_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_PER}, true));
                this.columnID_PER.AutoIncrement = true;
                this.columnID_PER.AutoIncrementSeed = -1;
                this.columnID_PER.AutoIncrementStep = -1;
                this.columnID_PER.AllowDBNull = false;
                this.columnID_PER.ReadOnly = true;
                this.columnID_PER.Unique = true;
                this.columnNAME_PERMISSION.MaxLength = 15;
                this.columnDESCRIP_PERMISSION.MaxLength = 100;
                this.columnPER_CREATEBY.AllowDBNull = false;
                this.columnPER_CREATEBY.MaxLength = 50;
                this.columnPER_UPDATEDBY.MaxLength = 50;
                this.columnPER_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PERMISSIONRow NewTBL_PERMISSIONRow() {
                return ((TBL_PERMISSIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_PERMISSIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_PERMISSIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_PERMISSIONRowChanged != null)) {
                    this.TBL_PERMISSIONRowChanged(this, new TBL_PERMISSIONRowChangeEvent(((TBL_PERMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_PERMISSIONRowChanging != null)) {
                    this.TBL_PERMISSIONRowChanging(this, new TBL_PERMISSIONRowChangeEvent(((TBL_PERMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_PERMISSIONRowDeleted != null)) {
                    this.TBL_PERMISSIONRowDeleted(this, new TBL_PERMISSIONRowChangeEvent(((TBL_PERMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_PERMISSIONRowDeleting != null)) {
                    this.TBL_PERMISSIONRowDeleting(this, new TBL_PERMISSIONRowChangeEvent(((TBL_PERMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_PERMISSIONRow(TBL_PERMISSIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_PERMISSIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_POSITIONDataTable : global::System.Data.TypedTableBase<TBL_POSITIONRow> {
            
            private global::System.Data.DataColumn columnID_POSITION;
            
            private global::System.Data.DataColumn columnID_AREA;
            
            private global::System.Data.DataColumn columnNAME_POSITION;
            
            private global::System.Data.DataColumn columnPOSITION_STATE;
            
            private global::System.Data.DataColumn columnPOSITION_CREATEBY;
            
            private global::System.Data.DataColumn columnPOSITION_UPDATEDBY;
            
            private global::System.Data.DataColumn columnPOSITION_CREATEDATE;
            
            private global::System.Data.DataColumn columnPOSITION_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_POSITIONDataTable() {
                this.TableName = "TBL_POSITION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_POSITIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_POSITIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_POSITIONColumn {
                get {
                    return this.columnID_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_AREAColumn {
                get {
                    return this.columnID_AREA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_POSITIONColumn {
                get {
                    return this.columnNAME_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn POSITION_STATEColumn {
                get {
                    return this.columnPOSITION_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn POSITION_CREATEBYColumn {
                get {
                    return this.columnPOSITION_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn POSITION_UPDATEDBYColumn {
                get {
                    return this.columnPOSITION_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn POSITION_CREATEDATEColumn {
                get {
                    return this.columnPOSITION_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn POSITION_UPDATEDATEColumn {
                get {
                    return this.columnPOSITION_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_POSITIONRow this[int index] {
                get {
                    return ((TBL_POSITIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_POSITIONRowChangeEventHandler TBL_POSITIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_POSITIONRowChangeEventHandler TBL_POSITIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_POSITIONRowChangeEventHandler TBL_POSITIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_POSITIONRowChangeEventHandler TBL_POSITIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_POSITIONRow(TBL_POSITIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_POSITIONRow AddTBL_POSITIONRow(TBL_AREARow parentTBL_AREARowByFK_TBL_POSITION_TBL_AREA, string NAME_POSITION, bool POSITION_STATE, string POSITION_CREATEBY, string POSITION_UPDATEDBY, System.DateTime POSITION_CREATEDATE, System.DateTime POSITION_UPDATEDATE) {
                TBL_POSITIONRow rowTBL_POSITIONRow = ((TBL_POSITIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        NAME_POSITION,
                        POSITION_STATE,
                        POSITION_CREATEBY,
                        POSITION_UPDATEDBY,
                        POSITION_CREATEDATE,
                        POSITION_UPDATEDATE};
                if ((parentTBL_AREARowByFK_TBL_POSITION_TBL_AREA != null)) {
                    columnValuesArray[1] = parentTBL_AREARowByFK_TBL_POSITION_TBL_AREA[0];
                }
                rowTBL_POSITIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_POSITIONRow);
                return rowTBL_POSITIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_POSITIONRow FindByID_POSITION(int ID_POSITION) {
                return ((TBL_POSITIONRow)(this.Rows.Find(new object[] {
                            ID_POSITION})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_POSITIONDataTable cln = ((TBL_POSITIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_POSITIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_POSITION = base.Columns["ID_POSITION"];
                this.columnID_AREA = base.Columns["ID_AREA"];
                this.columnNAME_POSITION = base.Columns["NAME_POSITION"];
                this.columnPOSITION_STATE = base.Columns["POSITION_STATE"];
                this.columnPOSITION_CREATEBY = base.Columns["POSITION_CREATEBY"];
                this.columnPOSITION_UPDATEDBY = base.Columns["POSITION_UPDATEDBY"];
                this.columnPOSITION_CREATEDATE = base.Columns["POSITION_CREATEDATE"];
                this.columnPOSITION_UPDATEDATE = base.Columns["POSITION_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_POSITION = new global::System.Data.DataColumn("ID_POSITION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_POSITION);
                this.columnID_AREA = new global::System.Data.DataColumn("ID_AREA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AREA);
                this.columnNAME_POSITION = new global::System.Data.DataColumn("NAME_POSITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_POSITION);
                this.columnPOSITION_STATE = new global::System.Data.DataColumn("POSITION_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION_STATE);
                this.columnPOSITION_CREATEBY = new global::System.Data.DataColumn("POSITION_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION_CREATEBY);
                this.columnPOSITION_UPDATEDBY = new global::System.Data.DataColumn("POSITION_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION_UPDATEDBY);
                this.columnPOSITION_CREATEDATE = new global::System.Data.DataColumn("POSITION_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION_CREATEDATE);
                this.columnPOSITION_UPDATEDATE = new global::System.Data.DataColumn("POSITION_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_POSITION}, true));
                this.columnID_POSITION.AutoIncrement = true;
                this.columnID_POSITION.AutoIncrementSeed = -1;
                this.columnID_POSITION.AutoIncrementStep = -1;
                this.columnID_POSITION.AllowDBNull = false;
                this.columnID_POSITION.ReadOnly = true;
                this.columnID_POSITION.Unique = true;
                this.columnID_AREA.AllowDBNull = false;
                this.columnNAME_POSITION.AllowDBNull = false;
                this.columnNAME_POSITION.MaxLength = 50;
                this.columnPOSITION_STATE.AllowDBNull = false;
                this.columnPOSITION_CREATEBY.AllowDBNull = false;
                this.columnPOSITION_CREATEBY.MaxLength = 50;
                this.columnPOSITION_UPDATEDBY.MaxLength = 50;
                this.columnPOSITION_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_POSITIONRow NewTBL_POSITIONRow() {
                return ((TBL_POSITIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_POSITIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_POSITIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_POSITIONRowChanged != null)) {
                    this.TBL_POSITIONRowChanged(this, new TBL_POSITIONRowChangeEvent(((TBL_POSITIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_POSITIONRowChanging != null)) {
                    this.TBL_POSITIONRowChanging(this, new TBL_POSITIONRowChangeEvent(((TBL_POSITIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_POSITIONRowDeleted != null)) {
                    this.TBL_POSITIONRowDeleted(this, new TBL_POSITIONRowChangeEvent(((TBL_POSITIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_POSITIONRowDeleting != null)) {
                    this.TBL_POSITIONRowDeleting(this, new TBL_POSITIONRowChangeEvent(((TBL_POSITIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_POSITIONRow(TBL_POSITIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_POSITIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_PREPAIDDataTable : global::System.Data.TypedTableBase<TBL_PREPAIDRow> {
            
            private global::System.Data.DataColumn columnID_PREPAID;
            
            private global::System.Data.DataColumn columnID_CUSTOMER;
            
            private global::System.Data.DataColumn columnID_PRODUCT;
            
            private global::System.Data.DataColumn columnPREPAID_QUANTITY;
            
            private global::System.Data.DataColumn columnPREPAID_TOTAL;
            
            private global::System.Data.DataColumn columnPREPAID_CASH;
            
            private global::System.Data.DataColumn columnPREPAID_CHANGE;
            
            private global::System.Data.DataColumn columnPREPAID_BALANCE;
            
            private global::System.Data.DataColumn columnPREPAID_STATE;
            
            private global::System.Data.DataColumn columnPREPAID_CREATEBY;
            
            private global::System.Data.DataColumn columnPREPAID_UPDATEDBY;
            
            private global::System.Data.DataColumn columnPREPAID_CREATEDATE;
            
            private global::System.Data.DataColumn columnPREPAID_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PREPAIDDataTable() {
                this.TableName = "TBL_PREPAID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_PREPAIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_PREPAIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PREPAIDColumn {
                get {
                    return this.columnID_PREPAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_CUSTOMERColumn {
                get {
                    return this.columnID_CUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PRODUCTColumn {
                get {
                    return this.columnID_PRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_QUANTITYColumn {
                get {
                    return this.columnPREPAID_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_TOTALColumn {
                get {
                    return this.columnPREPAID_TOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_CASHColumn {
                get {
                    return this.columnPREPAID_CASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_CHANGEColumn {
                get {
                    return this.columnPREPAID_CHANGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_BALANCEColumn {
                get {
                    return this.columnPREPAID_BALANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_STATEColumn {
                get {
                    return this.columnPREPAID_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_CREATEBYColumn {
                get {
                    return this.columnPREPAID_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_UPDATEDBYColumn {
                get {
                    return this.columnPREPAID_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_CREATEDATEColumn {
                get {
                    return this.columnPREPAID_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_UPDATEDATEColumn {
                get {
                    return this.columnPREPAID_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PREPAIDRow this[int index] {
                get {
                    return ((TBL_PREPAIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PREPAIDRowChangeEventHandler TBL_PREPAIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PREPAIDRowChangeEventHandler TBL_PREPAIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PREPAIDRowChangeEventHandler TBL_PREPAIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PREPAIDRowChangeEventHandler TBL_PREPAIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_PREPAIDRow(TBL_PREPAIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PREPAIDRow AddTBL_PREPAIDRow(TBL_CUSTOMERRow parentTBL_CUSTOMERRowByFK_TBL_PREPAID_TBL_CUSTOMER, TBL_PRODUCTRow parentTBL_PRODUCTRowByFK_TBL_PREPAID_TBL_PRODUCT, int PREPAID_QUANTITY, decimal PREPAID_TOTAL, decimal PREPAID_CASH, decimal PREPAID_CHANGE, int PREPAID_BALANCE, bool PREPAID_STATE, TBL_USERRow parentTBL_USERRowByFK_TBL_PREPAID_TBL_USER, string PREPAID_UPDATEDBY, System.DateTime PREPAID_CREATEDATE, System.DateTime PREPAID_UPDATEDATE) {
                TBL_PREPAIDRow rowTBL_PREPAIDRow = ((TBL_PREPAIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        PREPAID_QUANTITY,
                        PREPAID_TOTAL,
                        PREPAID_CASH,
                        PREPAID_CHANGE,
                        PREPAID_BALANCE,
                        PREPAID_STATE,
                        null,
                        PREPAID_UPDATEDBY,
                        PREPAID_CREATEDATE,
                        PREPAID_UPDATEDATE};
                if ((parentTBL_CUSTOMERRowByFK_TBL_PREPAID_TBL_CUSTOMER != null)) {
                    columnValuesArray[1] = parentTBL_CUSTOMERRowByFK_TBL_PREPAID_TBL_CUSTOMER[0];
                }
                if ((parentTBL_PRODUCTRowByFK_TBL_PREPAID_TBL_PRODUCT != null)) {
                    columnValuesArray[2] = parentTBL_PRODUCTRowByFK_TBL_PREPAID_TBL_PRODUCT[0];
                }
                if ((parentTBL_USERRowByFK_TBL_PREPAID_TBL_USER != null)) {
                    columnValuesArray[9] = parentTBL_USERRowByFK_TBL_PREPAID_TBL_USER[0];
                }
                rowTBL_PREPAIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_PREPAIDRow);
                return rowTBL_PREPAIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PREPAIDRow FindByID_PREPAID(int ID_PREPAID) {
                return ((TBL_PREPAIDRow)(this.Rows.Find(new object[] {
                            ID_PREPAID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_PREPAIDDataTable cln = ((TBL_PREPAIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_PREPAIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_PREPAID = base.Columns["ID_PREPAID"];
                this.columnID_CUSTOMER = base.Columns["ID_CUSTOMER"];
                this.columnID_PRODUCT = base.Columns["ID_PRODUCT"];
                this.columnPREPAID_QUANTITY = base.Columns["PREPAID_QUANTITY"];
                this.columnPREPAID_TOTAL = base.Columns["PREPAID_TOTAL"];
                this.columnPREPAID_CASH = base.Columns["PREPAID_CASH"];
                this.columnPREPAID_CHANGE = base.Columns["PREPAID_CHANGE"];
                this.columnPREPAID_BALANCE = base.Columns["PREPAID_BALANCE"];
                this.columnPREPAID_STATE = base.Columns["PREPAID_STATE"];
                this.columnPREPAID_CREATEBY = base.Columns["PREPAID_CREATEBY"];
                this.columnPREPAID_UPDATEDBY = base.Columns["PREPAID_UPDATEDBY"];
                this.columnPREPAID_CREATEDATE = base.Columns["PREPAID_CREATEDATE"];
                this.columnPREPAID_UPDATEDATE = base.Columns["PREPAID_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_PREPAID = new global::System.Data.DataColumn("ID_PREPAID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PREPAID);
                this.columnID_CUSTOMER = new global::System.Data.DataColumn("ID_CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CUSTOMER);
                this.columnID_PRODUCT = new global::System.Data.DataColumn("ID_PRODUCT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PRODUCT);
                this.columnPREPAID_QUANTITY = new global::System.Data.DataColumn("PREPAID_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_QUANTITY);
                this.columnPREPAID_TOTAL = new global::System.Data.DataColumn("PREPAID_TOTAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_TOTAL);
                this.columnPREPAID_CASH = new global::System.Data.DataColumn("PREPAID_CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_CASH);
                this.columnPREPAID_CHANGE = new global::System.Data.DataColumn("PREPAID_CHANGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_CHANGE);
                this.columnPREPAID_BALANCE = new global::System.Data.DataColumn("PREPAID_BALANCE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_BALANCE);
                this.columnPREPAID_STATE = new global::System.Data.DataColumn("PREPAID_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_STATE);
                this.columnPREPAID_CREATEBY = new global::System.Data.DataColumn("PREPAID_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_CREATEBY);
                this.columnPREPAID_UPDATEDBY = new global::System.Data.DataColumn("PREPAID_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_UPDATEDBY);
                this.columnPREPAID_CREATEDATE = new global::System.Data.DataColumn("PREPAID_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_CREATEDATE);
                this.columnPREPAID_UPDATEDATE = new global::System.Data.DataColumn("PREPAID_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_PREPAID}, true));
                this.columnID_PREPAID.AutoIncrement = true;
                this.columnID_PREPAID.AutoIncrementSeed = -1;
                this.columnID_PREPAID.AutoIncrementStep = -1;
                this.columnID_PREPAID.AllowDBNull = false;
                this.columnID_PREPAID.ReadOnly = true;
                this.columnID_PREPAID.Unique = true;
                this.columnID_CUSTOMER.AllowDBNull = false;
                this.columnID_CUSTOMER.MaxLength = 50;
                this.columnID_PRODUCT.AllowDBNull = false;
                this.columnPREPAID_QUANTITY.AllowDBNull = false;
                this.columnPREPAID_TOTAL.AllowDBNull = false;
                this.columnPREPAID_CASH.AllowDBNull = false;
                this.columnPREPAID_CHANGE.AllowDBNull = false;
                this.columnPREPAID_BALANCE.AllowDBNull = false;
                this.columnPREPAID_STATE.AllowDBNull = false;
                this.columnPREPAID_CREATEBY.AllowDBNull = false;
                this.columnPREPAID_CREATEBY.MaxLength = 50;
                this.columnPREPAID_UPDATEDBY.MaxLength = 50;
                this.columnPREPAID_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PREPAIDRow NewTBL_PREPAIDRow() {
                return ((TBL_PREPAIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_PREPAIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_PREPAIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_PREPAIDRowChanged != null)) {
                    this.TBL_PREPAIDRowChanged(this, new TBL_PREPAIDRowChangeEvent(((TBL_PREPAIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_PREPAIDRowChanging != null)) {
                    this.TBL_PREPAIDRowChanging(this, new TBL_PREPAIDRowChangeEvent(((TBL_PREPAIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_PREPAIDRowDeleted != null)) {
                    this.TBL_PREPAIDRowDeleted(this, new TBL_PREPAIDRowChangeEvent(((TBL_PREPAIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_PREPAIDRowDeleting != null)) {
                    this.TBL_PREPAIDRowDeleting(this, new TBL_PREPAIDRowChangeEvent(((TBL_PREPAIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_PREPAIDRow(TBL_PREPAIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_PREPAIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_PRODUCTDataTable : global::System.Data.TypedTableBase<TBL_PRODUCTRow> {
            
            private global::System.Data.DataColumn columnID_PRODUCT;
            
            private global::System.Data.DataColumn columnTOTAL_PRODUCT;
            
            private global::System.Data.DataColumn columnDESCRIP_PRICE;
            
            private global::System.Data.DataColumn columnPRODUCT_STATE;
            
            private global::System.Data.DataColumn columnPRODUCT_CREATEBY;
            
            private global::System.Data.DataColumn columnPRODUCT_UPDATEDBY;
            
            private global::System.Data.DataColumn columnPRODUCT_CREATEDATE;
            
            private global::System.Data.DataColumn columnPRODUCT_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PRODUCTDataTable() {
                this.TableName = "TBL_PRODUCT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_PRODUCTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_PRODUCTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PRODUCTColumn {
                get {
                    return this.columnID_PRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_PRODUCTColumn {
                get {
                    return this.columnTOTAL_PRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DESCRIP_PRICEColumn {
                get {
                    return this.columnDESCRIP_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCT_STATEColumn {
                get {
                    return this.columnPRODUCT_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCT_CREATEBYColumn {
                get {
                    return this.columnPRODUCT_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCT_UPDATEDBYColumn {
                get {
                    return this.columnPRODUCT_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCT_CREATEDATEColumn {
                get {
                    return this.columnPRODUCT_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCT_UPDATEDATEColumn {
                get {
                    return this.columnPRODUCT_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PRODUCTRow this[int index] {
                get {
                    return ((TBL_PRODUCTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PRODUCTRowChangeEventHandler TBL_PRODUCTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PRODUCTRowChangeEventHandler TBL_PRODUCTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PRODUCTRowChangeEventHandler TBL_PRODUCTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_PRODUCTRowChangeEventHandler TBL_PRODUCTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_PRODUCTRow(TBL_PRODUCTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PRODUCTRow AddTBL_PRODUCTRow(decimal TOTAL_PRODUCT, string DESCRIP_PRICE, bool PRODUCT_STATE, TBL_USERRow parentTBL_USERRowByFK_TBL_PRODUCT_TBL_USER, string PRODUCT_UPDATEDBY, System.DateTime PRODUCT_CREATEDATE, System.DateTime PRODUCT_UPDATEDATE) {
                TBL_PRODUCTRow rowTBL_PRODUCTRow = ((TBL_PRODUCTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TOTAL_PRODUCT,
                        DESCRIP_PRICE,
                        PRODUCT_STATE,
                        null,
                        PRODUCT_UPDATEDBY,
                        PRODUCT_CREATEDATE,
                        PRODUCT_UPDATEDATE};
                if ((parentTBL_USERRowByFK_TBL_PRODUCT_TBL_USER != null)) {
                    columnValuesArray[4] = parentTBL_USERRowByFK_TBL_PRODUCT_TBL_USER[0];
                }
                rowTBL_PRODUCTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_PRODUCTRow);
                return rowTBL_PRODUCTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PRODUCTRow FindByID_PRODUCT(int ID_PRODUCT) {
                return ((TBL_PRODUCTRow)(this.Rows.Find(new object[] {
                            ID_PRODUCT})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_PRODUCTDataTable cln = ((TBL_PRODUCTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_PRODUCTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_PRODUCT = base.Columns["ID_PRODUCT"];
                this.columnTOTAL_PRODUCT = base.Columns["TOTAL_PRODUCT"];
                this.columnDESCRIP_PRICE = base.Columns["DESCRIP_PRICE"];
                this.columnPRODUCT_STATE = base.Columns["PRODUCT_STATE"];
                this.columnPRODUCT_CREATEBY = base.Columns["PRODUCT_CREATEBY"];
                this.columnPRODUCT_UPDATEDBY = base.Columns["PRODUCT_UPDATEDBY"];
                this.columnPRODUCT_CREATEDATE = base.Columns["PRODUCT_CREATEDATE"];
                this.columnPRODUCT_UPDATEDATE = base.Columns["PRODUCT_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_PRODUCT = new global::System.Data.DataColumn("ID_PRODUCT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PRODUCT);
                this.columnTOTAL_PRODUCT = new global::System.Data.DataColumn("TOTAL_PRODUCT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_PRODUCT);
                this.columnDESCRIP_PRICE = new global::System.Data.DataColumn("DESCRIP_PRICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIP_PRICE);
                this.columnPRODUCT_STATE = new global::System.Data.DataColumn("PRODUCT_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_STATE);
                this.columnPRODUCT_CREATEBY = new global::System.Data.DataColumn("PRODUCT_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_CREATEBY);
                this.columnPRODUCT_UPDATEDBY = new global::System.Data.DataColumn("PRODUCT_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_UPDATEDBY);
                this.columnPRODUCT_CREATEDATE = new global::System.Data.DataColumn("PRODUCT_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_CREATEDATE);
                this.columnPRODUCT_UPDATEDATE = new global::System.Data.DataColumn("PRODUCT_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_PRODUCT}, true));
                this.columnID_PRODUCT.AutoIncrement = true;
                this.columnID_PRODUCT.AutoIncrementSeed = -1;
                this.columnID_PRODUCT.AutoIncrementStep = -1;
                this.columnID_PRODUCT.AllowDBNull = false;
                this.columnID_PRODUCT.ReadOnly = true;
                this.columnID_PRODUCT.Unique = true;
                this.columnTOTAL_PRODUCT.AllowDBNull = false;
                this.columnDESCRIP_PRICE.AllowDBNull = false;
                this.columnDESCRIP_PRICE.MaxLength = 50;
                this.columnPRODUCT_STATE.AllowDBNull = false;
                this.columnPRODUCT_CREATEBY.AllowDBNull = false;
                this.columnPRODUCT_CREATEBY.MaxLength = 50;
                this.columnPRODUCT_UPDATEDBY.MaxLength = 50;
                this.columnPRODUCT_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PRODUCTRow NewTBL_PRODUCTRow() {
                return ((TBL_PRODUCTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_PRODUCTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_PRODUCTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_PRODUCTRowChanged != null)) {
                    this.TBL_PRODUCTRowChanged(this, new TBL_PRODUCTRowChangeEvent(((TBL_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_PRODUCTRowChanging != null)) {
                    this.TBL_PRODUCTRowChanging(this, new TBL_PRODUCTRowChangeEvent(((TBL_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_PRODUCTRowDeleted != null)) {
                    this.TBL_PRODUCTRowDeleted(this, new TBL_PRODUCTRowChangeEvent(((TBL_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_PRODUCTRowDeleting != null)) {
                    this.TBL_PRODUCTRowDeleting(this, new TBL_PRODUCTRowChangeEvent(((TBL_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_PRODUCTRow(TBL_PRODUCTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_PRODUCTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_RECEIPTDataTable : global::System.Data.TypedTableBase<TBL_RECEIPTRow> {
            
            private global::System.Data.DataColumn columnID_RECEIPT;
            
            private global::System.Data.DataColumn columnNAME_CUSTOMER;
            
            private global::System.Data.DataColumn columnDATE_RECEIPT;
            
            private global::System.Data.DataColumn columnQUANTITY;
            
            private global::System.Data.DataColumn columnTOTAL_RECEIPT;
            
            private global::System.Data.DataColumn columnID_PRODUCT;
            
            private global::System.Data.DataColumn columnID_STOCK;
            
            private global::System.Data.DataColumn columnUNIT_PRICE;
            
            private global::System.Data.DataColumn columnCASH;
            
            private global::System.Data.DataColumn columnCHANGE;
            
            private global::System.Data.DataColumn columnRECEIPT_STATE;
            
            private global::System.Data.DataColumn columnRECEIPT_CREATEBY;
            
            private global::System.Data.DataColumn columnRECEIPT_UPDATEDBY;
            
            private global::System.Data.DataColumn columnRECEIPT_CREATEDATE;
            
            private global::System.Data.DataColumn columnRECEIPT_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_RECEIPTDataTable() {
                this.TableName = "TBL_RECEIPT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_RECEIPTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_RECEIPTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_RECEIPTColumn {
                get {
                    return this.columnID_RECEIPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CUSTOMERColumn {
                get {
                    return this.columnNAME_CUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATE_RECEIPTColumn {
                get {
                    return this.columnDATE_RECEIPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QUANTITYColumn {
                get {
                    return this.columnQUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_RECEIPTColumn {
                get {
                    return this.columnTOTAL_RECEIPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PRODUCTColumn {
                get {
                    return this.columnID_PRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_STOCKColumn {
                get {
                    return this.columnID_STOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UNIT_PRICEColumn {
                get {
                    return this.columnUNIT_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CASHColumn {
                get {
                    return this.columnCASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHANGEColumn {
                get {
                    return this.columnCHANGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECEIPT_STATEColumn {
                get {
                    return this.columnRECEIPT_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECEIPT_CREATEBYColumn {
                get {
                    return this.columnRECEIPT_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECEIPT_UPDATEDBYColumn {
                get {
                    return this.columnRECEIPT_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECEIPT_CREATEDATEColumn {
                get {
                    return this.columnRECEIPT_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECEIPT_UPDATEDATEColumn {
                get {
                    return this.columnRECEIPT_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_RECEIPTRow this[int index] {
                get {
                    return ((TBL_RECEIPTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_RECEIPTRowChangeEventHandler TBL_RECEIPTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_RECEIPTRowChangeEventHandler TBL_RECEIPTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_RECEIPTRowChangeEventHandler TBL_RECEIPTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_RECEIPTRowChangeEventHandler TBL_RECEIPTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_RECEIPTRow(TBL_RECEIPTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_RECEIPTRow AddTBL_RECEIPTRow(string NAME_CUSTOMER, System.DateTime DATE_RECEIPT, int QUANTITY, decimal TOTAL_RECEIPT, TBL_PRODUCTRow parentTBL_PRODUCTRowByFK_TBL_RECEIPT_TBL_PRICE_TAG, TBL_STOCKRow parentTBL_STOCKRowByFK_TBL_RECEIPT_TBL_STOCK, decimal UNIT_PRICE, decimal CASH, decimal CHANGE, bool RECEIPT_STATE, TBL_USERRow parentTBL_USERRowByFK_TBL_RECEIPT_TBL_USER, string RECEIPT_UPDATEDBY, System.DateTime RECEIPT_CREATEDATE, System.DateTime RECEIPT_UPDATEDATE) {
                TBL_RECEIPTRow rowTBL_RECEIPTRow = ((TBL_RECEIPTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME_CUSTOMER,
                        DATE_RECEIPT,
                        QUANTITY,
                        TOTAL_RECEIPT,
                        null,
                        null,
                        UNIT_PRICE,
                        CASH,
                        CHANGE,
                        RECEIPT_STATE,
                        null,
                        RECEIPT_UPDATEDBY,
                        RECEIPT_CREATEDATE,
                        RECEIPT_UPDATEDATE};
                if ((parentTBL_PRODUCTRowByFK_TBL_RECEIPT_TBL_PRICE_TAG != null)) {
                    columnValuesArray[5] = parentTBL_PRODUCTRowByFK_TBL_RECEIPT_TBL_PRICE_TAG[0];
                }
                if ((parentTBL_STOCKRowByFK_TBL_RECEIPT_TBL_STOCK != null)) {
                    columnValuesArray[6] = parentTBL_STOCKRowByFK_TBL_RECEIPT_TBL_STOCK[0];
                }
                if ((parentTBL_USERRowByFK_TBL_RECEIPT_TBL_USER != null)) {
                    columnValuesArray[11] = parentTBL_USERRowByFK_TBL_RECEIPT_TBL_USER[0];
                }
                rowTBL_RECEIPTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_RECEIPTRow);
                return rowTBL_RECEIPTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_RECEIPTRow FindByID_RECEIPT(int ID_RECEIPT) {
                return ((TBL_RECEIPTRow)(this.Rows.Find(new object[] {
                            ID_RECEIPT})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_RECEIPTDataTable cln = ((TBL_RECEIPTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_RECEIPTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_RECEIPT = base.Columns["ID_RECEIPT"];
                this.columnNAME_CUSTOMER = base.Columns["NAME_CUSTOMER"];
                this.columnDATE_RECEIPT = base.Columns["DATE_RECEIPT"];
                this.columnQUANTITY = base.Columns["QUANTITY"];
                this.columnTOTAL_RECEIPT = base.Columns["TOTAL_RECEIPT"];
                this.columnID_PRODUCT = base.Columns["ID_PRODUCT"];
                this.columnID_STOCK = base.Columns["ID_STOCK"];
                this.columnUNIT_PRICE = base.Columns["UNIT_PRICE"];
                this.columnCASH = base.Columns["CASH"];
                this.columnCHANGE = base.Columns["CHANGE"];
                this.columnRECEIPT_STATE = base.Columns["RECEIPT_STATE"];
                this.columnRECEIPT_CREATEBY = base.Columns["RECEIPT_CREATEBY"];
                this.columnRECEIPT_UPDATEDBY = base.Columns["RECEIPT_UPDATEDBY"];
                this.columnRECEIPT_CREATEDATE = base.Columns["RECEIPT_CREATEDATE"];
                this.columnRECEIPT_UPDATEDATE = base.Columns["RECEIPT_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_RECEIPT = new global::System.Data.DataColumn("ID_RECEIPT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_RECEIPT);
                this.columnNAME_CUSTOMER = new global::System.Data.DataColumn("NAME_CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_CUSTOMER);
                this.columnDATE_RECEIPT = new global::System.Data.DataColumn("DATE_RECEIPT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_RECEIPT);
                this.columnQUANTITY = new global::System.Data.DataColumn("QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY);
                this.columnTOTAL_RECEIPT = new global::System.Data.DataColumn("TOTAL_RECEIPT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_RECEIPT);
                this.columnID_PRODUCT = new global::System.Data.DataColumn("ID_PRODUCT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PRODUCT);
                this.columnID_STOCK = new global::System.Data.DataColumn("ID_STOCK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_STOCK);
                this.columnUNIT_PRICE = new global::System.Data.DataColumn("UNIT_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_PRICE);
                this.columnCASH = new global::System.Data.DataColumn("CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASH);
                this.columnCHANGE = new global::System.Data.DataColumn("CHANGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHANGE);
                this.columnRECEIPT_STATE = new global::System.Data.DataColumn("RECEIPT_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIPT_STATE);
                this.columnRECEIPT_CREATEBY = new global::System.Data.DataColumn("RECEIPT_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIPT_CREATEBY);
                this.columnRECEIPT_UPDATEDBY = new global::System.Data.DataColumn("RECEIPT_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIPT_UPDATEDBY);
                this.columnRECEIPT_CREATEDATE = new global::System.Data.DataColumn("RECEIPT_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIPT_CREATEDATE);
                this.columnRECEIPT_UPDATEDATE = new global::System.Data.DataColumn("RECEIPT_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIPT_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_RECEIPT}, true));
                this.columnID_RECEIPT.AutoIncrement = true;
                this.columnID_RECEIPT.AutoIncrementSeed = -1;
                this.columnID_RECEIPT.AutoIncrementStep = -1;
                this.columnID_RECEIPT.AllowDBNull = false;
                this.columnID_RECEIPT.ReadOnly = true;
                this.columnID_RECEIPT.Unique = true;
                this.columnNAME_CUSTOMER.AllowDBNull = false;
                this.columnNAME_CUSTOMER.MaxLength = 50;
                this.columnDATE_RECEIPT.AllowDBNull = false;
                this.columnQUANTITY.AllowDBNull = false;
                this.columnTOTAL_RECEIPT.AllowDBNull = false;
                this.columnID_PRODUCT.AllowDBNull = false;
                this.columnUNIT_PRICE.AllowDBNull = false;
                this.columnCASH.AllowDBNull = false;
                this.columnCHANGE.AllowDBNull = false;
                this.columnRECEIPT_STATE.AllowDBNull = false;
                this.columnRECEIPT_CREATEBY.AllowDBNull = false;
                this.columnRECEIPT_CREATEBY.MaxLength = 50;
                this.columnRECEIPT_UPDATEDBY.MaxLength = 50;
                this.columnRECEIPT_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_RECEIPTRow NewTBL_RECEIPTRow() {
                return ((TBL_RECEIPTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_RECEIPTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_RECEIPTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_RECEIPTRowChanged != null)) {
                    this.TBL_RECEIPTRowChanged(this, new TBL_RECEIPTRowChangeEvent(((TBL_RECEIPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_RECEIPTRowChanging != null)) {
                    this.TBL_RECEIPTRowChanging(this, new TBL_RECEIPTRowChangeEvent(((TBL_RECEIPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_RECEIPTRowDeleted != null)) {
                    this.TBL_RECEIPTRowDeleted(this, new TBL_RECEIPTRowChangeEvent(((TBL_RECEIPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_RECEIPTRowDeleting != null)) {
                    this.TBL_RECEIPTRowDeleting(this, new TBL_RECEIPTRowChangeEvent(((TBL_RECEIPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_RECEIPTRow(TBL_RECEIPTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_RECEIPTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_ROLEDataTable : global::System.Data.TypedTableBase<TBL_ROLERow> {
            
            private global::System.Data.DataColumn columnID_ROLE;
            
            private global::System.Data.DataColumn columnNAME_ROLE;
            
            private global::System.Data.DataColumn columnDESCRIP_ROLE;
            
            private global::System.Data.DataColumn columnROLE_STATE;
            
            private global::System.Data.DataColumn columnROLE_CREATEBY;
            
            private global::System.Data.DataColumn columnROLE_UPDATEDBY;
            
            private global::System.Data.DataColumn columnROLE_CREATEDATE;
            
            private global::System.Data.DataColumn columnROLE_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLEDataTable() {
                this.TableName = "TBL_ROLE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_ROLEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_ROLEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ROLEColumn {
                get {
                    return this.columnID_ROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_ROLEColumn {
                get {
                    return this.columnNAME_ROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DESCRIP_ROLEColumn {
                get {
                    return this.columnDESCRIP_ROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_STATEColumn {
                get {
                    return this.columnROLE_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_CREATEBYColumn {
                get {
                    return this.columnROLE_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_UPDATEDBYColumn {
                get {
                    return this.columnROLE_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_CREATEDATEColumn {
                get {
                    return this.columnROLE_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_UPDATEDATEColumn {
                get {
                    return this.columnROLE_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLERow this[int index] {
                get {
                    return ((TBL_ROLERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ROLERowChangeEventHandler TBL_ROLERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ROLERowChangeEventHandler TBL_ROLERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ROLERowChangeEventHandler TBL_ROLERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ROLERowChangeEventHandler TBL_ROLERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_ROLERow(TBL_ROLERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLERow AddTBL_ROLERow(string NAME_ROLE, string DESCRIP_ROLE, bool ROLE_STATE, string ROLE_CREATEBY, string ROLE_UPDATEDBY, System.DateTime ROLE_CREATEDATE, System.DateTime ROLE_UPDATEDATE) {
                TBL_ROLERow rowTBL_ROLERow = ((TBL_ROLERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME_ROLE,
                        DESCRIP_ROLE,
                        ROLE_STATE,
                        ROLE_CREATEBY,
                        ROLE_UPDATEDBY,
                        ROLE_CREATEDATE,
                        ROLE_UPDATEDATE};
                rowTBL_ROLERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_ROLERow);
                return rowTBL_ROLERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLERow FindByID_ROLE(int ID_ROLE) {
                return ((TBL_ROLERow)(this.Rows.Find(new object[] {
                            ID_ROLE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_ROLEDataTable cln = ((TBL_ROLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_ROLEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_ROLE = base.Columns["ID_ROLE"];
                this.columnNAME_ROLE = base.Columns["NAME_ROLE"];
                this.columnDESCRIP_ROLE = base.Columns["DESCRIP_ROLE"];
                this.columnROLE_STATE = base.Columns["ROLE_STATE"];
                this.columnROLE_CREATEBY = base.Columns["ROLE_CREATEBY"];
                this.columnROLE_UPDATEDBY = base.Columns["ROLE_UPDATEDBY"];
                this.columnROLE_CREATEDATE = base.Columns["ROLE_CREATEDATE"];
                this.columnROLE_UPDATEDATE = base.Columns["ROLE_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_ROLE = new global::System.Data.DataColumn("ID_ROLE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ROLE);
                this.columnNAME_ROLE = new global::System.Data.DataColumn("NAME_ROLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ROLE);
                this.columnDESCRIP_ROLE = new global::System.Data.DataColumn("DESCRIP_ROLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIP_ROLE);
                this.columnROLE_STATE = new global::System.Data.DataColumn("ROLE_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_STATE);
                this.columnROLE_CREATEBY = new global::System.Data.DataColumn("ROLE_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_CREATEBY);
                this.columnROLE_UPDATEDBY = new global::System.Data.DataColumn("ROLE_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_UPDATEDBY);
                this.columnROLE_CREATEDATE = new global::System.Data.DataColumn("ROLE_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_CREATEDATE);
                this.columnROLE_UPDATEDATE = new global::System.Data.DataColumn("ROLE_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ROLE}, true));
                this.columnID_ROLE.AutoIncrement = true;
                this.columnID_ROLE.AutoIncrementSeed = -1;
                this.columnID_ROLE.AutoIncrementStep = -1;
                this.columnID_ROLE.AllowDBNull = false;
                this.columnID_ROLE.ReadOnly = true;
                this.columnID_ROLE.Unique = true;
                this.columnNAME_ROLE.AllowDBNull = false;
                this.columnNAME_ROLE.MaxLength = 15;
                this.columnDESCRIP_ROLE.AllowDBNull = false;
                this.columnDESCRIP_ROLE.MaxLength = 50;
                this.columnROLE_STATE.AllowDBNull = false;
                this.columnROLE_CREATEBY.AllowDBNull = false;
                this.columnROLE_CREATEBY.MaxLength = 50;
                this.columnROLE_UPDATEDBY.MaxLength = 50;
                this.columnROLE_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLERow NewTBL_ROLERow() {
                return ((TBL_ROLERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_ROLERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_ROLERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_ROLERowChanged != null)) {
                    this.TBL_ROLERowChanged(this, new TBL_ROLERowChangeEvent(((TBL_ROLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_ROLERowChanging != null)) {
                    this.TBL_ROLERowChanging(this, new TBL_ROLERowChangeEvent(((TBL_ROLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_ROLERowDeleted != null)) {
                    this.TBL_ROLERowDeleted(this, new TBL_ROLERowChangeEvent(((TBL_ROLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_ROLERowDeleting != null)) {
                    this.TBL_ROLERowDeleting(this, new TBL_ROLERowChangeEvent(((TBL_ROLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_ROLERow(TBL_ROLERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_ROLEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_ROLE_PERMISSIONDataTable : global::System.Data.TypedTableBase<TBL_ROLE_PERMISSIONRow> {
            
            private global::System.Data.DataColumn columnID_ROLE;
            
            private global::System.Data.DataColumn columnID_PER;
            
            private global::System.Data.DataColumn columnROLE_PER_STATE;
            
            private global::System.Data.DataColumn columnROLE_PER_CREATEBY;
            
            private global::System.Data.DataColumn columnROLE_PER_UPDATEDBY;
            
            private global::System.Data.DataColumn columnROLE_PER_CREATEDATE;
            
            private global::System.Data.DataColumn columnROLE_PER_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLE_PERMISSIONDataTable() {
                this.TableName = "TBL_ROLE_PERMISSION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_ROLE_PERMISSIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_ROLE_PERMISSIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ROLEColumn {
                get {
                    return this.columnID_ROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PERColumn {
                get {
                    return this.columnID_PER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_PER_STATEColumn {
                get {
                    return this.columnROLE_PER_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_PER_CREATEBYColumn {
                get {
                    return this.columnROLE_PER_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_PER_UPDATEDBYColumn {
                get {
                    return this.columnROLE_PER_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_PER_CREATEDATEColumn {
                get {
                    return this.columnROLE_PER_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_PER_UPDATEDATEColumn {
                get {
                    return this.columnROLE_PER_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLE_PERMISSIONRow this[int index] {
                get {
                    return ((TBL_ROLE_PERMISSIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ROLE_PERMISSIONRowChangeEventHandler TBL_ROLE_PERMISSIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ROLE_PERMISSIONRowChangeEventHandler TBL_ROLE_PERMISSIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ROLE_PERMISSIONRowChangeEventHandler TBL_ROLE_PERMISSIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_ROLE_PERMISSIONRowChangeEventHandler TBL_ROLE_PERMISSIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_ROLE_PERMISSIONRow(TBL_ROLE_PERMISSIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLE_PERMISSIONRow AddTBL_ROLE_PERMISSIONRow(TBL_ROLERow parentTBL_ROLERowByFK_TBL_ROLE_PERMISSION_TBL_ROLE, TBL_PERMISSIONRow parentTBL_PERMISSIONRowByFK_TBL_ROLE_PERMISSION_TBL_PERMISSION, bool ROLE_PER_STATE, string ROLE_PER_CREATEBY, string ROLE_PER_UPDATEDBY, System.DateTime ROLE_PER_CREATEDATE, System.DateTime ROLE_PER_UPDATEDATE) {
                TBL_ROLE_PERMISSIONRow rowTBL_ROLE_PERMISSIONRow = ((TBL_ROLE_PERMISSIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        ROLE_PER_STATE,
                        ROLE_PER_CREATEBY,
                        ROLE_PER_UPDATEDBY,
                        ROLE_PER_CREATEDATE,
                        ROLE_PER_UPDATEDATE};
                if ((parentTBL_ROLERowByFK_TBL_ROLE_PERMISSION_TBL_ROLE != null)) {
                    columnValuesArray[0] = parentTBL_ROLERowByFK_TBL_ROLE_PERMISSION_TBL_ROLE[0];
                }
                if ((parentTBL_PERMISSIONRowByFK_TBL_ROLE_PERMISSION_TBL_PERMISSION != null)) {
                    columnValuesArray[1] = parentTBL_PERMISSIONRowByFK_TBL_ROLE_PERMISSION_TBL_PERMISSION[0];
                }
                rowTBL_ROLE_PERMISSIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_ROLE_PERMISSIONRow);
                return rowTBL_ROLE_PERMISSIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_ROLE_PERMISSIONDataTable cln = ((TBL_ROLE_PERMISSIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_ROLE_PERMISSIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_ROLE = base.Columns["ID_ROLE"];
                this.columnID_PER = base.Columns["ID_PER"];
                this.columnROLE_PER_STATE = base.Columns["ROLE_PER_STATE"];
                this.columnROLE_PER_CREATEBY = base.Columns["ROLE_PER_CREATEBY"];
                this.columnROLE_PER_UPDATEDBY = base.Columns["ROLE_PER_UPDATEDBY"];
                this.columnROLE_PER_CREATEDATE = base.Columns["ROLE_PER_CREATEDATE"];
                this.columnROLE_PER_UPDATEDATE = base.Columns["ROLE_PER_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_ROLE = new global::System.Data.DataColumn("ID_ROLE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ROLE);
                this.columnID_PER = new global::System.Data.DataColumn("ID_PER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PER);
                this.columnROLE_PER_STATE = new global::System.Data.DataColumn("ROLE_PER_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_PER_STATE);
                this.columnROLE_PER_CREATEBY = new global::System.Data.DataColumn("ROLE_PER_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_PER_CREATEBY);
                this.columnROLE_PER_UPDATEDBY = new global::System.Data.DataColumn("ROLE_PER_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_PER_UPDATEDBY);
                this.columnROLE_PER_CREATEDATE = new global::System.Data.DataColumn("ROLE_PER_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_PER_CREATEDATE);
                this.columnROLE_PER_UPDATEDATE = new global::System.Data.DataColumn("ROLE_PER_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_PER_UPDATEDATE);
                this.columnID_ROLE.AllowDBNull = false;
                this.columnID_PER.AllowDBNull = false;
                this.columnROLE_PER_STATE.AllowDBNull = false;
                this.columnROLE_PER_CREATEBY.AllowDBNull = false;
                this.columnROLE_PER_CREATEBY.MaxLength = 50;
                this.columnROLE_PER_UPDATEDBY.AllowDBNull = false;
                this.columnROLE_PER_UPDATEDBY.MaxLength = 50;
                this.columnROLE_PER_CREATEDATE.AllowDBNull = false;
                this.columnROLE_PER_UPDATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLE_PERMISSIONRow NewTBL_ROLE_PERMISSIONRow() {
                return ((TBL_ROLE_PERMISSIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_ROLE_PERMISSIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_ROLE_PERMISSIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_ROLE_PERMISSIONRowChanged != null)) {
                    this.TBL_ROLE_PERMISSIONRowChanged(this, new TBL_ROLE_PERMISSIONRowChangeEvent(((TBL_ROLE_PERMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_ROLE_PERMISSIONRowChanging != null)) {
                    this.TBL_ROLE_PERMISSIONRowChanging(this, new TBL_ROLE_PERMISSIONRowChangeEvent(((TBL_ROLE_PERMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_ROLE_PERMISSIONRowDeleted != null)) {
                    this.TBL_ROLE_PERMISSIONRowDeleted(this, new TBL_ROLE_PERMISSIONRowChangeEvent(((TBL_ROLE_PERMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_ROLE_PERMISSIONRowDeleting != null)) {
                    this.TBL_ROLE_PERMISSIONRowDeleting(this, new TBL_ROLE_PERMISSIONRowChangeEvent(((TBL_ROLE_PERMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_ROLE_PERMISSIONRow(TBL_ROLE_PERMISSIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_ROLE_PERMISSIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_SESSIONDataTable : global::System.Data.TypedTableBase<TBL_SESSIONRow> {
            
            private global::System.Data.DataColumn columnID_SESION;
            
            private global::System.Data.DataColumn columnID_USER;
            
            private global::System.Data.DataColumn columnDATE_SESSION;
            
            private global::System.Data.DataColumn columnEDIT_SESSION;
            
            private global::System.Data.DataColumn columnSESSION_STATE;
            
            private global::System.Data.DataColumn columnSESSION_CREATEBY;
            
            private global::System.Data.DataColumn columnSESSION_UPDATEDBY;
            
            private global::System.Data.DataColumn columnSESSION_CREATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SESSIONDataTable() {
                this.TableName = "TBL_SESSION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_SESSIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_SESSIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_SESIONColumn {
                get {
                    return this.columnID_SESION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_USERColumn {
                get {
                    return this.columnID_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATE_SESSIONColumn {
                get {
                    return this.columnDATE_SESSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EDIT_SESSIONColumn {
                get {
                    return this.columnEDIT_SESSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SESSION_STATEColumn {
                get {
                    return this.columnSESSION_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SESSION_CREATEBYColumn {
                get {
                    return this.columnSESSION_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SESSION_UPDATEDBYColumn {
                get {
                    return this.columnSESSION_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SESSION_CREATEDATEColumn {
                get {
                    return this.columnSESSION_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SESSIONRow this[int index] {
                get {
                    return ((TBL_SESSIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_SESSIONRowChangeEventHandler TBL_SESSIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_SESSIONRowChangeEventHandler TBL_SESSIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_SESSIONRowChangeEventHandler TBL_SESSIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_SESSIONRowChangeEventHandler TBL_SESSIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_SESSIONRow(TBL_SESSIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SESSIONRow AddTBL_SESSIONRow(TBL_USERRow parentTBL_USERRowByFK_TBL_SESSION_TBL_USER, System.DateTime DATE_SESSION, string EDIT_SESSION, bool SESSION_STATE, string SESSION_CREATEBY, string SESSION_UPDATEDBY, System.DateTime SESSION_CREATEDATE) {
                TBL_SESSIONRow rowTBL_SESSIONRow = ((TBL_SESSIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        DATE_SESSION,
                        EDIT_SESSION,
                        SESSION_STATE,
                        SESSION_CREATEBY,
                        SESSION_UPDATEDBY,
                        SESSION_CREATEDATE};
                if ((parentTBL_USERRowByFK_TBL_SESSION_TBL_USER != null)) {
                    columnValuesArray[1] = parentTBL_USERRowByFK_TBL_SESSION_TBL_USER[0];
                }
                rowTBL_SESSIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_SESSIONRow);
                return rowTBL_SESSIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SESSIONRow FindByID_SESION(int ID_SESION) {
                return ((TBL_SESSIONRow)(this.Rows.Find(new object[] {
                            ID_SESION})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_SESSIONDataTable cln = ((TBL_SESSIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_SESSIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_SESION = base.Columns["ID_SESION"];
                this.columnID_USER = base.Columns["ID_USER"];
                this.columnDATE_SESSION = base.Columns["DATE_SESSION"];
                this.columnEDIT_SESSION = base.Columns["EDIT_SESSION"];
                this.columnSESSION_STATE = base.Columns["SESSION_STATE"];
                this.columnSESSION_CREATEBY = base.Columns["SESSION_CREATEBY"];
                this.columnSESSION_UPDATEDBY = base.Columns["SESSION_UPDATEDBY"];
                this.columnSESSION_CREATEDATE = base.Columns["SESSION_CREATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_SESION = new global::System.Data.DataColumn("ID_SESION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_SESION);
                this.columnID_USER = new global::System.Data.DataColumn("ID_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_USER);
                this.columnDATE_SESSION = new global::System.Data.DataColumn("DATE_SESSION", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_SESSION);
                this.columnEDIT_SESSION = new global::System.Data.DataColumn("EDIT_SESSION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDIT_SESSION);
                this.columnSESSION_STATE = new global::System.Data.DataColumn("SESSION_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESSION_STATE);
                this.columnSESSION_CREATEBY = new global::System.Data.DataColumn("SESSION_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESSION_CREATEBY);
                this.columnSESSION_UPDATEDBY = new global::System.Data.DataColumn("SESSION_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESSION_UPDATEDBY);
                this.columnSESSION_CREATEDATE = new global::System.Data.DataColumn("SESSION_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSESSION_CREATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_SESION}, true));
                this.columnID_SESION.AutoIncrement = true;
                this.columnID_SESION.AutoIncrementSeed = -1;
                this.columnID_SESION.AutoIncrementStep = -1;
                this.columnID_SESION.AllowDBNull = false;
                this.columnID_SESION.ReadOnly = true;
                this.columnID_SESION.Unique = true;
                this.columnID_USER.AllowDBNull = false;
                this.columnID_USER.MaxLength = 50;
                this.columnDATE_SESSION.AllowDBNull = false;
                this.columnEDIT_SESSION.AllowDBNull = false;
                this.columnEDIT_SESSION.MaxLength = 2;
                this.columnSESSION_STATE.AllowDBNull = false;
                this.columnSESSION_CREATEBY.AllowDBNull = false;
                this.columnSESSION_CREATEBY.MaxLength = 50;
                this.columnSESSION_UPDATEDBY.MaxLength = 50;
                this.columnSESSION_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SESSIONRow NewTBL_SESSIONRow() {
                return ((TBL_SESSIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_SESSIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_SESSIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_SESSIONRowChanged != null)) {
                    this.TBL_SESSIONRowChanged(this, new TBL_SESSIONRowChangeEvent(((TBL_SESSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_SESSIONRowChanging != null)) {
                    this.TBL_SESSIONRowChanging(this, new TBL_SESSIONRowChangeEvent(((TBL_SESSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_SESSIONRowDeleted != null)) {
                    this.TBL_SESSIONRowDeleted(this, new TBL_SESSIONRowChangeEvent(((TBL_SESSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_SESSIONRowDeleting != null)) {
                    this.TBL_SESSIONRowDeleting(this, new TBL_SESSIONRowChangeEvent(((TBL_SESSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_SESSIONRow(TBL_SESSIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_SESSIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_STOCKDataTable : global::System.Data.TypedTableBase<TBL_STOCKRow> {
            
            private global::System.Data.DataColumn columnID_STOCK;
            
            private global::System.Data.DataColumn columnID_PRODUCT;
            
            private global::System.Data.DataColumn columnSTOCK_INITIAL_QUANTITY;
            
            private global::System.Data.DataColumn columnSTOCK_QUANTITY;
            
            private global::System.Data.DataColumn columnSTOCK_ADJUSTMENT;
            
            private global::System.Data.DataColumn columnSTOCK_DATE_PRODUCT;
            
            private global::System.Data.DataColumn columnSTOCK_COUNTER;
            
            private global::System.Data.DataColumn columnSTOCK_STATE;
            
            private global::System.Data.DataColumn columnSTOCK_CREATEBY;
            
            private global::System.Data.DataColumn columnSTOCK_UPDATEDBY;
            
            private global::System.Data.DataColumn columnSTOCK_CREATEDATE;
            
            private global::System.Data.DataColumn columnSTOCK_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_STOCKDataTable() {
                this.TableName = "TBL_STOCK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_STOCKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_STOCKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_STOCKColumn {
                get {
                    return this.columnID_STOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PRODUCTColumn {
                get {
                    return this.columnID_PRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_INITIAL_QUANTITYColumn {
                get {
                    return this.columnSTOCK_INITIAL_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_QUANTITYColumn {
                get {
                    return this.columnSTOCK_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_ADJUSTMENTColumn {
                get {
                    return this.columnSTOCK_ADJUSTMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_DATE_PRODUCTColumn {
                get {
                    return this.columnSTOCK_DATE_PRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_COUNTERColumn {
                get {
                    return this.columnSTOCK_COUNTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_STATEColumn {
                get {
                    return this.columnSTOCK_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_CREATEBYColumn {
                get {
                    return this.columnSTOCK_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_UPDATEDBYColumn {
                get {
                    return this.columnSTOCK_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_CREATEDATEColumn {
                get {
                    return this.columnSTOCK_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_UPDATEDATEColumn {
                get {
                    return this.columnSTOCK_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_STOCKRow this[int index] {
                get {
                    return ((TBL_STOCKRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_STOCKRowChangeEventHandler TBL_STOCKRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_STOCKRowChangeEventHandler TBL_STOCKRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_STOCKRowChangeEventHandler TBL_STOCKRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_STOCKRowChangeEventHandler TBL_STOCKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_STOCKRow(TBL_STOCKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_STOCKRow AddTBL_STOCKRow(TBL_PRODUCTRow parentTBL_PRODUCTRowByFK_TBL_STOCK_TBL_PRODUCT, int STOCK_INITIAL_QUANTITY, int STOCK_QUANTITY, int STOCK_ADJUSTMENT, System.DateTime STOCK_DATE_PRODUCT, bool STOCK_COUNTER, bool STOCK_STATE, TBL_USERRow parentTBL_USERRowByFK_TBL_STOCK_TBL_USER, string STOCK_UPDATEDBY, System.DateTime STOCK_CREATEDATE, System.DateTime STOCK_UPDATEDATE) {
                TBL_STOCKRow rowTBL_STOCKRow = ((TBL_STOCKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        STOCK_INITIAL_QUANTITY,
                        STOCK_QUANTITY,
                        STOCK_ADJUSTMENT,
                        STOCK_DATE_PRODUCT,
                        STOCK_COUNTER,
                        STOCK_STATE,
                        null,
                        STOCK_UPDATEDBY,
                        STOCK_CREATEDATE,
                        STOCK_UPDATEDATE};
                if ((parentTBL_PRODUCTRowByFK_TBL_STOCK_TBL_PRODUCT != null)) {
                    columnValuesArray[1] = parentTBL_PRODUCTRowByFK_TBL_STOCK_TBL_PRODUCT[0];
                }
                if ((parentTBL_USERRowByFK_TBL_STOCK_TBL_USER != null)) {
                    columnValuesArray[8] = parentTBL_USERRowByFK_TBL_STOCK_TBL_USER[0];
                }
                rowTBL_STOCKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_STOCKRow);
                return rowTBL_STOCKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_STOCKRow FindByID_STOCK(int ID_STOCK) {
                return ((TBL_STOCKRow)(this.Rows.Find(new object[] {
                            ID_STOCK})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_STOCKDataTable cln = ((TBL_STOCKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_STOCKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_STOCK = base.Columns["ID_STOCK"];
                this.columnID_PRODUCT = base.Columns["ID_PRODUCT"];
                this.columnSTOCK_INITIAL_QUANTITY = base.Columns["STOCK_INITIAL_QUANTITY"];
                this.columnSTOCK_QUANTITY = base.Columns["STOCK_QUANTITY"];
                this.columnSTOCK_ADJUSTMENT = base.Columns["STOCK_ADJUSTMENT"];
                this.columnSTOCK_DATE_PRODUCT = base.Columns["STOCK_DATE_PRODUCT"];
                this.columnSTOCK_COUNTER = base.Columns["STOCK_COUNTER"];
                this.columnSTOCK_STATE = base.Columns["STOCK_STATE"];
                this.columnSTOCK_CREATEBY = base.Columns["STOCK_CREATEBY"];
                this.columnSTOCK_UPDATEDBY = base.Columns["STOCK_UPDATEDBY"];
                this.columnSTOCK_CREATEDATE = base.Columns["STOCK_CREATEDATE"];
                this.columnSTOCK_UPDATEDATE = base.Columns["STOCK_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_STOCK = new global::System.Data.DataColumn("ID_STOCK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_STOCK);
                this.columnID_PRODUCT = new global::System.Data.DataColumn("ID_PRODUCT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PRODUCT);
                this.columnSTOCK_INITIAL_QUANTITY = new global::System.Data.DataColumn("STOCK_INITIAL_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_INITIAL_QUANTITY);
                this.columnSTOCK_QUANTITY = new global::System.Data.DataColumn("STOCK_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_QUANTITY);
                this.columnSTOCK_ADJUSTMENT = new global::System.Data.DataColumn("STOCK_ADJUSTMENT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_ADJUSTMENT);
                this.columnSTOCK_DATE_PRODUCT = new global::System.Data.DataColumn("STOCK_DATE_PRODUCT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_DATE_PRODUCT);
                this.columnSTOCK_COUNTER = new global::System.Data.DataColumn("STOCK_COUNTER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_COUNTER);
                this.columnSTOCK_STATE = new global::System.Data.DataColumn("STOCK_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_STATE);
                this.columnSTOCK_CREATEBY = new global::System.Data.DataColumn("STOCK_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_CREATEBY);
                this.columnSTOCK_UPDATEDBY = new global::System.Data.DataColumn("STOCK_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_UPDATEDBY);
                this.columnSTOCK_CREATEDATE = new global::System.Data.DataColumn("STOCK_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_CREATEDATE);
                this.columnSTOCK_UPDATEDATE = new global::System.Data.DataColumn("STOCK_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_STOCK}, true));
                this.columnID_STOCK.AutoIncrement = true;
                this.columnID_STOCK.AutoIncrementSeed = -1;
                this.columnID_STOCK.AutoIncrementStep = -1;
                this.columnID_STOCK.AllowDBNull = false;
                this.columnID_STOCK.ReadOnly = true;
                this.columnID_STOCK.Unique = true;
                this.columnID_PRODUCT.AllowDBNull = false;
                this.columnSTOCK_INITIAL_QUANTITY.AllowDBNull = false;
                this.columnSTOCK_QUANTITY.AllowDBNull = false;
                this.columnSTOCK_DATE_PRODUCT.AllowDBNull = false;
                this.columnSTOCK_STATE.AllowDBNull = false;
                this.columnSTOCK_CREATEBY.AllowDBNull = false;
                this.columnSTOCK_CREATEBY.MaxLength = 50;
                this.columnSTOCK_UPDATEDBY.AllowDBNull = false;
                this.columnSTOCK_UPDATEDBY.MaxLength = 50;
                this.columnSTOCK_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_STOCKRow NewTBL_STOCKRow() {
                return ((TBL_STOCKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_STOCKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_STOCKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_STOCKRowChanged != null)) {
                    this.TBL_STOCKRowChanged(this, new TBL_STOCKRowChangeEvent(((TBL_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_STOCKRowChanging != null)) {
                    this.TBL_STOCKRowChanging(this, new TBL_STOCKRowChangeEvent(((TBL_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_STOCKRowDeleted != null)) {
                    this.TBL_STOCKRowDeleted(this, new TBL_STOCKRowChangeEvent(((TBL_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_STOCKRowDeleting != null)) {
                    this.TBL_STOCKRowDeleting(this, new TBL_STOCKRowChangeEvent(((TBL_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_STOCKRow(TBL_STOCKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_STOCKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_USERDataTable : global::System.Data.TypedTableBase<TBL_USERRow> {
            
            private global::System.Data.DataColumn columnID_USER;
            
            private global::System.Data.DataColumn columnUSER_NAME;
            
            private global::System.Data.DataColumn columnUSER_EMAIL;
            
            private global::System.Data.DataColumn columnID_DPT;
            
            private global::System.Data.DataColumn columnID_AREA;
            
            private global::System.Data.DataColumn columnID_POSITION;
            
            private global::System.Data.DataColumn columnID_ROLE;
            
            private global::System.Data.DataColumn columnUSER_NICKNAME;
            
            private global::System.Data.DataColumn columnUSER_PASSWORD;
            
            private global::System.Data.DataColumn columnUSER_STATE;
            
            private global::System.Data.DataColumn columnUSER_CREATEBY;
            
            private global::System.Data.DataColumn columnUSER_UPDATEDBY;
            
            private global::System.Data.DataColumn columnUSER_CREATEDATE;
            
            private global::System.Data.DataColumn columnUSER_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERDataTable() {
                this.TableName = "TBL_USER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_USERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBL_USERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_USERColumn {
                get {
                    return this.columnID_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_NAMEColumn {
                get {
                    return this.columnUSER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_EMAILColumn {
                get {
                    return this.columnUSER_EMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_DPTColumn {
                get {
                    return this.columnID_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_AREAColumn {
                get {
                    return this.columnID_AREA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_POSITIONColumn {
                get {
                    return this.columnID_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ROLEColumn {
                get {
                    return this.columnID_ROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_NICKNAMEColumn {
                get {
                    return this.columnUSER_NICKNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_PASSWORDColumn {
                get {
                    return this.columnUSER_PASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_STATEColumn {
                get {
                    return this.columnUSER_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_CREATEBYColumn {
                get {
                    return this.columnUSER_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_UPDATEDBYColumn {
                get {
                    return this.columnUSER_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_CREATEDATEColumn {
                get {
                    return this.columnUSER_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_UPDATEDATEColumn {
                get {
                    return this.columnUSER_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow this[int index] {
                get {
                    return ((TBL_USERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_USERRowChangeEventHandler TBL_USERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_USERRowChangeEventHandler TBL_USERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_USERRowChangeEventHandler TBL_USERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBL_USERRowChangeEventHandler TBL_USERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBL_USERRow(TBL_USERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow AddTBL_USERRow(string ID_USER, string USER_NAME, string USER_EMAIL, TBL_DPTRow parentTBL_DPTRowByFK_TBL_USER_TBL_DPT, TBL_AREARow parentTBL_AREARowByFK_TBL_USER_TBL_AREA, TBL_POSITIONRow parentTBL_POSITIONRowByFK_TBL_USER_TBL_POSITION, TBL_ROLERow parentTBL_ROLERowByFK_TBL_USER_TBL_ROLE, string USER_NICKNAME, string USER_PASSWORD, bool USER_STATE, string USER_CREATEBY, string USER_UPDATEDBY, System.DateTime USER_CREATEDATE, System.DateTime USER_UPDATEDATE) {
                TBL_USERRow rowTBL_USERRow = ((TBL_USERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_USER,
                        USER_NAME,
                        USER_EMAIL,
                        null,
                        null,
                        null,
                        null,
                        USER_NICKNAME,
                        USER_PASSWORD,
                        USER_STATE,
                        USER_CREATEBY,
                        USER_UPDATEDBY,
                        USER_CREATEDATE,
                        USER_UPDATEDATE};
                if ((parentTBL_DPTRowByFK_TBL_USER_TBL_DPT != null)) {
                    columnValuesArray[3] = parentTBL_DPTRowByFK_TBL_USER_TBL_DPT[0];
                }
                if ((parentTBL_AREARowByFK_TBL_USER_TBL_AREA != null)) {
                    columnValuesArray[4] = parentTBL_AREARowByFK_TBL_USER_TBL_AREA[0];
                }
                if ((parentTBL_POSITIONRowByFK_TBL_USER_TBL_POSITION != null)) {
                    columnValuesArray[5] = parentTBL_POSITIONRowByFK_TBL_USER_TBL_POSITION[0];
                }
                if ((parentTBL_ROLERowByFK_TBL_USER_TBL_ROLE != null)) {
                    columnValuesArray[6] = parentTBL_ROLERowByFK_TBL_USER_TBL_ROLE[0];
                }
                rowTBL_USERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_USERRow);
                return rowTBL_USERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow FindByID_USER(string ID_USER) {
                return ((TBL_USERRow)(this.Rows.Find(new object[] {
                            ID_USER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_USERDataTable cln = ((TBL_USERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_USERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_USER = base.Columns["ID_USER"];
                this.columnUSER_NAME = base.Columns["USER_NAME"];
                this.columnUSER_EMAIL = base.Columns["USER_EMAIL"];
                this.columnID_DPT = base.Columns["ID_DPT"];
                this.columnID_AREA = base.Columns["ID_AREA"];
                this.columnID_POSITION = base.Columns["ID_POSITION"];
                this.columnID_ROLE = base.Columns["ID_ROLE"];
                this.columnUSER_NICKNAME = base.Columns["USER_NICKNAME"];
                this.columnUSER_PASSWORD = base.Columns["USER_PASSWORD"];
                this.columnUSER_STATE = base.Columns["USER_STATE"];
                this.columnUSER_CREATEBY = base.Columns["USER_CREATEBY"];
                this.columnUSER_UPDATEDBY = base.Columns["USER_UPDATEDBY"];
                this.columnUSER_CREATEDATE = base.Columns["USER_CREATEDATE"];
                this.columnUSER_UPDATEDATE = base.Columns["USER_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_USER = new global::System.Data.DataColumn("ID_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_USER);
                this.columnUSER_NAME = new global::System.Data.DataColumn("USER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NAME);
                this.columnUSER_EMAIL = new global::System.Data.DataColumn("USER_EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_EMAIL);
                this.columnID_DPT = new global::System.Data.DataColumn("ID_DPT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_DPT);
                this.columnID_AREA = new global::System.Data.DataColumn("ID_AREA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AREA);
                this.columnID_POSITION = new global::System.Data.DataColumn("ID_POSITION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_POSITION);
                this.columnID_ROLE = new global::System.Data.DataColumn("ID_ROLE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ROLE);
                this.columnUSER_NICKNAME = new global::System.Data.DataColumn("USER_NICKNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NICKNAME);
                this.columnUSER_PASSWORD = new global::System.Data.DataColumn("USER_PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_PASSWORD);
                this.columnUSER_STATE = new global::System.Data.DataColumn("USER_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_STATE);
                this.columnUSER_CREATEBY = new global::System.Data.DataColumn("USER_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_CREATEBY);
                this.columnUSER_UPDATEDBY = new global::System.Data.DataColumn("USER_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_UPDATEDBY);
                this.columnUSER_CREATEDATE = new global::System.Data.DataColumn("USER_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_CREATEDATE);
                this.columnUSER_UPDATEDATE = new global::System.Data.DataColumn("USER_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_USER}, true));
                this.columnID_USER.AllowDBNull = false;
                this.columnID_USER.Unique = true;
                this.columnID_USER.MaxLength = 50;
                this.columnUSER_NAME.AllowDBNull = false;
                this.columnUSER_NAME.MaxLength = 150;
                this.columnUSER_EMAIL.AllowDBNull = false;
                this.columnUSER_EMAIL.MaxLength = 150;
                this.columnID_DPT.AllowDBNull = false;
                this.columnID_AREA.AllowDBNull = false;
                this.columnID_POSITION.AllowDBNull = false;
                this.columnID_ROLE.AllowDBNull = false;
                this.columnUSER_NICKNAME.AllowDBNull = false;
                this.columnUSER_NICKNAME.MaxLength = 50;
                this.columnUSER_PASSWORD.AllowDBNull = false;
                this.columnUSER_PASSWORD.MaxLength = 15;
                this.columnUSER_STATE.AllowDBNull = false;
                this.columnUSER_CREATEBY.AllowDBNull = false;
                this.columnUSER_CREATEBY.MaxLength = 50;
                this.columnUSER_UPDATEDBY.MaxLength = 50;
                this.columnUSER_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow NewTBL_USERRow() {
                return ((TBL_USERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_USERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_USERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_USERRowChanged != null)) {
                    this.TBL_USERRowChanged(this, new TBL_USERRowChangeEvent(((TBL_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_USERRowChanging != null)) {
                    this.TBL_USERRowChanging(this, new TBL_USERRowChangeEvent(((TBL_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_USERRowDeleted != null)) {
                    this.TBL_USERRowDeleted(this, new TBL_USERRowChangeEvent(((TBL_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_USERRowDeleting != null)) {
                    this.TBL_USERRowDeleting(this, new TBL_USERRowChangeEvent(((TBL_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBL_USERRow(TBL_USERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_USERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_AREADataTable : global::System.Data.TypedTableBase<SP_CRUD_AREARow> {
            
            private global::System.Data.DataColumn columnID_AREA;
            
            private global::System.Data.DataColumn columnNAME_DPT;
            
            private global::System.Data.DataColumn columnAREA_NAME;
            
            private global::System.Data.DataColumn columnAREA_STATE;
            
            private global::System.Data.DataColumn columnAREA_CREATEBY;
            
            private global::System.Data.DataColumn columnAREA_UPDATEDBY;
            
            private global::System.Data.DataColumn columnAREA_CREATEDATE;
            
            private global::System.Data.DataColumn columnAREA_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_AREADataTable() {
                this.TableName = "SP_CRUD_AREA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_AREADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_AREADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_AREAColumn {
                get {
                    return this.columnID_AREA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_DPTColumn {
                get {
                    return this.columnNAME_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_NAMEColumn {
                get {
                    return this.columnAREA_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_STATEColumn {
                get {
                    return this.columnAREA_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_CREATEBYColumn {
                get {
                    return this.columnAREA_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_UPDATEDBYColumn {
                get {
                    return this.columnAREA_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_CREATEDATEColumn {
                get {
                    return this.columnAREA_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_UPDATEDATEColumn {
                get {
                    return this.columnAREA_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_AREARow this[int index] {
                get {
                    return ((SP_CRUD_AREARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_AREARowChangeEventHandler SP_CRUD_AREARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_AREARowChangeEventHandler SP_CRUD_AREARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_AREARowChangeEventHandler SP_CRUD_AREARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_AREARowChangeEventHandler SP_CRUD_AREARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_AREARow(SP_CRUD_AREARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_AREARow AddSP_CRUD_AREARow(string NAME_DPT, string AREA_NAME, bool AREA_STATE, string AREA_CREATEBY, string AREA_UPDATEDBY, System.DateTime AREA_CREATEDATE, System.DateTime AREA_UPDATEDATE) {
                SP_CRUD_AREARow rowSP_CRUD_AREARow = ((SP_CRUD_AREARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME_DPT,
                        AREA_NAME,
                        AREA_STATE,
                        AREA_CREATEBY,
                        AREA_UPDATEDBY,
                        AREA_CREATEDATE,
                        AREA_UPDATEDATE};
                rowSP_CRUD_AREARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_AREARow);
                return rowSP_CRUD_AREARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_AREARow FindByID_AREA(int ID_AREA) {
                return ((SP_CRUD_AREARow)(this.Rows.Find(new object[] {
                            ID_AREA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_AREADataTable cln = ((SP_CRUD_AREADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_AREADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_AREA = base.Columns["ID_AREA"];
                this.columnNAME_DPT = base.Columns["NAME_DPT"];
                this.columnAREA_NAME = base.Columns["AREA_NAME"];
                this.columnAREA_STATE = base.Columns["AREA_STATE"];
                this.columnAREA_CREATEBY = base.Columns["AREA_CREATEBY"];
                this.columnAREA_UPDATEDBY = base.Columns["AREA_UPDATEDBY"];
                this.columnAREA_CREATEDATE = base.Columns["AREA_CREATEDATE"];
                this.columnAREA_UPDATEDATE = base.Columns["AREA_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_AREA = new global::System.Data.DataColumn("ID_AREA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_AREA);
                this.columnNAME_DPT = new global::System.Data.DataColumn("NAME_DPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_DPT);
                this.columnAREA_NAME = new global::System.Data.DataColumn("AREA_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_NAME);
                this.columnAREA_STATE = new global::System.Data.DataColumn("AREA_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_STATE);
                this.columnAREA_CREATEBY = new global::System.Data.DataColumn("AREA_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_CREATEBY);
                this.columnAREA_UPDATEDBY = new global::System.Data.DataColumn("AREA_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_UPDATEDBY);
                this.columnAREA_CREATEDATE = new global::System.Data.DataColumn("AREA_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_CREATEDATE);
                this.columnAREA_UPDATEDATE = new global::System.Data.DataColumn("AREA_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_AREA}, true));
                this.columnID_AREA.AutoIncrement = true;
                this.columnID_AREA.AllowDBNull = false;
                this.columnID_AREA.ReadOnly = true;
                this.columnID_AREA.Unique = true;
                this.columnNAME_DPT.AllowDBNull = false;
                this.columnNAME_DPT.MaxLength = 75;
                this.columnAREA_NAME.AllowDBNull = false;
                this.columnAREA_NAME.MaxLength = 25;
                this.columnAREA_STATE.AllowDBNull = false;
                this.columnAREA_CREATEBY.AllowDBNull = false;
                this.columnAREA_CREATEBY.MaxLength = 50;
                this.columnAREA_UPDATEDBY.AllowDBNull = false;
                this.columnAREA_UPDATEDBY.MaxLength = 50;
                this.columnAREA_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_AREARow NewSP_CRUD_AREARow() {
                return ((SP_CRUD_AREARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_AREARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_AREARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_AREARowChanged != null)) {
                    this.SP_CRUD_AREARowChanged(this, new SP_CRUD_AREARowChangeEvent(((SP_CRUD_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_AREARowChanging != null)) {
                    this.SP_CRUD_AREARowChanging(this, new SP_CRUD_AREARowChangeEvent(((SP_CRUD_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_AREARowDeleted != null)) {
                    this.SP_CRUD_AREARowDeleted(this, new SP_CRUD_AREARowChangeEvent(((SP_CRUD_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_AREARowDeleting != null)) {
                    this.SP_CRUD_AREARowDeleting(this, new SP_CRUD_AREARowChangeEvent(((SP_CRUD_AREARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_AREARow(SP_CRUD_AREARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_AREADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_CUSTOMERDataTable : global::System.Data.TypedTableBase<SP_CRUD_CUSTOMERRow> {
            
            private global::System.Data.DataColumn columnID_CUSTOMER;
            
            private global::System.Data.DataColumn columnCUSTOMER_NAME;
            
            private global::System.Data.DataColumn columnCUSTOMER_STATE;
            
            private global::System.Data.DataColumn columnCUSTOMER_CREATEBY;
            
            private global::System.Data.DataColumn columnCUSTOMER_UPDATEDBY;
            
            private global::System.Data.DataColumn columnCUSTOMER_CREATEDATE;
            
            private global::System.Data.DataColumn columnCUSTOMER_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CUSTOMERDataTable() {
                this.TableName = "SP_CRUD_CUSTOMER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_CUSTOMERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_CUSTOMERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_CUSTOMERColumn {
                get {
                    return this.columnID_CUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_NAMEColumn {
                get {
                    return this.columnCUSTOMER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_STATEColumn {
                get {
                    return this.columnCUSTOMER_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_CREATEBYColumn {
                get {
                    return this.columnCUSTOMER_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_UPDATEDBYColumn {
                get {
                    return this.columnCUSTOMER_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_CREATEDATEColumn {
                get {
                    return this.columnCUSTOMER_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_UPDATEDATEColumn {
                get {
                    return this.columnCUSTOMER_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CUSTOMERRow this[int index] {
                get {
                    return ((SP_CRUD_CUSTOMERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_CUSTOMERRowChangeEventHandler SP_CRUD_CUSTOMERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_CUSTOMERRowChangeEventHandler SP_CRUD_CUSTOMERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_CUSTOMERRowChangeEventHandler SP_CRUD_CUSTOMERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_CUSTOMERRowChangeEventHandler SP_CRUD_CUSTOMERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_CUSTOMERRow(SP_CRUD_CUSTOMERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CUSTOMERRow AddSP_CRUD_CUSTOMERRow(string ID_CUSTOMER, string CUSTOMER_NAME, bool CUSTOMER_STATE, string CUSTOMER_CREATEBY, string CUSTOMER_UPDATEDBY, System.DateTime CUSTOMER_CREATEDATE, System.DateTime CUSTOMER_UPDATEDATE) {
                SP_CRUD_CUSTOMERRow rowSP_CRUD_CUSTOMERRow = ((SP_CRUD_CUSTOMERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_CUSTOMER,
                        CUSTOMER_NAME,
                        CUSTOMER_STATE,
                        CUSTOMER_CREATEBY,
                        CUSTOMER_UPDATEDBY,
                        CUSTOMER_CREATEDATE,
                        CUSTOMER_UPDATEDATE};
                rowSP_CRUD_CUSTOMERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_CUSTOMERRow);
                return rowSP_CRUD_CUSTOMERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CUSTOMERRow FindByID_CUSTOMER(string ID_CUSTOMER) {
                return ((SP_CRUD_CUSTOMERRow)(this.Rows.Find(new object[] {
                            ID_CUSTOMER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_CUSTOMERDataTable cln = ((SP_CRUD_CUSTOMERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_CUSTOMERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_CUSTOMER = base.Columns["ID_CUSTOMER"];
                this.columnCUSTOMER_NAME = base.Columns["CUSTOMER_NAME"];
                this.columnCUSTOMER_STATE = base.Columns["CUSTOMER_STATE"];
                this.columnCUSTOMER_CREATEBY = base.Columns["CUSTOMER_CREATEBY"];
                this.columnCUSTOMER_UPDATEDBY = base.Columns["CUSTOMER_UPDATEDBY"];
                this.columnCUSTOMER_CREATEDATE = base.Columns["CUSTOMER_CREATEDATE"];
                this.columnCUSTOMER_UPDATEDATE = base.Columns["CUSTOMER_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_CUSTOMER = new global::System.Data.DataColumn("ID_CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CUSTOMER);
                this.columnCUSTOMER_NAME = new global::System.Data.DataColumn("CUSTOMER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_NAME);
                this.columnCUSTOMER_STATE = new global::System.Data.DataColumn("CUSTOMER_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_STATE);
                this.columnCUSTOMER_CREATEBY = new global::System.Data.DataColumn("CUSTOMER_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_CREATEBY);
                this.columnCUSTOMER_UPDATEDBY = new global::System.Data.DataColumn("CUSTOMER_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_UPDATEDBY);
                this.columnCUSTOMER_CREATEDATE = new global::System.Data.DataColumn("CUSTOMER_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_CREATEDATE);
                this.columnCUSTOMER_UPDATEDATE = new global::System.Data.DataColumn("CUSTOMER_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_CUSTOMER}, true));
                this.columnID_CUSTOMER.AllowDBNull = false;
                this.columnID_CUSTOMER.Unique = true;
                this.columnID_CUSTOMER.MaxLength = 50;
                this.columnCUSTOMER_NAME.AllowDBNull = false;
                this.columnCUSTOMER_NAME.MaxLength = 25;
                this.columnCUSTOMER_STATE.AllowDBNull = false;
                this.columnCUSTOMER_CREATEBY.AllowDBNull = false;
                this.columnCUSTOMER_CREATEBY.MaxLength = 50;
                this.columnCUSTOMER_UPDATEDBY.AllowDBNull = false;
                this.columnCUSTOMER_UPDATEDBY.MaxLength = 50;
                this.columnCUSTOMER_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CUSTOMERRow NewSP_CRUD_CUSTOMERRow() {
                return ((SP_CRUD_CUSTOMERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_CUSTOMERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_CUSTOMERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_CUSTOMERRowChanged != null)) {
                    this.SP_CRUD_CUSTOMERRowChanged(this, new SP_CRUD_CUSTOMERRowChangeEvent(((SP_CRUD_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_CUSTOMERRowChanging != null)) {
                    this.SP_CRUD_CUSTOMERRowChanging(this, new SP_CRUD_CUSTOMERRowChangeEvent(((SP_CRUD_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_CUSTOMERRowDeleted != null)) {
                    this.SP_CRUD_CUSTOMERRowDeleted(this, new SP_CRUD_CUSTOMERRowChangeEvent(((SP_CRUD_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_CUSTOMERRowDeleting != null)) {
                    this.SP_CRUD_CUSTOMERRowDeleting(this, new SP_CRUD_CUSTOMERRowChangeEvent(((SP_CRUD_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_CUSTOMERRow(SP_CRUD_CUSTOMERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_CUSTOMERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_CXCDataTable : global::System.Data.TypedTableBase<SP_CRUD_CXCRow> {
            
            private global::System.Data.DataColumn columnID_CXC;
            
            private global::System.Data.DataColumn columnUSER_NAME;
            
            private global::System.Data.DataColumn columnDATE_CXC;
            
            private global::System.Data.DataColumn columnQUANTITY_RETREAT;
            
            private global::System.Data.DataColumn columnQUANTITY_RETURN;
            
            private global::System.Data.DataColumn columnTOTAL_CXC;
            
            private global::System.Data.DataColumn columnBALANCE_CXC;
            
            private global::System.Data.DataColumn columnCXC_STATE;
            
            private global::System.Data.DataColumn columnCXC_CREATEBY;
            
            private global::System.Data.DataColumn columnCXC_UPDATEDBY;
            
            private global::System.Data.DataColumn columnCXC_CREATEDATE;
            
            private global::System.Data.DataColumn columnCXC_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CXCDataTable() {
                this.TableName = "SP_CRUD_CXC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_CXCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_CXCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_CXCColumn {
                get {
                    return this.columnID_CXC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_NAMEColumn {
                get {
                    return this.columnUSER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATE_CXCColumn {
                get {
                    return this.columnDATE_CXC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QUANTITY_RETREATColumn {
                get {
                    return this.columnQUANTITY_RETREAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QUANTITY_RETURNColumn {
                get {
                    return this.columnQUANTITY_RETURN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_CXCColumn {
                get {
                    return this.columnTOTAL_CXC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BALANCE_CXCColumn {
                get {
                    return this.columnBALANCE_CXC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CXC_STATEColumn {
                get {
                    return this.columnCXC_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CXC_CREATEBYColumn {
                get {
                    return this.columnCXC_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CXC_UPDATEDBYColumn {
                get {
                    return this.columnCXC_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CXC_CREATEDATEColumn {
                get {
                    return this.columnCXC_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CXC_UPDATEDATEColumn {
                get {
                    return this.columnCXC_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CXCRow this[int index] {
                get {
                    return ((SP_CRUD_CXCRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_CXCRowChangeEventHandler SP_CRUD_CXCRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_CXCRowChangeEventHandler SP_CRUD_CXCRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_CXCRowChangeEventHandler SP_CRUD_CXCRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_CXCRowChangeEventHandler SP_CRUD_CXCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_CXCRow(SP_CRUD_CXCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CXCRow AddSP_CRUD_CXCRow(string USER_NAME, System.DateTime DATE_CXC, int QUANTITY_RETREAT, int QUANTITY_RETURN, decimal TOTAL_CXC, int BALANCE_CXC, bool CXC_STATE, string CXC_CREATEBY, string CXC_UPDATEDBY, System.DateTime CXC_CREATEDATE, System.DateTime CXC_UPDATEDATE) {
                SP_CRUD_CXCRow rowSP_CRUD_CXCRow = ((SP_CRUD_CXCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        USER_NAME,
                        DATE_CXC,
                        QUANTITY_RETREAT,
                        QUANTITY_RETURN,
                        TOTAL_CXC,
                        BALANCE_CXC,
                        CXC_STATE,
                        CXC_CREATEBY,
                        CXC_UPDATEDBY,
                        CXC_CREATEDATE,
                        CXC_UPDATEDATE};
                rowSP_CRUD_CXCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_CXCRow);
                return rowSP_CRUD_CXCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CXCRow FindByID_CXC(int ID_CXC) {
                return ((SP_CRUD_CXCRow)(this.Rows.Find(new object[] {
                            ID_CXC})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_CXCDataTable cln = ((SP_CRUD_CXCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_CXCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_CXC = base.Columns["ID_CXC"];
                this.columnUSER_NAME = base.Columns["USER_NAME"];
                this.columnDATE_CXC = base.Columns["DATE_CXC"];
                this.columnQUANTITY_RETREAT = base.Columns["QUANTITY_RETREAT"];
                this.columnQUANTITY_RETURN = base.Columns["QUANTITY_RETURN"];
                this.columnTOTAL_CXC = base.Columns["TOTAL_CXC"];
                this.columnBALANCE_CXC = base.Columns["BALANCE_CXC"];
                this.columnCXC_STATE = base.Columns["CXC_STATE"];
                this.columnCXC_CREATEBY = base.Columns["CXC_CREATEBY"];
                this.columnCXC_UPDATEDBY = base.Columns["CXC_UPDATEDBY"];
                this.columnCXC_CREATEDATE = base.Columns["CXC_CREATEDATE"];
                this.columnCXC_UPDATEDATE = base.Columns["CXC_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_CXC = new global::System.Data.DataColumn("ID_CXC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_CXC);
                this.columnUSER_NAME = new global::System.Data.DataColumn("USER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NAME);
                this.columnDATE_CXC = new global::System.Data.DataColumn("DATE_CXC", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_CXC);
                this.columnQUANTITY_RETREAT = new global::System.Data.DataColumn("QUANTITY_RETREAT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY_RETREAT);
                this.columnQUANTITY_RETURN = new global::System.Data.DataColumn("QUANTITY_RETURN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY_RETURN);
                this.columnTOTAL_CXC = new global::System.Data.DataColumn("TOTAL_CXC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_CXC);
                this.columnBALANCE_CXC = new global::System.Data.DataColumn("BALANCE_CXC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBALANCE_CXC);
                this.columnCXC_STATE = new global::System.Data.DataColumn("CXC_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXC_STATE);
                this.columnCXC_CREATEBY = new global::System.Data.DataColumn("CXC_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXC_CREATEBY);
                this.columnCXC_UPDATEDBY = new global::System.Data.DataColumn("CXC_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXC_UPDATEDBY);
                this.columnCXC_CREATEDATE = new global::System.Data.DataColumn("CXC_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXC_CREATEDATE);
                this.columnCXC_UPDATEDATE = new global::System.Data.DataColumn("CXC_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCXC_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_CXC}, true));
                this.columnID_CXC.AutoIncrement = true;
                this.columnID_CXC.AllowDBNull = false;
                this.columnID_CXC.ReadOnly = true;
                this.columnID_CXC.Unique = true;
                this.columnUSER_NAME.AllowDBNull = false;
                this.columnUSER_NAME.MaxLength = 150;
                this.columnDATE_CXC.AllowDBNull = false;
                this.columnTOTAL_CXC.AllowDBNull = false;
                this.columnBALANCE_CXC.AllowDBNull = false;
                this.columnCXC_STATE.AllowDBNull = false;
                this.columnCXC_CREATEBY.AllowDBNull = false;
                this.columnCXC_CREATEBY.MaxLength = 50;
                this.columnCXC_UPDATEDBY.AllowDBNull = false;
                this.columnCXC_UPDATEDBY.MaxLength = 50;
                this.columnCXC_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CXCRow NewSP_CRUD_CXCRow() {
                return ((SP_CRUD_CXCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_CXCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_CXCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_CXCRowChanged != null)) {
                    this.SP_CRUD_CXCRowChanged(this, new SP_CRUD_CXCRowChangeEvent(((SP_CRUD_CXCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_CXCRowChanging != null)) {
                    this.SP_CRUD_CXCRowChanging(this, new SP_CRUD_CXCRowChangeEvent(((SP_CRUD_CXCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_CXCRowDeleted != null)) {
                    this.SP_CRUD_CXCRowDeleted(this, new SP_CRUD_CXCRowChangeEvent(((SP_CRUD_CXCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_CXCRowDeleting != null)) {
                    this.SP_CRUD_CXCRowDeleting(this, new SP_CRUD_CXCRowChangeEvent(((SP_CRUD_CXCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_CXCRow(SP_CRUD_CXCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_CXCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_DPTDataTable : global::System.Data.TypedTableBase<SP_CRUD_DPTRow> {
            
            private global::System.Data.DataColumn columnID_DPT;
            
            private global::System.Data.DataColumn columnNAME_DPT;
            
            private global::System.Data.DataColumn columnSTATE_DPT;
            
            private global::System.Data.DataColumn columnCREATEBY_DPT;
            
            private global::System.Data.DataColumn columnUPDATEBY_DPT;
            
            private global::System.Data.DataColumn columnCREATEDATE_DPT;
            
            private global::System.Data.DataColumn columnUPDATEDATE_DPT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_DPTDataTable() {
                this.TableName = "SP_CRUD_DPT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_DPTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_DPTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_DPTColumn {
                get {
                    return this.columnID_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_DPTColumn {
                get {
                    return this.columnNAME_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STATE_DPTColumn {
                get {
                    return this.columnSTATE_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CREATEBY_DPTColumn {
                get {
                    return this.columnCREATEBY_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UPDATEBY_DPTColumn {
                get {
                    return this.columnUPDATEBY_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CREATEDATE_DPTColumn {
                get {
                    return this.columnCREATEDATE_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UPDATEDATE_DPTColumn {
                get {
                    return this.columnUPDATEDATE_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_DPTRow this[int index] {
                get {
                    return ((SP_CRUD_DPTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_DPTRowChangeEventHandler SP_CRUD_DPTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_DPTRowChangeEventHandler SP_CRUD_DPTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_DPTRowChangeEventHandler SP_CRUD_DPTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_DPTRowChangeEventHandler SP_CRUD_DPTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_DPTRow(SP_CRUD_DPTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_DPTRow AddSP_CRUD_DPTRow(string NAME_DPT, bool STATE_DPT, string CREATEBY_DPT, string UPDATEBY_DPT, System.DateTime CREATEDATE_DPT, System.DateTime UPDATEDATE_DPT) {
                SP_CRUD_DPTRow rowSP_CRUD_DPTRow = ((SP_CRUD_DPTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME_DPT,
                        STATE_DPT,
                        CREATEBY_DPT,
                        UPDATEBY_DPT,
                        CREATEDATE_DPT,
                        UPDATEDATE_DPT};
                rowSP_CRUD_DPTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_DPTRow);
                return rowSP_CRUD_DPTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_DPTRow FindByID_DPT(int ID_DPT) {
                return ((SP_CRUD_DPTRow)(this.Rows.Find(new object[] {
                            ID_DPT})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_DPTDataTable cln = ((SP_CRUD_DPTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_DPTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_DPT = base.Columns["ID_DPT"];
                this.columnNAME_DPT = base.Columns["NAME_DPT"];
                this.columnSTATE_DPT = base.Columns["STATE_DPT"];
                this.columnCREATEBY_DPT = base.Columns["CREATEBY_DPT"];
                this.columnUPDATEBY_DPT = base.Columns["UPDATEBY_DPT"];
                this.columnCREATEDATE_DPT = base.Columns["CREATEDATE_DPT"];
                this.columnUPDATEDATE_DPT = base.Columns["UPDATEDATE_DPT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_DPT = new global::System.Data.DataColumn("ID_DPT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_DPT);
                this.columnNAME_DPT = new global::System.Data.DataColumn("NAME_DPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_DPT);
                this.columnSTATE_DPT = new global::System.Data.DataColumn("STATE_DPT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE_DPT);
                this.columnCREATEBY_DPT = new global::System.Data.DataColumn("CREATEBY_DPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEBY_DPT);
                this.columnUPDATEBY_DPT = new global::System.Data.DataColumn("UPDATEBY_DPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEBY_DPT);
                this.columnCREATEDATE_DPT = new global::System.Data.DataColumn("CREATEDATE_DPT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEDATE_DPT);
                this.columnUPDATEDATE_DPT = new global::System.Data.DataColumn("UPDATEDATE_DPT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEDATE_DPT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_DPT}, true));
                this.columnID_DPT.AutoIncrement = true;
                this.columnID_DPT.AllowDBNull = false;
                this.columnID_DPT.ReadOnly = true;
                this.columnID_DPT.Unique = true;
                this.columnNAME_DPT.AllowDBNull = false;
                this.columnNAME_DPT.MaxLength = 75;
                this.columnSTATE_DPT.AllowDBNull = false;
                this.columnCREATEBY_DPT.AllowDBNull = false;
                this.columnCREATEBY_DPT.MaxLength = 50;
                this.columnUPDATEBY_DPT.AllowDBNull = false;
                this.columnUPDATEBY_DPT.MaxLength = 50;
                this.columnCREATEDATE_DPT.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_DPTRow NewSP_CRUD_DPTRow() {
                return ((SP_CRUD_DPTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_DPTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_DPTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_DPTRowChanged != null)) {
                    this.SP_CRUD_DPTRowChanged(this, new SP_CRUD_DPTRowChangeEvent(((SP_CRUD_DPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_DPTRowChanging != null)) {
                    this.SP_CRUD_DPTRowChanging(this, new SP_CRUD_DPTRowChangeEvent(((SP_CRUD_DPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_DPTRowDeleted != null)) {
                    this.SP_CRUD_DPTRowDeleted(this, new SP_CRUD_DPTRowChangeEvent(((SP_CRUD_DPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_DPTRowDeleting != null)) {
                    this.SP_CRUD_DPTRowDeleting(this, new SP_CRUD_DPTRowChangeEvent(((SP_CRUD_DPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_DPTRow(SP_CRUD_DPTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_DPTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_ORDERDataTable : global::System.Data.TypedTableBase<SP_CRUD_ORDERRow> {
            
            private global::System.Data.DataColumn columnID_ORDER;
            
            private global::System.Data.DataColumn columnID_PREPAID;
            
            private global::System.Data.DataColumn columnORDER_QUANTITY;
            
            private global::System.Data.DataColumn columnORDER_DATE;
            
            private global::System.Data.DataColumn columnORDER_DELIVERY;
            
            private global::System.Data.DataColumn columnORDER_STATE;
            
            private global::System.Data.DataColumn columnORDER_CREATEBY;
            
            private global::System.Data.DataColumn columnORDER_UPDATEDBY;
            
            private global::System.Data.DataColumn columnORDER_CREATEDATE;
            
            private global::System.Data.DataColumn columnORDER_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ORDERDataTable() {
                this.TableName = "SP_CRUD_ORDER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_ORDERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_ORDERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ORDERColumn {
                get {
                    return this.columnID_ORDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PREPAIDColumn {
                get {
                    return this.columnID_PREPAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_QUANTITYColumn {
                get {
                    return this.columnORDER_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_DATEColumn {
                get {
                    return this.columnORDER_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_DELIVERYColumn {
                get {
                    return this.columnORDER_DELIVERY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_STATEColumn {
                get {
                    return this.columnORDER_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_CREATEBYColumn {
                get {
                    return this.columnORDER_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_UPDATEDBYColumn {
                get {
                    return this.columnORDER_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_CREATEDATEColumn {
                get {
                    return this.columnORDER_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_UPDATEDATEColumn {
                get {
                    return this.columnORDER_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ORDERRow this[int index] {
                get {
                    return ((SP_CRUD_ORDERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ORDERRowChangeEventHandler SP_CRUD_ORDERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ORDERRowChangeEventHandler SP_CRUD_ORDERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ORDERRowChangeEventHandler SP_CRUD_ORDERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ORDERRowChangeEventHandler SP_CRUD_ORDERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_ORDERRow(SP_CRUD_ORDERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ORDERRow AddSP_CRUD_ORDERRow(int ID_PREPAID, int ORDER_QUANTITY, System.DateTime ORDER_DATE, bool ORDER_DELIVERY, bool ORDER_STATE, string ORDER_CREATEBY, string ORDER_UPDATEDBY, System.DateTime ORDER_CREATEDATE, System.DateTime ORDER_UPDATEDATE) {
                SP_CRUD_ORDERRow rowSP_CRUD_ORDERRow = ((SP_CRUD_ORDERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ID_PREPAID,
                        ORDER_QUANTITY,
                        ORDER_DATE,
                        ORDER_DELIVERY,
                        ORDER_STATE,
                        ORDER_CREATEBY,
                        ORDER_UPDATEDBY,
                        ORDER_CREATEDATE,
                        ORDER_UPDATEDATE};
                rowSP_CRUD_ORDERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_ORDERRow);
                return rowSP_CRUD_ORDERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ORDERRow FindByID_ORDER(int ID_ORDER) {
                return ((SP_CRUD_ORDERRow)(this.Rows.Find(new object[] {
                            ID_ORDER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_ORDERDataTable cln = ((SP_CRUD_ORDERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_ORDERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_ORDER = base.Columns["ID_ORDER"];
                this.columnID_PREPAID = base.Columns["ID_PREPAID"];
                this.columnORDER_QUANTITY = base.Columns["ORDER_QUANTITY"];
                this.columnORDER_DATE = base.Columns["ORDER_DATE"];
                this.columnORDER_DELIVERY = base.Columns["ORDER_DELIVERY"];
                this.columnORDER_STATE = base.Columns["ORDER_STATE"];
                this.columnORDER_CREATEBY = base.Columns["ORDER_CREATEBY"];
                this.columnORDER_UPDATEDBY = base.Columns["ORDER_UPDATEDBY"];
                this.columnORDER_CREATEDATE = base.Columns["ORDER_CREATEDATE"];
                this.columnORDER_UPDATEDATE = base.Columns["ORDER_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_ORDER = new global::System.Data.DataColumn("ID_ORDER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ORDER);
                this.columnID_PREPAID = new global::System.Data.DataColumn("ID_PREPAID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PREPAID);
                this.columnORDER_QUANTITY = new global::System.Data.DataColumn("ORDER_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_QUANTITY);
                this.columnORDER_DATE = new global::System.Data.DataColumn("ORDER_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_DATE);
                this.columnORDER_DELIVERY = new global::System.Data.DataColumn("ORDER_DELIVERY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_DELIVERY);
                this.columnORDER_STATE = new global::System.Data.DataColumn("ORDER_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_STATE);
                this.columnORDER_CREATEBY = new global::System.Data.DataColumn("ORDER_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_CREATEBY);
                this.columnORDER_UPDATEDBY = new global::System.Data.DataColumn("ORDER_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_UPDATEDBY);
                this.columnORDER_CREATEDATE = new global::System.Data.DataColumn("ORDER_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_CREATEDATE);
                this.columnORDER_UPDATEDATE = new global::System.Data.DataColumn("ORDER_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ORDER}, true));
                this.columnID_ORDER.AutoIncrement = true;
                this.columnID_ORDER.AllowDBNull = false;
                this.columnID_ORDER.ReadOnly = true;
                this.columnID_ORDER.Unique = true;
                this.columnID_PREPAID.AllowDBNull = false;
                this.columnORDER_QUANTITY.AllowDBNull = false;
                this.columnORDER_DATE.AllowDBNull = false;
                this.columnORDER_DELIVERY.AllowDBNull = false;
                this.columnORDER_STATE.AllowDBNull = false;
                this.columnORDER_CREATEBY.AllowDBNull = false;
                this.columnORDER_CREATEBY.MaxLength = 50;
                this.columnORDER_UPDATEDBY.AllowDBNull = false;
                this.columnORDER_UPDATEDBY.MaxLength = 50;
                this.columnORDER_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ORDERRow NewSP_CRUD_ORDERRow() {
                return ((SP_CRUD_ORDERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_ORDERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_ORDERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_ORDERRowChanged != null)) {
                    this.SP_CRUD_ORDERRowChanged(this, new SP_CRUD_ORDERRowChangeEvent(((SP_CRUD_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_ORDERRowChanging != null)) {
                    this.SP_CRUD_ORDERRowChanging(this, new SP_CRUD_ORDERRowChangeEvent(((SP_CRUD_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_ORDERRowDeleted != null)) {
                    this.SP_CRUD_ORDERRowDeleted(this, new SP_CRUD_ORDERRowChangeEvent(((SP_CRUD_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_ORDERRowDeleting != null)) {
                    this.SP_CRUD_ORDERRowDeleting(this, new SP_CRUD_ORDERRowChangeEvent(((SP_CRUD_ORDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_ORDERRow(SP_CRUD_ORDERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_ORDERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_PERDataTable : global::System.Data.TypedTableBase<SP_CRUD_PERRow> {
            
            private global::System.Data.DataColumn columnID_PER;
            
            private global::System.Data.DataColumn columnNAME_DPT;
            
            private global::System.Data.DataColumn columnNAME_PERMISSION;
            
            private global::System.Data.DataColumn columnDESCRIP_PERMISSION;
            
            private global::System.Data.DataColumn columnPER_STATE;
            
            private global::System.Data.DataColumn columnPER_CREATEBY;
            
            private global::System.Data.DataColumn columnPER_UPDATEDBY;
            
            private global::System.Data.DataColumn columnPER_CREATEDATE;
            
            private global::System.Data.DataColumn columnPER_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PERDataTable() {
                this.TableName = "SP_CRUD_PER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_PERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_PERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PERColumn {
                get {
                    return this.columnID_PER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_DPTColumn {
                get {
                    return this.columnNAME_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_PERMISSIONColumn {
                get {
                    return this.columnNAME_PERMISSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DESCRIP_PERMISSIONColumn {
                get {
                    return this.columnDESCRIP_PERMISSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER_STATEColumn {
                get {
                    return this.columnPER_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER_CREATEBYColumn {
                get {
                    return this.columnPER_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER_UPDATEDBYColumn {
                get {
                    return this.columnPER_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER_CREATEDATEColumn {
                get {
                    return this.columnPER_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER_UPDATEDATEColumn {
                get {
                    return this.columnPER_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PERRow this[int index] {
                get {
                    return ((SP_CRUD_PERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PERRowChangeEventHandler SP_CRUD_PERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PERRowChangeEventHandler SP_CRUD_PERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PERRowChangeEventHandler SP_CRUD_PERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PERRowChangeEventHandler SP_CRUD_PERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_PERRow(SP_CRUD_PERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PERRow AddSP_CRUD_PERRow(string NAME_DPT, string NAME_PERMISSION, string DESCRIP_PERMISSION, bool PER_STATE, string PER_CREATEBY, string PER_UPDATEDBY, System.DateTime PER_CREATEDATE, System.DateTime PER_UPDATEDATE) {
                SP_CRUD_PERRow rowSP_CRUD_PERRow = ((SP_CRUD_PERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME_DPT,
                        NAME_PERMISSION,
                        DESCRIP_PERMISSION,
                        PER_STATE,
                        PER_CREATEBY,
                        PER_UPDATEDBY,
                        PER_CREATEDATE,
                        PER_UPDATEDATE};
                rowSP_CRUD_PERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_PERRow);
                return rowSP_CRUD_PERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PERRow FindByID_PER(int ID_PER) {
                return ((SP_CRUD_PERRow)(this.Rows.Find(new object[] {
                            ID_PER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_PERDataTable cln = ((SP_CRUD_PERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_PERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_PER = base.Columns["ID_PER"];
                this.columnNAME_DPT = base.Columns["NAME_DPT"];
                this.columnNAME_PERMISSION = base.Columns["NAME_PERMISSION"];
                this.columnDESCRIP_PERMISSION = base.Columns["DESCRIP_PERMISSION"];
                this.columnPER_STATE = base.Columns["PER_STATE"];
                this.columnPER_CREATEBY = base.Columns["PER_CREATEBY"];
                this.columnPER_UPDATEDBY = base.Columns["PER_UPDATEDBY"];
                this.columnPER_CREATEDATE = base.Columns["PER_CREATEDATE"];
                this.columnPER_UPDATEDATE = base.Columns["PER_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_PER = new global::System.Data.DataColumn("ID_PER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PER);
                this.columnNAME_DPT = new global::System.Data.DataColumn("NAME_DPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_DPT);
                this.columnNAME_PERMISSION = new global::System.Data.DataColumn("NAME_PERMISSION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_PERMISSION);
                this.columnDESCRIP_PERMISSION = new global::System.Data.DataColumn("DESCRIP_PERMISSION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIP_PERMISSION);
                this.columnPER_STATE = new global::System.Data.DataColumn("PER_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER_STATE);
                this.columnPER_CREATEBY = new global::System.Data.DataColumn("PER_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER_CREATEBY);
                this.columnPER_UPDATEDBY = new global::System.Data.DataColumn("PER_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER_UPDATEDBY);
                this.columnPER_CREATEDATE = new global::System.Data.DataColumn("PER_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER_CREATEDATE);
                this.columnPER_UPDATEDATE = new global::System.Data.DataColumn("PER_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_PER}, true));
                this.columnID_PER.AutoIncrement = true;
                this.columnID_PER.AllowDBNull = false;
                this.columnID_PER.ReadOnly = true;
                this.columnID_PER.Unique = true;
                this.columnNAME_DPT.AllowDBNull = false;
                this.columnNAME_DPT.MaxLength = 75;
                this.columnNAME_PERMISSION.MaxLength = 15;
                this.columnDESCRIP_PERMISSION.MaxLength = 100;
                this.columnPER_CREATEBY.AllowDBNull = false;
                this.columnPER_CREATEBY.MaxLength = 50;
                this.columnPER_UPDATEDBY.AllowDBNull = false;
                this.columnPER_UPDATEDBY.MaxLength = 50;
                this.columnPER_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PERRow NewSP_CRUD_PERRow() {
                return ((SP_CRUD_PERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_PERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_PERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_PERRowChanged != null)) {
                    this.SP_CRUD_PERRowChanged(this, new SP_CRUD_PERRowChangeEvent(((SP_CRUD_PERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_PERRowChanging != null)) {
                    this.SP_CRUD_PERRowChanging(this, new SP_CRUD_PERRowChangeEvent(((SP_CRUD_PERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_PERRowDeleted != null)) {
                    this.SP_CRUD_PERRowDeleted(this, new SP_CRUD_PERRowChangeEvent(((SP_CRUD_PERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_PERRowDeleting != null)) {
                    this.SP_CRUD_PERRowDeleting(this, new SP_CRUD_PERRowChangeEvent(((SP_CRUD_PERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_PERRow(SP_CRUD_PERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_PERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_POSITIONDataTable : global::System.Data.TypedTableBase<SP_CRUD_POSITIONRow> {
            
            private global::System.Data.DataColumn columnID_POSITION;
            
            private global::System.Data.DataColumn columnAREA_NAME;
            
            private global::System.Data.DataColumn columnNAME_POSITION;
            
            private global::System.Data.DataColumn columnPOSITION_STATE;
            
            private global::System.Data.DataColumn columnCREATEBY_PST;
            
            private global::System.Data.DataColumn columnUPDATEBY_PST;
            
            private global::System.Data.DataColumn columnPOSITION_CREATEDATE;
            
            private global::System.Data.DataColumn columnPOSITION_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_POSITIONDataTable() {
                this.TableName = "SP_CRUD_POSITION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_POSITIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_POSITIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_POSITIONColumn {
                get {
                    return this.columnID_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_NAMEColumn {
                get {
                    return this.columnAREA_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_POSITIONColumn {
                get {
                    return this.columnNAME_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn POSITION_STATEColumn {
                get {
                    return this.columnPOSITION_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CREATEBY_PSTColumn {
                get {
                    return this.columnCREATEBY_PST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UPDATEBY_PSTColumn {
                get {
                    return this.columnUPDATEBY_PST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn POSITION_CREATEDATEColumn {
                get {
                    return this.columnPOSITION_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn POSITION_UPDATEDATEColumn {
                get {
                    return this.columnPOSITION_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_POSITIONRow this[int index] {
                get {
                    return ((SP_CRUD_POSITIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_POSITIONRowChangeEventHandler SP_CRUD_POSITIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_POSITIONRowChangeEventHandler SP_CRUD_POSITIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_POSITIONRowChangeEventHandler SP_CRUD_POSITIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_POSITIONRowChangeEventHandler SP_CRUD_POSITIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_POSITIONRow(SP_CRUD_POSITIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_POSITIONRow AddSP_CRUD_POSITIONRow(string AREA_NAME, string NAME_POSITION, bool POSITION_STATE, string CREATEBY_PST, string UPDATEBY_PST, System.DateTime POSITION_CREATEDATE, System.DateTime POSITION_UPDATEDATE) {
                SP_CRUD_POSITIONRow rowSP_CRUD_POSITIONRow = ((SP_CRUD_POSITIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        AREA_NAME,
                        NAME_POSITION,
                        POSITION_STATE,
                        CREATEBY_PST,
                        UPDATEBY_PST,
                        POSITION_CREATEDATE,
                        POSITION_UPDATEDATE};
                rowSP_CRUD_POSITIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_POSITIONRow);
                return rowSP_CRUD_POSITIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_POSITIONRow FindByID_POSITION(int ID_POSITION) {
                return ((SP_CRUD_POSITIONRow)(this.Rows.Find(new object[] {
                            ID_POSITION})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_POSITIONDataTable cln = ((SP_CRUD_POSITIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_POSITIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_POSITION = base.Columns["ID_POSITION"];
                this.columnAREA_NAME = base.Columns["AREA_NAME"];
                this.columnNAME_POSITION = base.Columns["NAME_POSITION"];
                this.columnPOSITION_STATE = base.Columns["POSITION_STATE"];
                this.columnCREATEBY_PST = base.Columns["CREATEBY_PST"];
                this.columnUPDATEBY_PST = base.Columns["UPDATEBY_PST"];
                this.columnPOSITION_CREATEDATE = base.Columns["POSITION_CREATEDATE"];
                this.columnPOSITION_UPDATEDATE = base.Columns["POSITION_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_POSITION = new global::System.Data.DataColumn("ID_POSITION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_POSITION);
                this.columnAREA_NAME = new global::System.Data.DataColumn("AREA_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_NAME);
                this.columnNAME_POSITION = new global::System.Data.DataColumn("NAME_POSITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_POSITION);
                this.columnPOSITION_STATE = new global::System.Data.DataColumn("POSITION_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION_STATE);
                this.columnCREATEBY_PST = new global::System.Data.DataColumn("CREATEBY_PST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEBY_PST);
                this.columnUPDATEBY_PST = new global::System.Data.DataColumn("UPDATEBY_PST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEBY_PST);
                this.columnPOSITION_CREATEDATE = new global::System.Data.DataColumn("POSITION_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION_CREATEDATE);
                this.columnPOSITION_UPDATEDATE = new global::System.Data.DataColumn("POSITION_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITION_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_POSITION}, true));
                this.columnID_POSITION.AutoIncrement = true;
                this.columnID_POSITION.AllowDBNull = false;
                this.columnID_POSITION.ReadOnly = true;
                this.columnID_POSITION.Unique = true;
                this.columnAREA_NAME.AllowDBNull = false;
                this.columnAREA_NAME.MaxLength = 25;
                this.columnNAME_POSITION.AllowDBNull = false;
                this.columnNAME_POSITION.MaxLength = 50;
                this.columnPOSITION_STATE.AllowDBNull = false;
                this.columnCREATEBY_PST.AllowDBNull = false;
                this.columnCREATEBY_PST.MaxLength = 50;
                this.columnUPDATEBY_PST.AllowDBNull = false;
                this.columnUPDATEBY_PST.MaxLength = 50;
                this.columnPOSITION_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_POSITIONRow NewSP_CRUD_POSITIONRow() {
                return ((SP_CRUD_POSITIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_POSITIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_POSITIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_POSITIONRowChanged != null)) {
                    this.SP_CRUD_POSITIONRowChanged(this, new SP_CRUD_POSITIONRowChangeEvent(((SP_CRUD_POSITIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_POSITIONRowChanging != null)) {
                    this.SP_CRUD_POSITIONRowChanging(this, new SP_CRUD_POSITIONRowChangeEvent(((SP_CRUD_POSITIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_POSITIONRowDeleted != null)) {
                    this.SP_CRUD_POSITIONRowDeleted(this, new SP_CRUD_POSITIONRowChangeEvent(((SP_CRUD_POSITIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_POSITIONRowDeleting != null)) {
                    this.SP_CRUD_POSITIONRowDeleting(this, new SP_CRUD_POSITIONRowChangeEvent(((SP_CRUD_POSITIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_POSITIONRow(SP_CRUD_POSITIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_POSITIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_PREPAIDDataTable : global::System.Data.TypedTableBase<SP_CRUD_PREPAIDRow> {
            
            private global::System.Data.DataColumn columnID_PREPAID;
            
            private global::System.Data.DataColumn columnCUSTOMER_NAME;
            
            private global::System.Data.DataColumn columnDESCRIP_PRICE;
            
            private global::System.Data.DataColumn columnPREPAID_QUANTITY;
            
            private global::System.Data.DataColumn columnPREPAID_TOTAL;
            
            private global::System.Data.DataColumn columnPREPAID_CASH;
            
            private global::System.Data.DataColumn columnPREPAID_CHANGE;
            
            private global::System.Data.DataColumn columnPREPAID_BALANCE;
            
            private global::System.Data.DataColumn columnPREPAID_STATE;
            
            private global::System.Data.DataColumn columnPREPAID_CREATEBY;
            
            private global::System.Data.DataColumn columnPREPAID_UPDATEDBY;
            
            private global::System.Data.DataColumn columnPREPAID_CREATEDATE;
            
            private global::System.Data.DataColumn columnPREPAID_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PREPAIDDataTable() {
                this.TableName = "SP_CRUD_PREPAID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_PREPAIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_PREPAIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PREPAIDColumn {
                get {
                    return this.columnID_PREPAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CUSTOMER_NAMEColumn {
                get {
                    return this.columnCUSTOMER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DESCRIP_PRICEColumn {
                get {
                    return this.columnDESCRIP_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_QUANTITYColumn {
                get {
                    return this.columnPREPAID_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_TOTALColumn {
                get {
                    return this.columnPREPAID_TOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_CASHColumn {
                get {
                    return this.columnPREPAID_CASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_CHANGEColumn {
                get {
                    return this.columnPREPAID_CHANGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_BALANCEColumn {
                get {
                    return this.columnPREPAID_BALANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_STATEColumn {
                get {
                    return this.columnPREPAID_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_CREATEBYColumn {
                get {
                    return this.columnPREPAID_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_UPDATEDBYColumn {
                get {
                    return this.columnPREPAID_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_CREATEDATEColumn {
                get {
                    return this.columnPREPAID_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PREPAID_UPDATEDATEColumn {
                get {
                    return this.columnPREPAID_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PREPAIDRow this[int index] {
                get {
                    return ((SP_CRUD_PREPAIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PREPAIDRowChangeEventHandler SP_CRUD_PREPAIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PREPAIDRowChangeEventHandler SP_CRUD_PREPAIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PREPAIDRowChangeEventHandler SP_CRUD_PREPAIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PREPAIDRowChangeEventHandler SP_CRUD_PREPAIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_PREPAIDRow(SP_CRUD_PREPAIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PREPAIDRow AddSP_CRUD_PREPAIDRow(string CUSTOMER_NAME, string DESCRIP_PRICE, int PREPAID_QUANTITY, decimal PREPAID_TOTAL, decimal PREPAID_CASH, decimal PREPAID_CHANGE, int PREPAID_BALANCE, bool PREPAID_STATE, string PREPAID_CREATEBY, string PREPAID_UPDATEDBY, System.DateTime PREPAID_CREATEDATE, System.DateTime PREPAID_UPDATEDATE) {
                SP_CRUD_PREPAIDRow rowSP_CRUD_PREPAIDRow = ((SP_CRUD_PREPAIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CUSTOMER_NAME,
                        DESCRIP_PRICE,
                        PREPAID_QUANTITY,
                        PREPAID_TOTAL,
                        PREPAID_CASH,
                        PREPAID_CHANGE,
                        PREPAID_BALANCE,
                        PREPAID_STATE,
                        PREPAID_CREATEBY,
                        PREPAID_UPDATEDBY,
                        PREPAID_CREATEDATE,
                        PREPAID_UPDATEDATE};
                rowSP_CRUD_PREPAIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_PREPAIDRow);
                return rowSP_CRUD_PREPAIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PREPAIDRow FindByID_PREPAID(int ID_PREPAID) {
                return ((SP_CRUD_PREPAIDRow)(this.Rows.Find(new object[] {
                            ID_PREPAID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_PREPAIDDataTable cln = ((SP_CRUD_PREPAIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_PREPAIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_PREPAID = base.Columns["ID_PREPAID"];
                this.columnCUSTOMER_NAME = base.Columns["CUSTOMER_NAME"];
                this.columnDESCRIP_PRICE = base.Columns["DESCRIP_PRICE"];
                this.columnPREPAID_QUANTITY = base.Columns["PREPAID_QUANTITY"];
                this.columnPREPAID_TOTAL = base.Columns["PREPAID_TOTAL"];
                this.columnPREPAID_CASH = base.Columns["PREPAID_CASH"];
                this.columnPREPAID_CHANGE = base.Columns["PREPAID_CHANGE"];
                this.columnPREPAID_BALANCE = base.Columns["PREPAID_BALANCE"];
                this.columnPREPAID_STATE = base.Columns["PREPAID_STATE"];
                this.columnPREPAID_CREATEBY = base.Columns["PREPAID_CREATEBY"];
                this.columnPREPAID_UPDATEDBY = base.Columns["PREPAID_UPDATEDBY"];
                this.columnPREPAID_CREATEDATE = base.Columns["PREPAID_CREATEDATE"];
                this.columnPREPAID_UPDATEDATE = base.Columns["PREPAID_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_PREPAID = new global::System.Data.DataColumn("ID_PREPAID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PREPAID);
                this.columnCUSTOMER_NAME = new global::System.Data.DataColumn("CUSTOMER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_NAME);
                this.columnDESCRIP_PRICE = new global::System.Data.DataColumn("DESCRIP_PRICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIP_PRICE);
                this.columnPREPAID_QUANTITY = new global::System.Data.DataColumn("PREPAID_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_QUANTITY);
                this.columnPREPAID_TOTAL = new global::System.Data.DataColumn("PREPAID_TOTAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_TOTAL);
                this.columnPREPAID_CASH = new global::System.Data.DataColumn("PREPAID_CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_CASH);
                this.columnPREPAID_CHANGE = new global::System.Data.DataColumn("PREPAID_CHANGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_CHANGE);
                this.columnPREPAID_BALANCE = new global::System.Data.DataColumn("PREPAID_BALANCE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_BALANCE);
                this.columnPREPAID_STATE = new global::System.Data.DataColumn("PREPAID_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_STATE);
                this.columnPREPAID_CREATEBY = new global::System.Data.DataColumn("PREPAID_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_CREATEBY);
                this.columnPREPAID_UPDATEDBY = new global::System.Data.DataColumn("PREPAID_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_UPDATEDBY);
                this.columnPREPAID_CREATEDATE = new global::System.Data.DataColumn("PREPAID_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_CREATEDATE);
                this.columnPREPAID_UPDATEDATE = new global::System.Data.DataColumn("PREPAID_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAID_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_PREPAID}, true));
                this.columnID_PREPAID.AutoIncrement = true;
                this.columnID_PREPAID.AllowDBNull = false;
                this.columnID_PREPAID.ReadOnly = true;
                this.columnID_PREPAID.Unique = true;
                this.columnCUSTOMER_NAME.AllowDBNull = false;
                this.columnCUSTOMER_NAME.MaxLength = 25;
                this.columnDESCRIP_PRICE.AllowDBNull = false;
                this.columnDESCRIP_PRICE.MaxLength = 50;
                this.columnPREPAID_QUANTITY.AllowDBNull = false;
                this.columnPREPAID_TOTAL.AllowDBNull = false;
                this.columnPREPAID_CASH.AllowDBNull = false;
                this.columnPREPAID_CHANGE.AllowDBNull = false;
                this.columnPREPAID_BALANCE.AllowDBNull = false;
                this.columnPREPAID_STATE.AllowDBNull = false;
                this.columnPREPAID_CREATEBY.AllowDBNull = false;
                this.columnPREPAID_CREATEBY.MaxLength = 50;
                this.columnPREPAID_UPDATEDBY.AllowDBNull = false;
                this.columnPREPAID_UPDATEDBY.MaxLength = 50;
                this.columnPREPAID_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PREPAIDRow NewSP_CRUD_PREPAIDRow() {
                return ((SP_CRUD_PREPAIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_PREPAIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_PREPAIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_PREPAIDRowChanged != null)) {
                    this.SP_CRUD_PREPAIDRowChanged(this, new SP_CRUD_PREPAIDRowChangeEvent(((SP_CRUD_PREPAIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_PREPAIDRowChanging != null)) {
                    this.SP_CRUD_PREPAIDRowChanging(this, new SP_CRUD_PREPAIDRowChangeEvent(((SP_CRUD_PREPAIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_PREPAIDRowDeleted != null)) {
                    this.SP_CRUD_PREPAIDRowDeleted(this, new SP_CRUD_PREPAIDRowChangeEvent(((SP_CRUD_PREPAIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_PREPAIDRowDeleting != null)) {
                    this.SP_CRUD_PREPAIDRowDeleting(this, new SP_CRUD_PREPAIDRowChangeEvent(((SP_CRUD_PREPAIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_PREPAIDRow(SP_CRUD_PREPAIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_PREPAIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_PRODUCTDataTable : global::System.Data.TypedTableBase<SP_CRUD_PRODUCTRow> {
            
            private global::System.Data.DataColumn columnID_PRODUCT;
            
            private global::System.Data.DataColumn columnTOTAL_PRODUCT;
            
            private global::System.Data.DataColumn columnDESCRIP_PRICE;
            
            private global::System.Data.DataColumn columnPRODUCT_STATE;
            
            private global::System.Data.DataColumn columnPRICE_TAG_CREATEBY;
            
            private global::System.Data.DataColumn columnPRICE_TAG_UPDATEDBY;
            
            private global::System.Data.DataColumn columnPRODUCT_CREATEDATE;
            
            private global::System.Data.DataColumn columnPRODUCT_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PRODUCTDataTable() {
                this.TableName = "SP_CRUD_PRODUCT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_PRODUCTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_PRODUCTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_PRODUCTColumn {
                get {
                    return this.columnID_PRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_PRODUCTColumn {
                get {
                    return this.columnTOTAL_PRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DESCRIP_PRICEColumn {
                get {
                    return this.columnDESCRIP_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCT_STATEColumn {
                get {
                    return this.columnPRODUCT_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRICE_TAG_CREATEBYColumn {
                get {
                    return this.columnPRICE_TAG_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRICE_TAG_UPDATEDBYColumn {
                get {
                    return this.columnPRICE_TAG_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCT_CREATEDATEColumn {
                get {
                    return this.columnPRODUCT_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PRODUCT_UPDATEDATEColumn {
                get {
                    return this.columnPRODUCT_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PRODUCTRow this[int index] {
                get {
                    return ((SP_CRUD_PRODUCTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PRODUCTRowChangeEventHandler SP_CRUD_PRODUCTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PRODUCTRowChangeEventHandler SP_CRUD_PRODUCTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PRODUCTRowChangeEventHandler SP_CRUD_PRODUCTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_PRODUCTRowChangeEventHandler SP_CRUD_PRODUCTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_PRODUCTRow(SP_CRUD_PRODUCTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PRODUCTRow AddSP_CRUD_PRODUCTRow(decimal TOTAL_PRODUCT, string DESCRIP_PRICE, bool PRODUCT_STATE, string PRICE_TAG_CREATEBY, string PRICE_TAG_UPDATEDBY, System.DateTime PRODUCT_CREATEDATE, System.DateTime PRODUCT_UPDATEDATE) {
                SP_CRUD_PRODUCTRow rowSP_CRUD_PRODUCTRow = ((SP_CRUD_PRODUCTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TOTAL_PRODUCT,
                        DESCRIP_PRICE,
                        PRODUCT_STATE,
                        PRICE_TAG_CREATEBY,
                        PRICE_TAG_UPDATEDBY,
                        PRODUCT_CREATEDATE,
                        PRODUCT_UPDATEDATE};
                rowSP_CRUD_PRODUCTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_PRODUCTRow);
                return rowSP_CRUD_PRODUCTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PRODUCTRow FindByID_PRODUCT(int ID_PRODUCT) {
                return ((SP_CRUD_PRODUCTRow)(this.Rows.Find(new object[] {
                            ID_PRODUCT})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_PRODUCTDataTable cln = ((SP_CRUD_PRODUCTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_PRODUCTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_PRODUCT = base.Columns["ID_PRODUCT"];
                this.columnTOTAL_PRODUCT = base.Columns["TOTAL_PRODUCT"];
                this.columnDESCRIP_PRICE = base.Columns["DESCRIP_PRICE"];
                this.columnPRODUCT_STATE = base.Columns["PRODUCT_STATE"];
                this.columnPRICE_TAG_CREATEBY = base.Columns["PRICE_TAG_CREATEBY"];
                this.columnPRICE_TAG_UPDATEDBY = base.Columns["PRICE_TAG_UPDATEDBY"];
                this.columnPRODUCT_CREATEDATE = base.Columns["PRODUCT_CREATEDATE"];
                this.columnPRODUCT_UPDATEDATE = base.Columns["PRODUCT_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_PRODUCT = new global::System.Data.DataColumn("ID_PRODUCT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_PRODUCT);
                this.columnTOTAL_PRODUCT = new global::System.Data.DataColumn("TOTAL_PRODUCT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_PRODUCT);
                this.columnDESCRIP_PRICE = new global::System.Data.DataColumn("DESCRIP_PRICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIP_PRICE);
                this.columnPRODUCT_STATE = new global::System.Data.DataColumn("PRODUCT_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_STATE);
                this.columnPRICE_TAG_CREATEBY = new global::System.Data.DataColumn("PRICE_TAG_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE_TAG_CREATEBY);
                this.columnPRICE_TAG_UPDATEDBY = new global::System.Data.DataColumn("PRICE_TAG_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE_TAG_UPDATEDBY);
                this.columnPRODUCT_CREATEDATE = new global::System.Data.DataColumn("PRODUCT_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_CREATEDATE);
                this.columnPRODUCT_UPDATEDATE = new global::System.Data.DataColumn("PRODUCT_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_PRODUCT}, true));
                this.columnID_PRODUCT.AutoIncrement = true;
                this.columnID_PRODUCT.AllowDBNull = false;
                this.columnID_PRODUCT.ReadOnly = true;
                this.columnID_PRODUCT.Unique = true;
                this.columnTOTAL_PRODUCT.AllowDBNull = false;
                this.columnDESCRIP_PRICE.AllowDBNull = false;
                this.columnDESCRIP_PRICE.MaxLength = 50;
                this.columnPRODUCT_STATE.AllowDBNull = false;
                this.columnPRICE_TAG_CREATEBY.AllowDBNull = false;
                this.columnPRICE_TAG_CREATEBY.MaxLength = 50;
                this.columnPRICE_TAG_UPDATEDBY.AllowDBNull = false;
                this.columnPRICE_TAG_UPDATEDBY.MaxLength = 50;
                this.columnPRODUCT_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PRODUCTRow NewSP_CRUD_PRODUCTRow() {
                return ((SP_CRUD_PRODUCTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_PRODUCTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_PRODUCTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_PRODUCTRowChanged != null)) {
                    this.SP_CRUD_PRODUCTRowChanged(this, new SP_CRUD_PRODUCTRowChangeEvent(((SP_CRUD_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_PRODUCTRowChanging != null)) {
                    this.SP_CRUD_PRODUCTRowChanging(this, new SP_CRUD_PRODUCTRowChangeEvent(((SP_CRUD_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_PRODUCTRowDeleted != null)) {
                    this.SP_CRUD_PRODUCTRowDeleted(this, new SP_CRUD_PRODUCTRowChangeEvent(((SP_CRUD_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_PRODUCTRowDeleting != null)) {
                    this.SP_CRUD_PRODUCTRowDeleting(this, new SP_CRUD_PRODUCTRowChangeEvent(((SP_CRUD_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_PRODUCTRow(SP_CRUD_PRODUCTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_PRODUCTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_RECEIPTDataTable : global::System.Data.TypedTableBase<SP_CRUD_RECEIPTRow> {
            
            private global::System.Data.DataColumn columnID_RECEIPT;
            
            private global::System.Data.DataColumn columnNAME_CUSTOMER;
            
            private global::System.Data.DataColumn columnDATE_RECEIPT;
            
            private global::System.Data.DataColumn columnQUANTITY;
            
            private global::System.Data.DataColumn columnTOTAL_RECEIPT;
            
            private global::System.Data.DataColumn columnDESCRIP_PRICE;
            
            private global::System.Data.DataColumn columnUNIT_PRICE;
            
            private global::System.Data.DataColumn columnCASH;
            
            private global::System.Data.DataColumn columnCHANGE;
            
            private global::System.Data.DataColumn columnRECEIPT_STATE;
            
            private global::System.Data.DataColumn columnRECEIPT_CREATEBY;
            
            private global::System.Data.DataColumn columnRECEIPT_UPDATEDBY;
            
            private global::System.Data.DataColumn columnRECEIPT_CREATEDATE;
            
            private global::System.Data.DataColumn columnRECEIPT_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_RECEIPTDataTable() {
                this.TableName = "SP_CRUD_RECEIPT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_RECEIPTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_RECEIPTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_RECEIPTColumn {
                get {
                    return this.columnID_RECEIPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CUSTOMERColumn {
                get {
                    return this.columnNAME_CUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATE_RECEIPTColumn {
                get {
                    return this.columnDATE_RECEIPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QUANTITYColumn {
                get {
                    return this.columnQUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_RECEIPTColumn {
                get {
                    return this.columnTOTAL_RECEIPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DESCRIP_PRICEColumn {
                get {
                    return this.columnDESCRIP_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UNIT_PRICEColumn {
                get {
                    return this.columnUNIT_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CASHColumn {
                get {
                    return this.columnCASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHANGEColumn {
                get {
                    return this.columnCHANGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECEIPT_STATEColumn {
                get {
                    return this.columnRECEIPT_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECEIPT_CREATEBYColumn {
                get {
                    return this.columnRECEIPT_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECEIPT_UPDATEDBYColumn {
                get {
                    return this.columnRECEIPT_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECEIPT_CREATEDATEColumn {
                get {
                    return this.columnRECEIPT_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECEIPT_UPDATEDATEColumn {
                get {
                    return this.columnRECEIPT_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_RECEIPTRow this[int index] {
                get {
                    return ((SP_CRUD_RECEIPTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_RECEIPTRowChangeEventHandler SP_CRUD_RECEIPTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_RECEIPTRowChangeEventHandler SP_CRUD_RECEIPTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_RECEIPTRowChangeEventHandler SP_CRUD_RECEIPTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_RECEIPTRowChangeEventHandler SP_CRUD_RECEIPTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_RECEIPTRow(SP_CRUD_RECEIPTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_RECEIPTRow AddSP_CRUD_RECEIPTRow(string NAME_CUSTOMER, System.DateTime DATE_RECEIPT, int QUANTITY, decimal TOTAL_RECEIPT, string DESCRIP_PRICE, decimal UNIT_PRICE, decimal CASH, decimal CHANGE, bool RECEIPT_STATE, string RECEIPT_CREATEBY, string RECEIPT_UPDATEDBY, System.DateTime RECEIPT_CREATEDATE, System.DateTime RECEIPT_UPDATEDATE) {
                SP_CRUD_RECEIPTRow rowSP_CRUD_RECEIPTRow = ((SP_CRUD_RECEIPTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME_CUSTOMER,
                        DATE_RECEIPT,
                        QUANTITY,
                        TOTAL_RECEIPT,
                        DESCRIP_PRICE,
                        UNIT_PRICE,
                        CASH,
                        CHANGE,
                        RECEIPT_STATE,
                        RECEIPT_CREATEBY,
                        RECEIPT_UPDATEDBY,
                        RECEIPT_CREATEDATE,
                        RECEIPT_UPDATEDATE};
                rowSP_CRUD_RECEIPTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_RECEIPTRow);
                return rowSP_CRUD_RECEIPTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_RECEIPTRow FindByID_RECEIPT(int ID_RECEIPT) {
                return ((SP_CRUD_RECEIPTRow)(this.Rows.Find(new object[] {
                            ID_RECEIPT})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_RECEIPTDataTable cln = ((SP_CRUD_RECEIPTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_RECEIPTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_RECEIPT = base.Columns["ID_RECEIPT"];
                this.columnNAME_CUSTOMER = base.Columns["NAME_CUSTOMER"];
                this.columnDATE_RECEIPT = base.Columns["DATE_RECEIPT"];
                this.columnQUANTITY = base.Columns["QUANTITY"];
                this.columnTOTAL_RECEIPT = base.Columns["TOTAL_RECEIPT"];
                this.columnDESCRIP_PRICE = base.Columns["DESCRIP_PRICE"];
                this.columnUNIT_PRICE = base.Columns["UNIT_PRICE"];
                this.columnCASH = base.Columns["CASH"];
                this.columnCHANGE = base.Columns["CHANGE"];
                this.columnRECEIPT_STATE = base.Columns["RECEIPT_STATE"];
                this.columnRECEIPT_CREATEBY = base.Columns["RECEIPT_CREATEBY"];
                this.columnRECEIPT_UPDATEDBY = base.Columns["RECEIPT_UPDATEDBY"];
                this.columnRECEIPT_CREATEDATE = base.Columns["RECEIPT_CREATEDATE"];
                this.columnRECEIPT_UPDATEDATE = base.Columns["RECEIPT_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_RECEIPT = new global::System.Data.DataColumn("ID_RECEIPT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_RECEIPT);
                this.columnNAME_CUSTOMER = new global::System.Data.DataColumn("NAME_CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_CUSTOMER);
                this.columnDATE_RECEIPT = new global::System.Data.DataColumn("DATE_RECEIPT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_RECEIPT);
                this.columnQUANTITY = new global::System.Data.DataColumn("QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY);
                this.columnTOTAL_RECEIPT = new global::System.Data.DataColumn("TOTAL_RECEIPT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_RECEIPT);
                this.columnDESCRIP_PRICE = new global::System.Data.DataColumn("DESCRIP_PRICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIP_PRICE);
                this.columnUNIT_PRICE = new global::System.Data.DataColumn("UNIT_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_PRICE);
                this.columnCASH = new global::System.Data.DataColumn("CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASH);
                this.columnCHANGE = new global::System.Data.DataColumn("CHANGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHANGE);
                this.columnRECEIPT_STATE = new global::System.Data.DataColumn("RECEIPT_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIPT_STATE);
                this.columnRECEIPT_CREATEBY = new global::System.Data.DataColumn("RECEIPT_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIPT_CREATEBY);
                this.columnRECEIPT_UPDATEDBY = new global::System.Data.DataColumn("RECEIPT_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIPT_UPDATEDBY);
                this.columnRECEIPT_CREATEDATE = new global::System.Data.DataColumn("RECEIPT_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIPT_CREATEDATE);
                this.columnRECEIPT_UPDATEDATE = new global::System.Data.DataColumn("RECEIPT_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIPT_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_RECEIPT}, true));
                this.columnID_RECEIPT.AutoIncrement = true;
                this.columnID_RECEIPT.AllowDBNull = false;
                this.columnID_RECEIPT.ReadOnly = true;
                this.columnID_RECEIPT.Unique = true;
                this.columnNAME_CUSTOMER.AllowDBNull = false;
                this.columnNAME_CUSTOMER.MaxLength = 50;
                this.columnDATE_RECEIPT.AllowDBNull = false;
                this.columnQUANTITY.AllowDBNull = false;
                this.columnTOTAL_RECEIPT.AllowDBNull = false;
                this.columnDESCRIP_PRICE.AllowDBNull = false;
                this.columnDESCRIP_PRICE.MaxLength = 50;
                this.columnUNIT_PRICE.AllowDBNull = false;
                this.columnCASH.AllowDBNull = false;
                this.columnCHANGE.AllowDBNull = false;
                this.columnRECEIPT_STATE.AllowDBNull = false;
                this.columnRECEIPT_CREATEBY.AllowDBNull = false;
                this.columnRECEIPT_CREATEBY.MaxLength = 50;
                this.columnRECEIPT_UPDATEDBY.AllowDBNull = false;
                this.columnRECEIPT_UPDATEDBY.MaxLength = 50;
                this.columnRECEIPT_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_RECEIPTRow NewSP_CRUD_RECEIPTRow() {
                return ((SP_CRUD_RECEIPTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_RECEIPTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_RECEIPTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_RECEIPTRowChanged != null)) {
                    this.SP_CRUD_RECEIPTRowChanged(this, new SP_CRUD_RECEIPTRowChangeEvent(((SP_CRUD_RECEIPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_RECEIPTRowChanging != null)) {
                    this.SP_CRUD_RECEIPTRowChanging(this, new SP_CRUD_RECEIPTRowChangeEvent(((SP_CRUD_RECEIPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_RECEIPTRowDeleted != null)) {
                    this.SP_CRUD_RECEIPTRowDeleted(this, new SP_CRUD_RECEIPTRowChangeEvent(((SP_CRUD_RECEIPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_RECEIPTRowDeleting != null)) {
                    this.SP_CRUD_RECEIPTRowDeleting(this, new SP_CRUD_RECEIPTRowChangeEvent(((SP_CRUD_RECEIPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_RECEIPTRow(SP_CRUD_RECEIPTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_RECEIPTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_ROLEDataTable : global::System.Data.TypedTableBase<SP_CRUD_ROLERow> {
            
            private global::System.Data.DataColumn columnID_ROLE;
            
            private global::System.Data.DataColumn columnNAME_ROLE;
            
            private global::System.Data.DataColumn columnDESCRIP_ROLE;
            
            private global::System.Data.DataColumn columnROLE_STATE;
            
            private global::System.Data.DataColumn columnROLE_CREATEBY;
            
            private global::System.Data.DataColumn columnROLE_UPDATEDBY;
            
            private global::System.Data.DataColumn columnROLE_CREATEDATE;
            
            private global::System.Data.DataColumn columnROLE_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLEDataTable() {
                this.TableName = "SP_CRUD_ROLE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_ROLEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_ROLEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ROLEColumn {
                get {
                    return this.columnID_ROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_ROLEColumn {
                get {
                    return this.columnNAME_ROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DESCRIP_ROLEColumn {
                get {
                    return this.columnDESCRIP_ROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_STATEColumn {
                get {
                    return this.columnROLE_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_CREATEBYColumn {
                get {
                    return this.columnROLE_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_UPDATEDBYColumn {
                get {
                    return this.columnROLE_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_CREATEDATEColumn {
                get {
                    return this.columnROLE_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_UPDATEDATEColumn {
                get {
                    return this.columnROLE_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLERow this[int index] {
                get {
                    return ((SP_CRUD_ROLERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ROLERowChangeEventHandler SP_CRUD_ROLERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ROLERowChangeEventHandler SP_CRUD_ROLERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ROLERowChangeEventHandler SP_CRUD_ROLERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ROLERowChangeEventHandler SP_CRUD_ROLERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_ROLERow(SP_CRUD_ROLERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLERow AddSP_CRUD_ROLERow(string NAME_ROLE, string DESCRIP_ROLE, bool ROLE_STATE, string ROLE_CREATEBY, string ROLE_UPDATEDBY, System.DateTime ROLE_CREATEDATE, System.DateTime ROLE_UPDATEDATE) {
                SP_CRUD_ROLERow rowSP_CRUD_ROLERow = ((SP_CRUD_ROLERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME_ROLE,
                        DESCRIP_ROLE,
                        ROLE_STATE,
                        ROLE_CREATEBY,
                        ROLE_UPDATEDBY,
                        ROLE_CREATEDATE,
                        ROLE_UPDATEDATE};
                rowSP_CRUD_ROLERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_ROLERow);
                return rowSP_CRUD_ROLERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLERow FindByID_ROLE(int ID_ROLE) {
                return ((SP_CRUD_ROLERow)(this.Rows.Find(new object[] {
                            ID_ROLE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_ROLEDataTable cln = ((SP_CRUD_ROLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_ROLEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_ROLE = base.Columns["ID_ROLE"];
                this.columnNAME_ROLE = base.Columns["NAME_ROLE"];
                this.columnDESCRIP_ROLE = base.Columns["DESCRIP_ROLE"];
                this.columnROLE_STATE = base.Columns["ROLE_STATE"];
                this.columnROLE_CREATEBY = base.Columns["ROLE_CREATEBY"];
                this.columnROLE_UPDATEDBY = base.Columns["ROLE_UPDATEDBY"];
                this.columnROLE_CREATEDATE = base.Columns["ROLE_CREATEDATE"];
                this.columnROLE_UPDATEDATE = base.Columns["ROLE_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_ROLE = new global::System.Data.DataColumn("ID_ROLE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ROLE);
                this.columnNAME_ROLE = new global::System.Data.DataColumn("NAME_ROLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ROLE);
                this.columnDESCRIP_ROLE = new global::System.Data.DataColumn("DESCRIP_ROLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIP_ROLE);
                this.columnROLE_STATE = new global::System.Data.DataColumn("ROLE_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_STATE);
                this.columnROLE_CREATEBY = new global::System.Data.DataColumn("ROLE_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_CREATEBY);
                this.columnROLE_UPDATEDBY = new global::System.Data.DataColumn("ROLE_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_UPDATEDBY);
                this.columnROLE_CREATEDATE = new global::System.Data.DataColumn("ROLE_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_CREATEDATE);
                this.columnROLE_UPDATEDATE = new global::System.Data.DataColumn("ROLE_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ROLE}, true));
                this.columnID_ROLE.AutoIncrement = true;
                this.columnID_ROLE.AllowDBNull = false;
                this.columnID_ROLE.ReadOnly = true;
                this.columnID_ROLE.Unique = true;
                this.columnNAME_ROLE.AllowDBNull = false;
                this.columnNAME_ROLE.MaxLength = 15;
                this.columnDESCRIP_ROLE.AllowDBNull = false;
                this.columnDESCRIP_ROLE.MaxLength = 50;
                this.columnROLE_STATE.AllowDBNull = false;
                this.columnROLE_CREATEBY.AllowDBNull = false;
                this.columnROLE_CREATEBY.MaxLength = 50;
                this.columnROLE_UPDATEDBY.AllowDBNull = false;
                this.columnROLE_UPDATEDBY.MaxLength = 50;
                this.columnROLE_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLERow NewSP_CRUD_ROLERow() {
                return ((SP_CRUD_ROLERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_ROLERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_ROLERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_ROLERowChanged != null)) {
                    this.SP_CRUD_ROLERowChanged(this, new SP_CRUD_ROLERowChangeEvent(((SP_CRUD_ROLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_ROLERowChanging != null)) {
                    this.SP_CRUD_ROLERowChanging(this, new SP_CRUD_ROLERowChangeEvent(((SP_CRUD_ROLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_ROLERowDeleted != null)) {
                    this.SP_CRUD_ROLERowDeleted(this, new SP_CRUD_ROLERowChangeEvent(((SP_CRUD_ROLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_ROLERowDeleting != null)) {
                    this.SP_CRUD_ROLERowDeleting(this, new SP_CRUD_ROLERowChangeEvent(((SP_CRUD_ROLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_ROLERow(SP_CRUD_ROLERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_ROLEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_ROLE_PERDataTable : global::System.Data.TypedTableBase<SP_CRUD_ROLE_PERRow> {
            
            private global::System.Data.DataColumn columnNAME_ROLE;
            
            private global::System.Data.DataColumn columnNAME_PERMISSION;
            
            private global::System.Data.DataColumn columnROLE_PER_STATE;
            
            private global::System.Data.DataColumn columnROLE_PER_CREATEBY;
            
            private global::System.Data.DataColumn columnROLE_PER_UPDATEDBY;
            
            private global::System.Data.DataColumn columnROLE_PER_CREATEDATE;
            
            private global::System.Data.DataColumn columnROLE_PER_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLE_PERDataTable() {
                this.TableName = "SP_CRUD_ROLE_PER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_ROLE_PERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_ROLE_PERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_ROLEColumn {
                get {
                    return this.columnNAME_ROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_PERMISSIONColumn {
                get {
                    return this.columnNAME_PERMISSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_PER_STATEColumn {
                get {
                    return this.columnROLE_PER_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_PER_CREATEBYColumn {
                get {
                    return this.columnROLE_PER_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_PER_UPDATEDBYColumn {
                get {
                    return this.columnROLE_PER_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_PER_CREATEDATEColumn {
                get {
                    return this.columnROLE_PER_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROLE_PER_UPDATEDATEColumn {
                get {
                    return this.columnROLE_PER_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLE_PERRow this[int index] {
                get {
                    return ((SP_CRUD_ROLE_PERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ROLE_PERRowChangeEventHandler SP_CRUD_ROLE_PERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ROLE_PERRowChangeEventHandler SP_CRUD_ROLE_PERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ROLE_PERRowChangeEventHandler SP_CRUD_ROLE_PERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_ROLE_PERRowChangeEventHandler SP_CRUD_ROLE_PERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_ROLE_PERRow(SP_CRUD_ROLE_PERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLE_PERRow AddSP_CRUD_ROLE_PERRow(string NAME_ROLE, string NAME_PERMISSION, bool ROLE_PER_STATE, string ROLE_PER_CREATEBY, string ROLE_PER_UPDATEDBY, System.DateTime ROLE_PER_CREATEDATE, System.DateTime ROLE_PER_UPDATEDATE) {
                SP_CRUD_ROLE_PERRow rowSP_CRUD_ROLE_PERRow = ((SP_CRUD_ROLE_PERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NAME_ROLE,
                        NAME_PERMISSION,
                        ROLE_PER_STATE,
                        ROLE_PER_CREATEBY,
                        ROLE_PER_UPDATEDBY,
                        ROLE_PER_CREATEDATE,
                        ROLE_PER_UPDATEDATE};
                rowSP_CRUD_ROLE_PERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_ROLE_PERRow);
                return rowSP_CRUD_ROLE_PERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_ROLE_PERDataTable cln = ((SP_CRUD_ROLE_PERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_ROLE_PERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNAME_ROLE = base.Columns["NAME_ROLE"];
                this.columnNAME_PERMISSION = base.Columns["NAME_PERMISSION"];
                this.columnROLE_PER_STATE = base.Columns["ROLE_PER_STATE"];
                this.columnROLE_PER_CREATEBY = base.Columns["ROLE_PER_CREATEBY"];
                this.columnROLE_PER_UPDATEDBY = base.Columns["ROLE_PER_UPDATEDBY"];
                this.columnROLE_PER_CREATEDATE = base.Columns["ROLE_PER_CREATEDATE"];
                this.columnROLE_PER_UPDATEDATE = base.Columns["ROLE_PER_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNAME_ROLE = new global::System.Data.DataColumn("NAME_ROLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ROLE);
                this.columnNAME_PERMISSION = new global::System.Data.DataColumn("NAME_PERMISSION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_PERMISSION);
                this.columnROLE_PER_STATE = new global::System.Data.DataColumn("ROLE_PER_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_PER_STATE);
                this.columnROLE_PER_CREATEBY = new global::System.Data.DataColumn("ROLE_PER_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_PER_CREATEBY);
                this.columnROLE_PER_UPDATEDBY = new global::System.Data.DataColumn("ROLE_PER_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_PER_UPDATEDBY);
                this.columnROLE_PER_CREATEDATE = new global::System.Data.DataColumn("ROLE_PER_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_PER_CREATEDATE);
                this.columnROLE_PER_UPDATEDATE = new global::System.Data.DataColumn("ROLE_PER_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE_PER_UPDATEDATE);
                this.columnNAME_ROLE.AllowDBNull = false;
                this.columnNAME_ROLE.MaxLength = 15;
                this.columnNAME_PERMISSION.MaxLength = 15;
                this.columnROLE_PER_STATE.AllowDBNull = false;
                this.columnROLE_PER_CREATEBY.AllowDBNull = false;
                this.columnROLE_PER_CREATEBY.MaxLength = 50;
                this.columnROLE_PER_UPDATEDBY.AllowDBNull = false;
                this.columnROLE_PER_UPDATEDBY.MaxLength = 50;
                this.columnROLE_PER_CREATEDATE.AllowDBNull = false;
                this.columnROLE_PER_UPDATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLE_PERRow NewSP_CRUD_ROLE_PERRow() {
                return ((SP_CRUD_ROLE_PERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_ROLE_PERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_ROLE_PERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_ROLE_PERRowChanged != null)) {
                    this.SP_CRUD_ROLE_PERRowChanged(this, new SP_CRUD_ROLE_PERRowChangeEvent(((SP_CRUD_ROLE_PERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_ROLE_PERRowChanging != null)) {
                    this.SP_CRUD_ROLE_PERRowChanging(this, new SP_CRUD_ROLE_PERRowChangeEvent(((SP_CRUD_ROLE_PERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_ROLE_PERRowDeleted != null)) {
                    this.SP_CRUD_ROLE_PERRowDeleted(this, new SP_CRUD_ROLE_PERRowChangeEvent(((SP_CRUD_ROLE_PERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_ROLE_PERRowDeleting != null)) {
                    this.SP_CRUD_ROLE_PERRowDeleting(this, new SP_CRUD_ROLE_PERRowChangeEvent(((SP_CRUD_ROLE_PERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_ROLE_PERRow(SP_CRUD_ROLE_PERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_ROLE_PERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_STOCKDataTable : global::System.Data.TypedTableBase<SP_CRUD_STOCKRow> {
            
            private global::System.Data.DataColumn columnID_STOCK;
            
            private global::System.Data.DataColumn columnDESCRIP_PRICE;
            
            private global::System.Data.DataColumn columnSTOCK_INITIAL_QUANTITY;
            
            private global::System.Data.DataColumn columnSTOCK_QUANTITY;
            
            private global::System.Data.DataColumn columnSTOCK_ADJUSTMENT;
            
            private global::System.Data.DataColumn columnSTOCK_DATE_PRODUCT;
            
            private global::System.Data.DataColumn columnSTOCK_COUNTER;
            
            private global::System.Data.DataColumn columnSTOCK_STATE;
            
            private global::System.Data.DataColumn columnSTOCK_CREATEBY;
            
            private global::System.Data.DataColumn columnSTOCK_UPDATEDBY;
            
            private global::System.Data.DataColumn columnSTOCK_CREATEDATE;
            
            private global::System.Data.DataColumn columnSTOCK_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_STOCKDataTable() {
                this.TableName = "SP_CRUD_STOCK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_STOCKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_STOCKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_STOCKColumn {
                get {
                    return this.columnID_STOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DESCRIP_PRICEColumn {
                get {
                    return this.columnDESCRIP_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_INITIAL_QUANTITYColumn {
                get {
                    return this.columnSTOCK_INITIAL_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_QUANTITYColumn {
                get {
                    return this.columnSTOCK_QUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_ADJUSTMENTColumn {
                get {
                    return this.columnSTOCK_ADJUSTMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_DATE_PRODUCTColumn {
                get {
                    return this.columnSTOCK_DATE_PRODUCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_COUNTERColumn {
                get {
                    return this.columnSTOCK_COUNTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_STATEColumn {
                get {
                    return this.columnSTOCK_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_CREATEBYColumn {
                get {
                    return this.columnSTOCK_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_UPDATEDBYColumn {
                get {
                    return this.columnSTOCK_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_CREATEDATEColumn {
                get {
                    return this.columnSTOCK_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOCK_UPDATEDATEColumn {
                get {
                    return this.columnSTOCK_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_STOCKRow this[int index] {
                get {
                    return ((SP_CRUD_STOCKRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_STOCKRowChangeEventHandler SP_CRUD_STOCKRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_STOCKRowChangeEventHandler SP_CRUD_STOCKRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_STOCKRowChangeEventHandler SP_CRUD_STOCKRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_STOCKRowChangeEventHandler SP_CRUD_STOCKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_STOCKRow(SP_CRUD_STOCKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_STOCKRow AddSP_CRUD_STOCKRow(string DESCRIP_PRICE, int STOCK_INITIAL_QUANTITY, int STOCK_QUANTITY, int STOCK_ADJUSTMENT, System.DateTime STOCK_DATE_PRODUCT, bool STOCK_COUNTER, bool STOCK_STATE, string STOCK_CREATEBY, string STOCK_UPDATEDBY, System.DateTime STOCK_CREATEDATE, System.DateTime STOCK_UPDATEDATE) {
                SP_CRUD_STOCKRow rowSP_CRUD_STOCKRow = ((SP_CRUD_STOCKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DESCRIP_PRICE,
                        STOCK_INITIAL_QUANTITY,
                        STOCK_QUANTITY,
                        STOCK_ADJUSTMENT,
                        STOCK_DATE_PRODUCT,
                        STOCK_COUNTER,
                        STOCK_STATE,
                        STOCK_CREATEBY,
                        STOCK_UPDATEDBY,
                        STOCK_CREATEDATE,
                        STOCK_UPDATEDATE};
                rowSP_CRUD_STOCKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_STOCKRow);
                return rowSP_CRUD_STOCKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_STOCKRow FindByID_STOCK(int ID_STOCK) {
                return ((SP_CRUD_STOCKRow)(this.Rows.Find(new object[] {
                            ID_STOCK})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_STOCKDataTable cln = ((SP_CRUD_STOCKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_STOCKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_STOCK = base.Columns["ID_STOCK"];
                this.columnDESCRIP_PRICE = base.Columns["DESCRIP_PRICE"];
                this.columnSTOCK_INITIAL_QUANTITY = base.Columns["STOCK_INITIAL_QUANTITY"];
                this.columnSTOCK_QUANTITY = base.Columns["STOCK_QUANTITY"];
                this.columnSTOCK_ADJUSTMENT = base.Columns["STOCK_ADJUSTMENT"];
                this.columnSTOCK_DATE_PRODUCT = base.Columns["STOCK_DATE_PRODUCT"];
                this.columnSTOCK_COUNTER = base.Columns["STOCK_COUNTER"];
                this.columnSTOCK_STATE = base.Columns["STOCK_STATE"];
                this.columnSTOCK_CREATEBY = base.Columns["STOCK_CREATEBY"];
                this.columnSTOCK_UPDATEDBY = base.Columns["STOCK_UPDATEDBY"];
                this.columnSTOCK_CREATEDATE = base.Columns["STOCK_CREATEDATE"];
                this.columnSTOCK_UPDATEDATE = base.Columns["STOCK_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_STOCK = new global::System.Data.DataColumn("ID_STOCK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_STOCK);
                this.columnDESCRIP_PRICE = new global::System.Data.DataColumn("DESCRIP_PRICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIP_PRICE);
                this.columnSTOCK_INITIAL_QUANTITY = new global::System.Data.DataColumn("STOCK_INITIAL_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_INITIAL_QUANTITY);
                this.columnSTOCK_QUANTITY = new global::System.Data.DataColumn("STOCK_QUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_QUANTITY);
                this.columnSTOCK_ADJUSTMENT = new global::System.Data.DataColumn("STOCK_ADJUSTMENT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_ADJUSTMENT);
                this.columnSTOCK_DATE_PRODUCT = new global::System.Data.DataColumn("STOCK_DATE_PRODUCT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_DATE_PRODUCT);
                this.columnSTOCK_COUNTER = new global::System.Data.DataColumn("STOCK_COUNTER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_COUNTER);
                this.columnSTOCK_STATE = new global::System.Data.DataColumn("STOCK_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_STATE);
                this.columnSTOCK_CREATEBY = new global::System.Data.DataColumn("STOCK_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_CREATEBY);
                this.columnSTOCK_UPDATEDBY = new global::System.Data.DataColumn("STOCK_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_UPDATEDBY);
                this.columnSTOCK_CREATEDATE = new global::System.Data.DataColumn("STOCK_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_CREATEDATE);
                this.columnSTOCK_UPDATEDATE = new global::System.Data.DataColumn("STOCK_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_STOCK}, true));
                this.columnID_STOCK.AutoIncrement = true;
                this.columnID_STOCK.AllowDBNull = false;
                this.columnID_STOCK.ReadOnly = true;
                this.columnID_STOCK.Unique = true;
                this.columnDESCRIP_PRICE.AllowDBNull = false;
                this.columnDESCRIP_PRICE.MaxLength = 50;
                this.columnSTOCK_INITIAL_QUANTITY.AllowDBNull = false;
                this.columnSTOCK_QUANTITY.AllowDBNull = false;
                this.columnSTOCK_DATE_PRODUCT.AllowDBNull = false;
                this.columnSTOCK_STATE.AllowDBNull = false;
                this.columnSTOCK_CREATEBY.AllowDBNull = false;
                this.columnSTOCK_CREATEBY.MaxLength = 50;
                this.columnSTOCK_UPDATEDBY.AllowDBNull = false;
                this.columnSTOCK_UPDATEDBY.MaxLength = 50;
                this.columnSTOCK_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_STOCKRow NewSP_CRUD_STOCKRow() {
                return ((SP_CRUD_STOCKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_STOCKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_STOCKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_STOCKRowChanged != null)) {
                    this.SP_CRUD_STOCKRowChanged(this, new SP_CRUD_STOCKRowChangeEvent(((SP_CRUD_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_STOCKRowChanging != null)) {
                    this.SP_CRUD_STOCKRowChanging(this, new SP_CRUD_STOCKRowChangeEvent(((SP_CRUD_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_STOCKRowDeleted != null)) {
                    this.SP_CRUD_STOCKRowDeleted(this, new SP_CRUD_STOCKRowChangeEvent(((SP_CRUD_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_STOCKRowDeleting != null)) {
                    this.SP_CRUD_STOCKRowDeleting(this, new SP_CRUD_STOCKRowChangeEvent(((SP_CRUD_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_STOCKRow(SP_CRUD_STOCKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_STOCKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_USERDataTable : global::System.Data.TypedTableBase<SP_CRUD_USERRow> {
            
            private global::System.Data.DataColumn columnID_USER;
            
            private global::System.Data.DataColumn columnUSER_NAME;
            
            private global::System.Data.DataColumn columnUSER_EMAIL;
            
            private global::System.Data.DataColumn columnNAME_DPT;
            
            private global::System.Data.DataColumn columnAREA_NAME;
            
            private global::System.Data.DataColumn columnNAME_POSITION;
            
            private global::System.Data.DataColumn columnNAME_ROLE;
            
            private global::System.Data.DataColumn columnUSER_PASSWORD;
            
            private global::System.Data.DataColumn columnUSER_NICKNAME;
            
            private global::System.Data.DataColumn columnUSER_STATE;
            
            private global::System.Data.DataColumn columnUSER_CREATEBY;
            
            private global::System.Data.DataColumn columnUSER_UPDATEDBY;
            
            private global::System.Data.DataColumn columnUSER_CREATEDATE;
            
            private global::System.Data.DataColumn columnUSER_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_USERDataTable() {
                this.TableName = "SP_CRUD_USER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_USERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_USERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_USERColumn {
                get {
                    return this.columnID_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_NAMEColumn {
                get {
                    return this.columnUSER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_EMAILColumn {
                get {
                    return this.columnUSER_EMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_DPTColumn {
                get {
                    return this.columnNAME_DPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AREA_NAMEColumn {
                get {
                    return this.columnAREA_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_POSITIONColumn {
                get {
                    return this.columnNAME_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_ROLEColumn {
                get {
                    return this.columnNAME_ROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_PASSWORDColumn {
                get {
                    return this.columnUSER_PASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_NICKNAMEColumn {
                get {
                    return this.columnUSER_NICKNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_STATEColumn {
                get {
                    return this.columnUSER_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_CREATEBYColumn {
                get {
                    return this.columnUSER_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_UPDATEDBYColumn {
                get {
                    return this.columnUSER_UPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_CREATEDATEColumn {
                get {
                    return this.columnUSER_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_UPDATEDATEColumn {
                get {
                    return this.columnUSER_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_USERRow this[int index] {
                get {
                    return ((SP_CRUD_USERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_USERRowChangeEventHandler SP_CRUD_USERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_USERRowChangeEventHandler SP_CRUD_USERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_USERRowChangeEventHandler SP_CRUD_USERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_USERRowChangeEventHandler SP_CRUD_USERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_USERRow(SP_CRUD_USERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_USERRow AddSP_CRUD_USERRow(string ID_USER, string USER_NAME, string USER_EMAIL, string NAME_DPT, string AREA_NAME, string NAME_POSITION, string NAME_ROLE, string USER_PASSWORD, string USER_NICKNAME, bool USER_STATE, string USER_CREATEBY, string USER_UPDATEDBY, System.DateTime USER_CREATEDATE, System.DateTime USER_UPDATEDATE) {
                SP_CRUD_USERRow rowSP_CRUD_USERRow = ((SP_CRUD_USERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_USER,
                        USER_NAME,
                        USER_EMAIL,
                        NAME_DPT,
                        AREA_NAME,
                        NAME_POSITION,
                        NAME_ROLE,
                        USER_PASSWORD,
                        USER_NICKNAME,
                        USER_STATE,
                        USER_CREATEBY,
                        USER_UPDATEDBY,
                        USER_CREATEDATE,
                        USER_UPDATEDATE};
                rowSP_CRUD_USERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_USERRow);
                return rowSP_CRUD_USERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_USERRow FindByID_USER(string ID_USER) {
                return ((SP_CRUD_USERRow)(this.Rows.Find(new object[] {
                            ID_USER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_USERDataTable cln = ((SP_CRUD_USERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_USERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_USER = base.Columns["ID_USER"];
                this.columnUSER_NAME = base.Columns["USER_NAME"];
                this.columnUSER_EMAIL = base.Columns["USER_EMAIL"];
                this.columnNAME_DPT = base.Columns["NAME_DPT"];
                this.columnAREA_NAME = base.Columns["AREA_NAME"];
                this.columnNAME_POSITION = base.Columns["NAME_POSITION"];
                this.columnNAME_ROLE = base.Columns["NAME_ROLE"];
                this.columnUSER_PASSWORD = base.Columns["USER_PASSWORD"];
                this.columnUSER_NICKNAME = base.Columns["USER_NICKNAME"];
                this.columnUSER_STATE = base.Columns["USER_STATE"];
                this.columnUSER_CREATEBY = base.Columns["USER_CREATEBY"];
                this.columnUSER_UPDATEDBY = base.Columns["USER_UPDATEDBY"];
                this.columnUSER_CREATEDATE = base.Columns["USER_CREATEDATE"];
                this.columnUSER_UPDATEDATE = base.Columns["USER_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_USER = new global::System.Data.DataColumn("ID_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_USER);
                this.columnUSER_NAME = new global::System.Data.DataColumn("USER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NAME);
                this.columnUSER_EMAIL = new global::System.Data.DataColumn("USER_EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_EMAIL);
                this.columnNAME_DPT = new global::System.Data.DataColumn("NAME_DPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_DPT);
                this.columnAREA_NAME = new global::System.Data.DataColumn("AREA_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_NAME);
                this.columnNAME_POSITION = new global::System.Data.DataColumn("NAME_POSITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_POSITION);
                this.columnNAME_ROLE = new global::System.Data.DataColumn("NAME_ROLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ROLE);
                this.columnUSER_PASSWORD = new global::System.Data.DataColumn("USER_PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_PASSWORD);
                this.columnUSER_NICKNAME = new global::System.Data.DataColumn("USER_NICKNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NICKNAME);
                this.columnUSER_STATE = new global::System.Data.DataColumn("USER_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_STATE);
                this.columnUSER_CREATEBY = new global::System.Data.DataColumn("USER_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_CREATEBY);
                this.columnUSER_UPDATEDBY = new global::System.Data.DataColumn("USER_UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_UPDATEDBY);
                this.columnUSER_CREATEDATE = new global::System.Data.DataColumn("USER_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_CREATEDATE);
                this.columnUSER_UPDATEDATE = new global::System.Data.DataColumn("USER_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_UPDATEDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_USER}, true));
                this.columnID_USER.AllowDBNull = false;
                this.columnID_USER.Unique = true;
                this.columnID_USER.MaxLength = 50;
                this.columnUSER_NAME.AllowDBNull = false;
                this.columnUSER_NAME.MaxLength = 150;
                this.columnUSER_EMAIL.AllowDBNull = false;
                this.columnUSER_EMAIL.MaxLength = 150;
                this.columnNAME_DPT.AllowDBNull = false;
                this.columnNAME_DPT.MaxLength = 75;
                this.columnAREA_NAME.AllowDBNull = false;
                this.columnAREA_NAME.MaxLength = 25;
                this.columnNAME_POSITION.AllowDBNull = false;
                this.columnNAME_POSITION.MaxLength = 50;
                this.columnNAME_ROLE.AllowDBNull = false;
                this.columnNAME_ROLE.MaxLength = 15;
                this.columnUSER_PASSWORD.AllowDBNull = false;
                this.columnUSER_PASSWORD.MaxLength = 15;
                this.columnUSER_NICKNAME.AllowDBNull = false;
                this.columnUSER_NICKNAME.MaxLength = 50;
                this.columnUSER_STATE.AllowDBNull = false;
                this.columnUSER_CREATEBY.AllowDBNull = false;
                this.columnUSER_CREATEBY.MaxLength = 50;
                this.columnUSER_UPDATEDBY.MaxLength = 50;
                this.columnUSER_CREATEDATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_USERRow NewSP_CRUD_USERRow() {
                return ((SP_CRUD_USERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_USERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_USERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_USERRowChanged != null)) {
                    this.SP_CRUD_USERRowChanged(this, new SP_CRUD_USERRowChangeEvent(((SP_CRUD_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_USERRowChanging != null)) {
                    this.SP_CRUD_USERRowChanging(this, new SP_CRUD_USERRowChangeEvent(((SP_CRUD_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_USERRowDeleted != null)) {
                    this.SP_CRUD_USERRowDeleted(this, new SP_CRUD_USERRowChangeEvent(((SP_CRUD_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_USERRowDeleting != null)) {
                    this.SP_CRUD_USERRowDeleting(this, new SP_CRUD_USERRowChangeEvent(((SP_CRUD_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_USERRow(SP_CRUD_USERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_USERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_CRUD_NOTEDataTable : global::System.Data.TypedTableBase<SP_CRUD_NOTERow> {
            
            private global::System.Data.DataColumn columnID_NOTE;
            
            private global::System.Data.DataColumn columnNOTE_TITLE;
            
            private global::System.Data.DataColumn columnNOTE_CONTENT;
            
            private global::System.Data.DataColumn columnNOTE_DATE;
            
            private global::System.Data.DataColumn columnNOTE_STATE;
            
            private global::System.Data.DataColumn columnNOTE_CREATEBY;
            
            private global::System.Data.DataColumn columnNOTE_CREATEDATE;
            
            private global::System.Data.DataColumn columnNOTE_UPDATEBY;
            
            private global::System.Data.DataColumn columnNOTE_UPDATEDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_NOTEDataTable() {
                this.TableName = "SP_CRUD_NOTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_NOTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SP_CRUD_NOTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_NOTEColumn {
                get {
                    return this.columnID_NOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_TITLEColumn {
                get {
                    return this.columnNOTE_TITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_CONTENTColumn {
                get {
                    return this.columnNOTE_CONTENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_DATEColumn {
                get {
                    return this.columnNOTE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_STATEColumn {
                get {
                    return this.columnNOTE_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_CREATEBYColumn {
                get {
                    return this.columnNOTE_CREATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_CREATEDATEColumn {
                get {
                    return this.columnNOTE_CREATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_UPDATEBYColumn {
                get {
                    return this.columnNOTE_UPDATEBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTE_UPDATEDATEColumn {
                get {
                    return this.columnNOTE_UPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_NOTERow this[int index] {
                get {
                    return ((SP_CRUD_NOTERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_NOTERowChangeEventHandler SP_CRUD_NOTERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_NOTERowChangeEventHandler SP_CRUD_NOTERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_NOTERowChangeEventHandler SP_CRUD_NOTERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SP_CRUD_NOTERowChangeEventHandler SP_CRUD_NOTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSP_CRUD_NOTERow(SP_CRUD_NOTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_NOTERow AddSP_CRUD_NOTERow(string NOTE_TITLE, string NOTE_CONTENT, System.DateTime NOTE_DATE, bool NOTE_STATE, string NOTE_CREATEBY, System.DateTime NOTE_CREATEDATE, string NOTE_UPDATEBY, System.DateTime NOTE_UPDATEDATE) {
                SP_CRUD_NOTERow rowSP_CRUD_NOTERow = ((SP_CRUD_NOTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NOTE_TITLE,
                        NOTE_CONTENT,
                        NOTE_DATE,
                        NOTE_STATE,
                        NOTE_CREATEBY,
                        NOTE_CREATEDATE,
                        NOTE_UPDATEBY,
                        NOTE_UPDATEDATE};
                rowSP_CRUD_NOTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_CRUD_NOTERow);
                return rowSP_CRUD_NOTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_CRUD_NOTEDataTable cln = ((SP_CRUD_NOTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_CRUD_NOTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_NOTE = base.Columns["ID_NOTE"];
                this.columnNOTE_TITLE = base.Columns["NOTE_TITLE"];
                this.columnNOTE_CONTENT = base.Columns["NOTE_CONTENT"];
                this.columnNOTE_DATE = base.Columns["NOTE_DATE"];
                this.columnNOTE_STATE = base.Columns["NOTE_STATE"];
                this.columnNOTE_CREATEBY = base.Columns["NOTE_CREATEBY"];
                this.columnNOTE_CREATEDATE = base.Columns["NOTE_CREATEDATE"];
                this.columnNOTE_UPDATEBY = base.Columns["NOTE_UPDATEBY"];
                this.columnNOTE_UPDATEDATE = base.Columns["NOTE_UPDATEDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_NOTE = new global::System.Data.DataColumn("ID_NOTE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_NOTE);
                this.columnNOTE_TITLE = new global::System.Data.DataColumn("NOTE_TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_TITLE);
                this.columnNOTE_CONTENT = new global::System.Data.DataColumn("NOTE_CONTENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_CONTENT);
                this.columnNOTE_DATE = new global::System.Data.DataColumn("NOTE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_DATE);
                this.columnNOTE_STATE = new global::System.Data.DataColumn("NOTE_STATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_STATE);
                this.columnNOTE_CREATEBY = new global::System.Data.DataColumn("NOTE_CREATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_CREATEBY);
                this.columnNOTE_CREATEDATE = new global::System.Data.DataColumn("NOTE_CREATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_CREATEDATE);
                this.columnNOTE_UPDATEBY = new global::System.Data.DataColumn("NOTE_UPDATEBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_UPDATEBY);
                this.columnNOTE_UPDATEDATE = new global::System.Data.DataColumn("NOTE_UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_UPDATEDATE);
                this.columnID_NOTE.AutoIncrement = true;
                this.columnID_NOTE.AllowDBNull = false;
                this.columnID_NOTE.ReadOnly = true;
                this.columnNOTE_TITLE.AllowDBNull = false;
                this.columnNOTE_TITLE.MaxLength = 100;
                this.columnNOTE_CONTENT.AllowDBNull = false;
                this.columnNOTE_CONTENT.MaxLength = 1000;
                this.columnNOTE_DATE.AllowDBNull = false;
                this.columnNOTE_STATE.AllowDBNull = false;
                this.columnNOTE_CREATEBY.AllowDBNull = false;
                this.columnNOTE_CREATEBY.MaxLength = 50;
                this.columnNOTE_CREATEDATE.AllowDBNull = false;
                this.columnNOTE_UPDATEBY.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_NOTERow NewSP_CRUD_NOTERow() {
                return ((SP_CRUD_NOTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_CRUD_NOTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_CRUD_NOTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_CRUD_NOTERowChanged != null)) {
                    this.SP_CRUD_NOTERowChanged(this, new SP_CRUD_NOTERowChangeEvent(((SP_CRUD_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_CRUD_NOTERowChanging != null)) {
                    this.SP_CRUD_NOTERowChanging(this, new SP_CRUD_NOTERowChangeEvent(((SP_CRUD_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_CRUD_NOTERowDeleted != null)) {
                    this.SP_CRUD_NOTERowDeleted(this, new SP_CRUD_NOTERowChangeEvent(((SP_CRUD_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_CRUD_NOTERowDeleting != null)) {
                    this.SP_CRUD_NOTERowDeleting(this, new SP_CRUD_NOTERowChangeEvent(((SP_CRUD_NOTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSP_CRUD_NOTERow(SP_CRUD_NOTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ControlAppDevDataSetIsaac ds = new ControlAppDevDataSetIsaac();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_CRUD_NOTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LogRow : global::System.Data.DataRow {
            
            private LogDataTable tableLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal LogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLog = ((LogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableLog.IdColumn]));
                }
                set {
                    this[this.tableLog.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Date {
                get {
                    return ((global::System.DateTime)(this[this.tableLog.DateColumn]));
                }
                set {
                    this[this.tableLog.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Thread {
                get {
                    return ((string)(this[this.tableLog.ThreadColumn]));
                }
                set {
                    this[this.tableLog.ThreadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Level {
                get {
                    return ((string)(this[this.tableLog.LevelColumn]));
                }
                set {
                    this[this.tableLog.LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Logger {
                get {
                    return ((string)(this[this.tableLog.LoggerColumn]));
                }
                set {
                    this[this.tableLog.LoggerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Message {
                get {
                    return ((string)(this[this.tableLog.MessageColumn]));
                }
                set {
                    this[this.tableLog.MessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Exception {
                get {
                    try {
                        return ((string)(this[this.tableLog.ExceptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Exception\' in table \'Log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.ExceptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsExceptionNull() {
                return this.IsNull(this.tableLog.ExceptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetExceptionNull() {
                this[this.tableLog.ExceptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_AREARow : global::System.Data.DataRow {
            
            private TBL_AREADataTable tableTBL_AREA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_AREARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_AREA = ((TBL_AREADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_AREA {
                get {
                    return ((int)(this[this.tableTBL_AREA.ID_AREAColumn]));
                }
                set {
                    this[this.tableTBL_AREA.ID_AREAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_DPT {
                get {
                    try {
                        return ((int)(this[this.tableTBL_AREA.ID_DPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_DPT\' in table \'TBL_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_AREA.ID_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AREA_NAME {
                get {
                    return ((string)(this[this.tableTBL_AREA.AREA_NAMEColumn]));
                }
                set {
                    this[this.tableTBL_AREA.AREA_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AREA_STATE {
                get {
                    return ((bool)(this[this.tableTBL_AREA.AREA_STATEColumn]));
                }
                set {
                    this[this.tableTBL_AREA.AREA_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AREA_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_AREA.AREA_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_AREA.AREA_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AREA_UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableTBL_AREA.AREA_UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AREA_UPDATEDBY\' in table \'TBL_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_AREA.AREA_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime AREA_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_AREA.AREA_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_AREA.AREA_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime AREA_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_AREA.AREA_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AREA_UPDATEDATE\' in table \'TBL_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_AREA.AREA_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_DPTRow TBL_DPTRow {
                get {
                    return ((TBL_DPTRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_AREA_TBL_DPT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_AREA_TBL_DPT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsID_DPTNull() {
                return this.IsNull(this.tableTBL_AREA.ID_DPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetID_DPTNull() {
                this[this.tableTBL_AREA.ID_DPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAREA_UPDATEDBYNull() {
                return this.IsNull(this.tableTBL_AREA.AREA_UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAREA_UPDATEDBYNull() {
                this[this.tableTBL_AREA.AREA_UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAREA_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_AREA.AREA_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAREA_UPDATEDATENull() {
                this[this.tableTBL_AREA.AREA_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_POSITIONRow[] GetTBL_POSITIONRows() {
                if ((this.Table.ChildRelations["FK_TBL_POSITION_TBL_AREA"] == null)) {
                    return new TBL_POSITIONRow[0];
                }
                else {
                    return ((TBL_POSITIONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_POSITION_TBL_AREA"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow[] GetTBL_USERRows() {
                if ((this.Table.ChildRelations["FK_TBL_USER_TBL_AREA"] == null)) {
                    return new TBL_USERRow[0];
                }
                else {
                    return ((TBL_USERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_USER_TBL_AREA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_CUSTOMERRow : global::System.Data.DataRow {
            
            private TBL_CUSTOMERDataTable tableTBL_CUSTOMER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_CUSTOMERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_CUSTOMER = ((TBL_CUSTOMERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ID_CUSTOMER {
                get {
                    return ((string)(this[this.tableTBL_CUSTOMER.ID_CUSTOMERColumn]));
                }
                set {
                    this[this.tableTBL_CUSTOMER.ID_CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER_NAME {
                get {
                    return ((string)(this[this.tableTBL_CUSTOMER.CUSTOMER_NAMEColumn]));
                }
                set {
                    this[this.tableTBL_CUSTOMER.CUSTOMER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CUSTOMER_STATE {
                get {
                    return ((bool)(this[this.tableTBL_CUSTOMER.CUSTOMER_STATEColumn]));
                }
                set {
                    this[this.tableTBL_CUSTOMER.CUSTOMER_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_CUSTOMER.CUSTOMER_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_CUSTOMER.CUSTOMER_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER_UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableTBL_CUSTOMER.CUSTOMER_UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER_UPDATEDBY\' in table \'TBL_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_CUSTOMER.CUSTOMER_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CUSTOMER_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_CUSTOMER.CUSTOMER_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_CUSTOMER.CUSTOMER_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CUSTOMER_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_CUSTOMER.CUSTOMER_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER_UPDATEDATE\' in table \'TBL_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_CUSTOMER.CUSTOMER_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow TBL_USERRow {
                get {
                    return ((TBL_USERRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_CUSTOMER_TBL_USER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_CUSTOMER_TBL_USER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMER_UPDATEDBYNull() {
                return this.IsNull(this.tableTBL_CUSTOMER.CUSTOMER_UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMER_UPDATEDBYNull() {
                this[this.tableTBL_CUSTOMER.CUSTOMER_UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMER_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_CUSTOMER.CUSTOMER_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMER_UPDATEDATENull() {
                this[this.tableTBL_CUSTOMER.CUSTOMER_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PREPAIDRow[] GetTBL_PREPAIDRows() {
                if ((this.Table.ChildRelations["FK_TBL_PREPAID_TBL_CUSTOMER"] == null)) {
                    return new TBL_PREPAIDRow[0];
                }
                else {
                    return ((TBL_PREPAIDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_PREPAID_TBL_CUSTOMER"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_CXCRow : global::System.Data.DataRow {
            
            private TBL_CXCDataTable tableTBL_CXC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_CXCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_CXC = ((TBL_CXCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_CXC {
                get {
                    return ((int)(this[this.tableTBL_CXC.ID_CXCColumn]));
                }
                set {
                    this[this.tableTBL_CXC.ID_CXCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ID_USER {
                get {
                    return ((string)(this[this.tableTBL_CXC.ID_USERColumn]));
                }
                set {
                    this[this.tableTBL_CXC.ID_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_STOCK {
                get {
                    try {
                        return ((int)(this[this.tableTBL_CXC.ID_STOCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_STOCK\' in table \'TBL_CXC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_CXC.ID_STOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE_CXC {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_CXC.DATE_CXCColumn]));
                }
                set {
                    this[this.tableTBL_CXC.DATE_CXCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int QUANTITY_RETREAT {
                get {
                    try {
                        return ((int)(this[this.tableTBL_CXC.QUANTITY_RETREATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANTITY_RETREAT\' in table \'TBL_CXC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_CXC.QUANTITY_RETREATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int QUANTITY_RETURN {
                get {
                    try {
                        return ((int)(this[this.tableTBL_CXC.QUANTITY_RETURNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANTITY_RETURN\' in table \'TBL_CXC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_CXC.QUANTITY_RETURNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_CXC {
                get {
                    return ((decimal)(this[this.tableTBL_CXC.TOTAL_CXCColumn]));
                }
                set {
                    this[this.tableTBL_CXC.TOTAL_CXCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BALANCE_CXC {
                get {
                    return ((int)(this[this.tableTBL_CXC.BALANCE_CXCColumn]));
                }
                set {
                    this[this.tableTBL_CXC.BALANCE_CXCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CXC_STATE {
                get {
                    return ((bool)(this[this.tableTBL_CXC.CXC_STATEColumn]));
                }
                set {
                    this[this.tableTBL_CXC.CXC_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CXC_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_CXC.CXC_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_CXC.CXC_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CXC_UPDATEDBY {
                get {
                    return ((string)(this[this.tableTBL_CXC.CXC_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableTBL_CXC.CXC_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CXC_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_CXC.CXC_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_CXC.CXC_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CXC_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_CXC.CXC_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CXC_UPDATEDATE\' in table \'TBL_CXC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_CXC.CXC_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_STOCKRow TBL_STOCKRow {
                get {
                    return ((TBL_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_CXC_TBL_STOCK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_CXC_TBL_STOCK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow TBL_USERRow {
                get {
                    return ((TBL_USERRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_CXC_TBL_USER1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_CXC_TBL_USER1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsID_STOCKNull() {
                return this.IsNull(this.tableTBL_CXC.ID_STOCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetID_STOCKNull() {
                this[this.tableTBL_CXC.ID_STOCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQUANTITY_RETREATNull() {
                return this.IsNull(this.tableTBL_CXC.QUANTITY_RETREATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQUANTITY_RETREATNull() {
                this[this.tableTBL_CXC.QUANTITY_RETREATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQUANTITY_RETURNNull() {
                return this.IsNull(this.tableTBL_CXC.QUANTITY_RETURNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQUANTITY_RETURNNull() {
                this[this.tableTBL_CXC.QUANTITY_RETURNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCXC_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_CXC.CXC_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCXC_UPDATEDATENull() {
                this[this.tableTBL_CXC.CXC_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_DPTRow : global::System.Data.DataRow {
            
            private TBL_DPTDataTable tableTBL_DPT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_DPTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_DPT = ((TBL_DPTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_DPT {
                get {
                    return ((int)(this[this.tableTBL_DPT.ID_DPTColumn]));
                }
                set {
                    this[this.tableTBL_DPT.ID_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_DPT {
                get {
                    return ((string)(this[this.tableTBL_DPT.NAME_DPTColumn]));
                }
                set {
                    this[this.tableTBL_DPT.NAME_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool STATE_DPT {
                get {
                    return ((bool)(this[this.tableTBL_DPT.STATE_DPTColumn]));
                }
                set {
                    this[this.tableTBL_DPT.STATE_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CREATEBY_DPT {
                get {
                    try {
                        return ((string)(this[this.tableTBL_DPT.CREATEBY_DPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATEBY_DPT\' in table \'TBL_DPT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_DPT.CREATEBY_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UPDATEBY_DPT {
                get {
                    try {
                        return ((string)(this[this.tableTBL_DPT.UPDATEBY_DPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATEBY_DPT\' in table \'TBL_DPT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_DPT.UPDATEBY_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CREATEDATE_DPT {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_DPT.CREATEDATE_DPTColumn]));
                }
                set {
                    this[this.tableTBL_DPT.CREATEDATE_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime UPDATEDATE_DPT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_DPT.UPDATEDATE_DPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATEDATE_DPT\' in table \'TBL_DPT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_DPT.UPDATEDATE_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCREATEBY_DPTNull() {
                return this.IsNull(this.tableTBL_DPT.CREATEBY_DPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCREATEBY_DPTNull() {
                this[this.tableTBL_DPT.CREATEBY_DPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUPDATEBY_DPTNull() {
                return this.IsNull(this.tableTBL_DPT.UPDATEBY_DPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUPDATEBY_DPTNull() {
                this[this.tableTBL_DPT.UPDATEBY_DPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUPDATEDATE_DPTNull() {
                return this.IsNull(this.tableTBL_DPT.UPDATEDATE_DPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUPDATEDATE_DPTNull() {
                this[this.tableTBL_DPT.UPDATEDATE_DPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_AREARow[] GetTBL_AREARows() {
                if ((this.Table.ChildRelations["FK_TBL_AREA_TBL_DPT"] == null)) {
                    return new TBL_AREARow[0];
                }
                else {
                    return ((TBL_AREARow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_AREA_TBL_DPT"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PERMISSIONRow[] GetTBL_PERMISSIONRows() {
                if ((this.Table.ChildRelations["FK_TBL_PERMISSION_TBL_DPT"] == null)) {
                    return new TBL_PERMISSIONRow[0];
                }
                else {
                    return ((TBL_PERMISSIONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_PERMISSION_TBL_DPT"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow[] GetTBL_USERRows() {
                if ((this.Table.ChildRelations["FK_TBL_USER_TBL_DPT"] == null)) {
                    return new TBL_USERRow[0];
                }
                else {
                    return ((TBL_USERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_USER_TBL_DPT"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_NOTERow : global::System.Data.DataRow {
            
            private TBL_NOTEDataTable tableTBL_NOTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_NOTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_NOTE = ((TBL_NOTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_NOTE {
                get {
                    return ((int)(this[this.tableTBL_NOTE.ID_NOTEColumn]));
                }
                set {
                    this[this.tableTBL_NOTE.ID_NOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTE_TITLE {
                get {
                    return ((string)(this[this.tableTBL_NOTE.NOTE_TITLEColumn]));
                }
                set {
                    this[this.tableTBL_NOTE.NOTE_TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime NOTE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_NOTE.NOTE_DATEColumn]));
                }
                set {
                    this[this.tableTBL_NOTE.NOTE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTE_CONTENT {
                get {
                    return ((string)(this[this.tableTBL_NOTE.NOTE_CONTENTColumn]));
                }
                set {
                    this[this.tableTBL_NOTE.NOTE_CONTENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTE_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_NOTE.NOTE_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_NOTE.NOTE_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTE_UPDATEBY {
                get {
                    try {
                        return ((string)(this[this.tableTBL_NOTE.NOTE_UPDATEBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTE_UPDATEBY\' in table \'TBL_NOTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_NOTE.NOTE_UPDATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime NOTE_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_NOTE.NOTE_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_NOTE.NOTE_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime NOTE_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_NOTE.NOTE_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTE_UPDATEDATE\' in table \'TBL_NOTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_NOTE.NOTE_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTE_STATE {
                get {
                    return ((bool)(this[this.tableTBL_NOTE.NOTE_STATEColumn]));
                }
                set {
                    this[this.tableTBL_NOTE.NOTE_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNOTE_UPDATEBYNull() {
                return this.IsNull(this.tableTBL_NOTE.NOTE_UPDATEBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNOTE_UPDATEBYNull() {
                this[this.tableTBL_NOTE.NOTE_UPDATEBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNOTE_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_NOTE.NOTE_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNOTE_UPDATEDATENull() {
                this[this.tableTBL_NOTE.NOTE_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_ORDERRow : global::System.Data.DataRow {
            
            private TBL_ORDERDataTable tableTBL_ORDER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_ORDERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_ORDER = ((TBL_ORDERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_ORDER {
                get {
                    return ((int)(this[this.tableTBL_ORDER.ID_ORDERColumn]));
                }
                set {
                    this[this.tableTBL_ORDER.ID_ORDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PREPAID {
                get {
                    return ((int)(this[this.tableTBL_ORDER.ID_PREPAIDColumn]));
                }
                set {
                    this[this.tableTBL_ORDER.ID_PREPAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ORDER_QUANTITY {
                get {
                    return ((int)(this[this.tableTBL_ORDER.ORDER_QUANTITYColumn]));
                }
                set {
                    this[this.tableTBL_ORDER.ORDER_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ORDER_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_ORDER.ORDER_DATEColumn]));
                }
                set {
                    this[this.tableTBL_ORDER.ORDER_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ORDER_DELIVERY {
                get {
                    return ((bool)(this[this.tableTBL_ORDER.ORDER_DELIVERYColumn]));
                }
                set {
                    this[this.tableTBL_ORDER.ORDER_DELIVERYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ORDER_STATE {
                get {
                    return ((bool)(this[this.tableTBL_ORDER.ORDER_STATEColumn]));
                }
                set {
                    this[this.tableTBL_ORDER.ORDER_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ORDER_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_ORDER.ORDER_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_ORDER.ORDER_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ORDER_UPDATEDBY {
                get {
                    return ((string)(this[this.tableTBL_ORDER.ORDER_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableTBL_ORDER.ORDER_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ORDER_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_ORDER.ORDER_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_ORDER.ORDER_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ORDER_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_ORDER.ORDER_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDER_UPDATEDATE\' in table \'TBL_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_ORDER.ORDER_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PREPAIDRow TBL_PREPAIDRow {
                get {
                    return ((TBL_PREPAIDRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_ORDER_TBL_PREPAID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_ORDER_TBL_PREPAID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow TBL_USERRow {
                get {
                    return ((TBL_USERRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_ORDER_TBL_USER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_ORDER_TBL_USER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsORDER_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_ORDER.ORDER_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetORDER_UPDATEDATENull() {
                this[this.tableTBL_ORDER.ORDER_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_PERMISSIONRow : global::System.Data.DataRow {
            
            private TBL_PERMISSIONDataTable tableTBL_PERMISSION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_PERMISSIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_PERMISSION = ((TBL_PERMISSIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PER {
                get {
                    return ((int)(this[this.tableTBL_PERMISSION.ID_PERColumn]));
                }
                set {
                    this[this.tableTBL_PERMISSION.ID_PERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_DPT {
                get {
                    try {
                        return ((int)(this[this.tableTBL_PERMISSION.ID_DPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_DPT\' in table \'TBL_PERMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_PERMISSION.ID_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_PERMISSION {
                get {
                    try {
                        return ((string)(this[this.tableTBL_PERMISSION.NAME_PERMISSIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME_PERMISSION\' in table \'TBL_PERMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_PERMISSION.NAME_PERMISSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DESCRIP_PERMISSION {
                get {
                    try {
                        return ((string)(this[this.tableTBL_PERMISSION.DESCRIP_PERMISSIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIP_PERMISSION\' in table \'TBL_PERMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_PERMISSION.DESCRIP_PERMISSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PER_STATE {
                get {
                    try {
                        return ((bool)(this[this.tableTBL_PERMISSION.PER_STATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PER_STATE\' in table \'TBL_PERMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_PERMISSION.PER_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PER_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_PERMISSION.PER_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_PERMISSION.PER_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PER_UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableTBL_PERMISSION.PER_UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PER_UPDATEDBY\' in table \'TBL_PERMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_PERMISSION.PER_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PER_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_PERMISSION.PER_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_PERMISSION.PER_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PER_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_PERMISSION.PER_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PER_UPDATEDATE\' in table \'TBL_PERMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_PERMISSION.PER_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_DPTRow TBL_DPTRow {
                get {
                    return ((TBL_DPTRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_PERMISSION_TBL_DPT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_PERMISSION_TBL_DPT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsID_DPTNull() {
                return this.IsNull(this.tableTBL_PERMISSION.ID_DPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetID_DPTNull() {
                this[this.tableTBL_PERMISSION.ID_DPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNAME_PERMISSIONNull() {
                return this.IsNull(this.tableTBL_PERMISSION.NAME_PERMISSIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNAME_PERMISSIONNull() {
                this[this.tableTBL_PERMISSION.NAME_PERMISSIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDESCRIP_PERMISSIONNull() {
                return this.IsNull(this.tableTBL_PERMISSION.DESCRIP_PERMISSIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDESCRIP_PERMISSIONNull() {
                this[this.tableTBL_PERMISSION.DESCRIP_PERMISSIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPER_STATENull() {
                return this.IsNull(this.tableTBL_PERMISSION.PER_STATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPER_STATENull() {
                this[this.tableTBL_PERMISSION.PER_STATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPER_UPDATEDBYNull() {
                return this.IsNull(this.tableTBL_PERMISSION.PER_UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPER_UPDATEDBYNull() {
                this[this.tableTBL_PERMISSION.PER_UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPER_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_PERMISSION.PER_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPER_UPDATEDATENull() {
                this[this.tableTBL_PERMISSION.PER_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLE_PERMISSIONRow[] GetTBL_ROLE_PERMISSIONRows() {
                if ((this.Table.ChildRelations["FK_TBL_ROLE_PERMISSION_TBL_PERMISSION"] == null)) {
                    return new TBL_ROLE_PERMISSIONRow[0];
                }
                else {
                    return ((TBL_ROLE_PERMISSIONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_ROLE_PERMISSION_TBL_PERMISSION"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_POSITIONRow : global::System.Data.DataRow {
            
            private TBL_POSITIONDataTable tableTBL_POSITION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_POSITIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_POSITION = ((TBL_POSITIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_POSITION {
                get {
                    return ((int)(this[this.tableTBL_POSITION.ID_POSITIONColumn]));
                }
                set {
                    this[this.tableTBL_POSITION.ID_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_AREA {
                get {
                    return ((int)(this[this.tableTBL_POSITION.ID_AREAColumn]));
                }
                set {
                    this[this.tableTBL_POSITION.ID_AREAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_POSITION {
                get {
                    return ((string)(this[this.tableTBL_POSITION.NAME_POSITIONColumn]));
                }
                set {
                    this[this.tableTBL_POSITION.NAME_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool POSITION_STATE {
                get {
                    return ((bool)(this[this.tableTBL_POSITION.POSITION_STATEColumn]));
                }
                set {
                    this[this.tableTBL_POSITION.POSITION_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string POSITION_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_POSITION.POSITION_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_POSITION.POSITION_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string POSITION_UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableTBL_POSITION.POSITION_UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POSITION_UPDATEDBY\' in table \'TBL_POSITION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_POSITION.POSITION_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime POSITION_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_POSITION.POSITION_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_POSITION.POSITION_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime POSITION_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_POSITION.POSITION_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POSITION_UPDATEDATE\' in table \'TBL_POSITION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_POSITION.POSITION_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_AREARow TBL_AREARow {
                get {
                    return ((TBL_AREARow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_POSITION_TBL_AREA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_POSITION_TBL_AREA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPOSITION_UPDATEDBYNull() {
                return this.IsNull(this.tableTBL_POSITION.POSITION_UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPOSITION_UPDATEDBYNull() {
                this[this.tableTBL_POSITION.POSITION_UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPOSITION_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_POSITION.POSITION_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPOSITION_UPDATEDATENull() {
                this[this.tableTBL_POSITION.POSITION_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow[] GetTBL_USERRows() {
                if ((this.Table.ChildRelations["FK_TBL_USER_TBL_POSITION"] == null)) {
                    return new TBL_USERRow[0];
                }
                else {
                    return ((TBL_USERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_USER_TBL_POSITION"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_PREPAIDRow : global::System.Data.DataRow {
            
            private TBL_PREPAIDDataTable tableTBL_PREPAID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_PREPAIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_PREPAID = ((TBL_PREPAIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PREPAID {
                get {
                    return ((int)(this[this.tableTBL_PREPAID.ID_PREPAIDColumn]));
                }
                set {
                    this[this.tableTBL_PREPAID.ID_PREPAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ID_CUSTOMER {
                get {
                    return ((string)(this[this.tableTBL_PREPAID.ID_CUSTOMERColumn]));
                }
                set {
                    this[this.tableTBL_PREPAID.ID_CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PRODUCT {
                get {
                    return ((int)(this[this.tableTBL_PREPAID.ID_PRODUCTColumn]));
                }
                set {
                    this[this.tableTBL_PREPAID.ID_PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PREPAID_QUANTITY {
                get {
                    return ((int)(this[this.tableTBL_PREPAID.PREPAID_QUANTITYColumn]));
                }
                set {
                    this[this.tableTBL_PREPAID.PREPAID_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PREPAID_TOTAL {
                get {
                    return ((decimal)(this[this.tableTBL_PREPAID.PREPAID_TOTALColumn]));
                }
                set {
                    this[this.tableTBL_PREPAID.PREPAID_TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PREPAID_CASH {
                get {
                    return ((decimal)(this[this.tableTBL_PREPAID.PREPAID_CASHColumn]));
                }
                set {
                    this[this.tableTBL_PREPAID.PREPAID_CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PREPAID_CHANGE {
                get {
                    return ((decimal)(this[this.tableTBL_PREPAID.PREPAID_CHANGEColumn]));
                }
                set {
                    this[this.tableTBL_PREPAID.PREPAID_CHANGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PREPAID_BALANCE {
                get {
                    return ((int)(this[this.tableTBL_PREPAID.PREPAID_BALANCEColumn]));
                }
                set {
                    this[this.tableTBL_PREPAID.PREPAID_BALANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PREPAID_STATE {
                get {
                    return ((bool)(this[this.tableTBL_PREPAID.PREPAID_STATEColumn]));
                }
                set {
                    this[this.tableTBL_PREPAID.PREPAID_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PREPAID_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_PREPAID.PREPAID_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_PREPAID.PREPAID_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PREPAID_UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableTBL_PREPAID.PREPAID_UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREPAID_UPDATEDBY\' in table \'TBL_PREPAID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_PREPAID.PREPAID_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PREPAID_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_PREPAID.PREPAID_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_PREPAID.PREPAID_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PREPAID_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_PREPAID.PREPAID_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREPAID_UPDATEDATE\' in table \'TBL_PREPAID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_PREPAID.PREPAID_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CUSTOMERRow TBL_CUSTOMERRow {
                get {
                    return ((TBL_CUSTOMERRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_PREPAID_TBL_CUSTOMER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_PREPAID_TBL_CUSTOMER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PRODUCTRow TBL_PRODUCTRow {
                get {
                    return ((TBL_PRODUCTRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_PREPAID_TBL_PRODUCT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_PREPAID_TBL_PRODUCT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow TBL_USERRow {
                get {
                    return ((TBL_USERRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_PREPAID_TBL_USER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_PREPAID_TBL_USER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPREPAID_UPDATEDBYNull() {
                return this.IsNull(this.tableTBL_PREPAID.PREPAID_UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPREPAID_UPDATEDBYNull() {
                this[this.tableTBL_PREPAID.PREPAID_UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPREPAID_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_PREPAID.PREPAID_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPREPAID_UPDATEDATENull() {
                this[this.tableTBL_PREPAID.PREPAID_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ORDERRow[] GetTBL_ORDERRows() {
                if ((this.Table.ChildRelations["FK_TBL_ORDER_TBL_PREPAID"] == null)) {
                    return new TBL_ORDERRow[0];
                }
                else {
                    return ((TBL_ORDERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_ORDER_TBL_PREPAID"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_PRODUCTRow : global::System.Data.DataRow {
            
            private TBL_PRODUCTDataTable tableTBL_PRODUCT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_PRODUCTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_PRODUCT = ((TBL_PRODUCTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PRODUCT {
                get {
                    return ((int)(this[this.tableTBL_PRODUCT.ID_PRODUCTColumn]));
                }
                set {
                    this[this.tableTBL_PRODUCT.ID_PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_PRODUCT {
                get {
                    return ((decimal)(this[this.tableTBL_PRODUCT.TOTAL_PRODUCTColumn]));
                }
                set {
                    this[this.tableTBL_PRODUCT.TOTAL_PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DESCRIP_PRICE {
                get {
                    return ((string)(this[this.tableTBL_PRODUCT.DESCRIP_PRICEColumn]));
                }
                set {
                    this[this.tableTBL_PRODUCT.DESCRIP_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PRODUCT_STATE {
                get {
                    return ((bool)(this[this.tableTBL_PRODUCT.PRODUCT_STATEColumn]));
                }
                set {
                    this[this.tableTBL_PRODUCT.PRODUCT_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCT_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_PRODUCT.PRODUCT_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_PRODUCT.PRODUCT_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRODUCT_UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableTBL_PRODUCT.PRODUCT_UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_UPDATEDBY\' in table \'TBL_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_PRODUCT.PRODUCT_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PRODUCT_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_PRODUCT.PRODUCT_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_PRODUCT.PRODUCT_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PRODUCT_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_PRODUCT.PRODUCT_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_UPDATEDATE\' in table \'TBL_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_PRODUCT.PRODUCT_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow TBL_USERRow {
                get {
                    return ((TBL_USERRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_PRODUCT_TBL_USER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_PRODUCT_TBL_USER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCT_UPDATEDBYNull() {
                return this.IsNull(this.tableTBL_PRODUCT.PRODUCT_UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCT_UPDATEDBYNull() {
                this[this.tableTBL_PRODUCT.PRODUCT_UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCT_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_PRODUCT.PRODUCT_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCT_UPDATEDATENull() {
                this[this.tableTBL_PRODUCT.PRODUCT_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PREPAIDRow[] GetTBL_PREPAIDRows() {
                if ((this.Table.ChildRelations["FK_TBL_PREPAID_TBL_PRODUCT"] == null)) {
                    return new TBL_PREPAIDRow[0];
                }
                else {
                    return ((TBL_PREPAIDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_PREPAID_TBL_PRODUCT"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_RECEIPTRow[] GetTBL_RECEIPTRows() {
                if ((this.Table.ChildRelations["FK_TBL_RECEIPT_TBL_PRICE_TAG"] == null)) {
                    return new TBL_RECEIPTRow[0];
                }
                else {
                    return ((TBL_RECEIPTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_RECEIPT_TBL_PRICE_TAG"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_STOCKRow[] GetTBL_STOCKRows() {
                if ((this.Table.ChildRelations["FK_TBL_STOCK_TBL_PRODUCT"] == null)) {
                    return new TBL_STOCKRow[0];
                }
                else {
                    return ((TBL_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_STOCK_TBL_PRODUCT"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_RECEIPTRow : global::System.Data.DataRow {
            
            private TBL_RECEIPTDataTable tableTBL_RECEIPT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_RECEIPTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_RECEIPT = ((TBL_RECEIPTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_RECEIPT {
                get {
                    return ((int)(this[this.tableTBL_RECEIPT.ID_RECEIPTColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.ID_RECEIPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_CUSTOMER {
                get {
                    return ((string)(this[this.tableTBL_RECEIPT.NAME_CUSTOMERColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.NAME_CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE_RECEIPT {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_RECEIPT.DATE_RECEIPTColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.DATE_RECEIPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int QUANTITY {
                get {
                    return ((int)(this[this.tableTBL_RECEIPT.QUANTITYColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_RECEIPT {
                get {
                    return ((decimal)(this[this.tableTBL_RECEIPT.TOTAL_RECEIPTColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.TOTAL_RECEIPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PRODUCT {
                get {
                    return ((int)(this[this.tableTBL_RECEIPT.ID_PRODUCTColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.ID_PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_STOCK {
                get {
                    try {
                        return ((int)(this[this.tableTBL_RECEIPT.ID_STOCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_STOCK\' in table \'TBL_RECEIPT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_RECEIPT.ID_STOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal UNIT_PRICE {
                get {
                    return ((decimal)(this[this.tableTBL_RECEIPT.UNIT_PRICEColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.UNIT_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CASH {
                get {
                    return ((decimal)(this[this.tableTBL_RECEIPT.CASHColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CHANGE {
                get {
                    return ((decimal)(this[this.tableTBL_RECEIPT.CHANGEColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.CHANGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool RECEIPT_STATE {
                get {
                    return ((bool)(this[this.tableTBL_RECEIPT.RECEIPT_STATEColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.RECEIPT_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RECEIPT_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_RECEIPT.RECEIPT_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.RECEIPT_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RECEIPT_UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableTBL_RECEIPT.RECEIPT_UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEIPT_UPDATEDBY\' in table \'TBL_RECEIPT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_RECEIPT.RECEIPT_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RECEIPT_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_RECEIPT.RECEIPT_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_RECEIPT.RECEIPT_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RECEIPT_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_RECEIPT.RECEIPT_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEIPT_UPDATEDATE\' in table \'TBL_RECEIPT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_RECEIPT.RECEIPT_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PRODUCTRow TBL_PRODUCTRow {
                get {
                    return ((TBL_PRODUCTRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_RECEIPT_TBL_PRICE_TAG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_RECEIPT_TBL_PRICE_TAG"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_STOCKRow TBL_STOCKRow {
                get {
                    return ((TBL_STOCKRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_RECEIPT_TBL_STOCK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_RECEIPT_TBL_STOCK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow TBL_USERRow {
                get {
                    return ((TBL_USERRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_RECEIPT_TBL_USER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_RECEIPT_TBL_USER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsID_STOCKNull() {
                return this.IsNull(this.tableTBL_RECEIPT.ID_STOCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetID_STOCKNull() {
                this[this.tableTBL_RECEIPT.ID_STOCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRECEIPT_UPDATEDBYNull() {
                return this.IsNull(this.tableTBL_RECEIPT.RECEIPT_UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRECEIPT_UPDATEDBYNull() {
                this[this.tableTBL_RECEIPT.RECEIPT_UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRECEIPT_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_RECEIPT.RECEIPT_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRECEIPT_UPDATEDATENull() {
                this[this.tableTBL_RECEIPT.RECEIPT_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_ROLERow : global::System.Data.DataRow {
            
            private TBL_ROLEDataTable tableTBL_ROLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_ROLERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_ROLE = ((TBL_ROLEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_ROLE {
                get {
                    return ((int)(this[this.tableTBL_ROLE.ID_ROLEColumn]));
                }
                set {
                    this[this.tableTBL_ROLE.ID_ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_ROLE {
                get {
                    return ((string)(this[this.tableTBL_ROLE.NAME_ROLEColumn]));
                }
                set {
                    this[this.tableTBL_ROLE.NAME_ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DESCRIP_ROLE {
                get {
                    return ((string)(this[this.tableTBL_ROLE.DESCRIP_ROLEColumn]));
                }
                set {
                    this[this.tableTBL_ROLE.DESCRIP_ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ROLE_STATE {
                get {
                    return ((bool)(this[this.tableTBL_ROLE.ROLE_STATEColumn]));
                }
                set {
                    this[this.tableTBL_ROLE.ROLE_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROLE_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_ROLE.ROLE_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_ROLE.ROLE_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROLE_UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableTBL_ROLE.ROLE_UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROLE_UPDATEDBY\' in table \'TBL_ROLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_ROLE.ROLE_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ROLE_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_ROLE.ROLE_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_ROLE.ROLE_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ROLE_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_ROLE.ROLE_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROLE_UPDATEDATE\' in table \'TBL_ROLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_ROLE.ROLE_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsROLE_UPDATEDBYNull() {
                return this.IsNull(this.tableTBL_ROLE.ROLE_UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetROLE_UPDATEDBYNull() {
                this[this.tableTBL_ROLE.ROLE_UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsROLE_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_ROLE.ROLE_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetROLE_UPDATEDATENull() {
                this[this.tableTBL_ROLE.ROLE_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLE_PERMISSIONRow[] GetTBL_ROLE_PERMISSIONRows() {
                if ((this.Table.ChildRelations["FK_TBL_ROLE_PERMISSION_TBL_ROLE"] == null)) {
                    return new TBL_ROLE_PERMISSIONRow[0];
                }
                else {
                    return ((TBL_ROLE_PERMISSIONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_ROLE_PERMISSION_TBL_ROLE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow[] GetTBL_USERRows() {
                if ((this.Table.ChildRelations["FK_TBL_USER_TBL_ROLE"] == null)) {
                    return new TBL_USERRow[0];
                }
                else {
                    return ((TBL_USERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_USER_TBL_ROLE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_ROLE_PERMISSIONRow : global::System.Data.DataRow {
            
            private TBL_ROLE_PERMISSIONDataTable tableTBL_ROLE_PERMISSION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_ROLE_PERMISSIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_ROLE_PERMISSION = ((TBL_ROLE_PERMISSIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_ROLE {
                get {
                    return ((int)(this[this.tableTBL_ROLE_PERMISSION.ID_ROLEColumn]));
                }
                set {
                    this[this.tableTBL_ROLE_PERMISSION.ID_ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PER {
                get {
                    return ((int)(this[this.tableTBL_ROLE_PERMISSION.ID_PERColumn]));
                }
                set {
                    this[this.tableTBL_ROLE_PERMISSION.ID_PERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ROLE_PER_STATE {
                get {
                    return ((bool)(this[this.tableTBL_ROLE_PERMISSION.ROLE_PER_STATEColumn]));
                }
                set {
                    this[this.tableTBL_ROLE_PERMISSION.ROLE_PER_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROLE_PER_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_ROLE_PERMISSION.ROLE_PER_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_ROLE_PERMISSION.ROLE_PER_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROLE_PER_UPDATEDBY {
                get {
                    return ((string)(this[this.tableTBL_ROLE_PERMISSION.ROLE_PER_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableTBL_ROLE_PERMISSION.ROLE_PER_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ROLE_PER_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_ROLE_PERMISSION.ROLE_PER_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_ROLE_PERMISSION.ROLE_PER_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ROLE_PER_UPDATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_ROLE_PERMISSION.ROLE_PER_UPDATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_ROLE_PERMISSION.ROLE_PER_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PERMISSIONRow TBL_PERMISSIONRow {
                get {
                    return ((TBL_PERMISSIONRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_ROLE_PERMISSION_TBL_PERMISSION"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_ROLE_PERMISSION_TBL_PERMISSION"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLERow TBL_ROLERow {
                get {
                    return ((TBL_ROLERow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_ROLE_PERMISSION_TBL_ROLE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_ROLE_PERMISSION_TBL_ROLE"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_SESSIONRow : global::System.Data.DataRow {
            
            private TBL_SESSIONDataTable tableTBL_SESSION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_SESSIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_SESSION = ((TBL_SESSIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_SESION {
                get {
                    return ((int)(this[this.tableTBL_SESSION.ID_SESIONColumn]));
                }
                set {
                    this[this.tableTBL_SESSION.ID_SESIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ID_USER {
                get {
                    return ((string)(this[this.tableTBL_SESSION.ID_USERColumn]));
                }
                set {
                    this[this.tableTBL_SESSION.ID_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE_SESSION {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_SESSION.DATE_SESSIONColumn]));
                }
                set {
                    this[this.tableTBL_SESSION.DATE_SESSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EDIT_SESSION {
                get {
                    return ((string)(this[this.tableTBL_SESSION.EDIT_SESSIONColumn]));
                }
                set {
                    this[this.tableTBL_SESSION.EDIT_SESSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SESSION_STATE {
                get {
                    return ((bool)(this[this.tableTBL_SESSION.SESSION_STATEColumn]));
                }
                set {
                    this[this.tableTBL_SESSION.SESSION_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SESSION_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_SESSION.SESSION_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_SESSION.SESSION_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SESSION_UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableTBL_SESSION.SESSION_UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SESSION_UPDATEDBY\' in table \'TBL_SESSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_SESSION.SESSION_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SESSION_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_SESSION.SESSION_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_SESSION.SESSION_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow TBL_USERRow {
                get {
                    return ((TBL_USERRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_SESSION_TBL_USER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_SESSION_TBL_USER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSESSION_UPDATEDBYNull() {
                return this.IsNull(this.tableTBL_SESSION.SESSION_UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSESSION_UPDATEDBYNull() {
                this[this.tableTBL_SESSION.SESSION_UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_STOCKRow : global::System.Data.DataRow {
            
            private TBL_STOCKDataTable tableTBL_STOCK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_STOCKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_STOCK = ((TBL_STOCKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_STOCK {
                get {
                    return ((int)(this[this.tableTBL_STOCK.ID_STOCKColumn]));
                }
                set {
                    this[this.tableTBL_STOCK.ID_STOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PRODUCT {
                get {
                    return ((int)(this[this.tableTBL_STOCK.ID_PRODUCTColumn]));
                }
                set {
                    this[this.tableTBL_STOCK.ID_PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int STOCK_INITIAL_QUANTITY {
                get {
                    return ((int)(this[this.tableTBL_STOCK.STOCK_INITIAL_QUANTITYColumn]));
                }
                set {
                    this[this.tableTBL_STOCK.STOCK_INITIAL_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int STOCK_QUANTITY {
                get {
                    return ((int)(this[this.tableTBL_STOCK.STOCK_QUANTITYColumn]));
                }
                set {
                    this[this.tableTBL_STOCK.STOCK_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int STOCK_ADJUSTMENT {
                get {
                    try {
                        return ((int)(this[this.tableTBL_STOCK.STOCK_ADJUSTMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK_ADJUSTMENT\' in table \'TBL_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_STOCK.STOCK_ADJUSTMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime STOCK_DATE_PRODUCT {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_STOCK.STOCK_DATE_PRODUCTColumn]));
                }
                set {
                    this[this.tableTBL_STOCK.STOCK_DATE_PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool STOCK_COUNTER {
                get {
                    try {
                        return ((bool)(this[this.tableTBL_STOCK.STOCK_COUNTERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK_COUNTER\' in table \'TBL_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_STOCK.STOCK_COUNTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool STOCK_STATE {
                get {
                    return ((bool)(this[this.tableTBL_STOCK.STOCK_STATEColumn]));
                }
                set {
                    this[this.tableTBL_STOCK.STOCK_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STOCK_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_STOCK.STOCK_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_STOCK.STOCK_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STOCK_UPDATEDBY {
                get {
                    return ((string)(this[this.tableTBL_STOCK.STOCK_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableTBL_STOCK.STOCK_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime STOCK_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_STOCK.STOCK_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_STOCK.STOCK_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime STOCK_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_STOCK.STOCK_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK_UPDATEDATE\' in table \'TBL_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_STOCK.STOCK_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PRODUCTRow TBL_PRODUCTRow {
                get {
                    return ((TBL_PRODUCTRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_STOCK_TBL_PRODUCT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_STOCK_TBL_PRODUCT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow TBL_USERRow {
                get {
                    return ((TBL_USERRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_STOCK_TBL_USER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_STOCK_TBL_USER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTOCK_ADJUSTMENTNull() {
                return this.IsNull(this.tableTBL_STOCK.STOCK_ADJUSTMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTOCK_ADJUSTMENTNull() {
                this[this.tableTBL_STOCK.STOCK_ADJUSTMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTOCK_COUNTERNull() {
                return this.IsNull(this.tableTBL_STOCK.STOCK_COUNTERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTOCK_COUNTERNull() {
                this[this.tableTBL_STOCK.STOCK_COUNTERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTOCK_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_STOCK.STOCK_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTOCK_UPDATEDATENull() {
                this[this.tableTBL_STOCK.STOCK_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CXCRow[] GetTBL_CXCRows() {
                if ((this.Table.ChildRelations["FK_TBL_CXC_TBL_STOCK"] == null)) {
                    return new TBL_CXCRow[0];
                }
                else {
                    return ((TBL_CXCRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_CXC_TBL_STOCK"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_RECEIPTRow[] GetTBL_RECEIPTRows() {
                if ((this.Table.ChildRelations["FK_TBL_RECEIPT_TBL_STOCK"] == null)) {
                    return new TBL_RECEIPTRow[0];
                }
                else {
                    return ((TBL_RECEIPTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_RECEIPT_TBL_STOCK"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_USERRow : global::System.Data.DataRow {
            
            private TBL_USERDataTable tableTBL_USER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBL_USERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_USER = ((TBL_USERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ID_USER {
                get {
                    return ((string)(this[this.tableTBL_USER.ID_USERColumn]));
                }
                set {
                    this[this.tableTBL_USER.ID_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_NAME {
                get {
                    return ((string)(this[this.tableTBL_USER.USER_NAMEColumn]));
                }
                set {
                    this[this.tableTBL_USER.USER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_EMAIL {
                get {
                    return ((string)(this[this.tableTBL_USER.USER_EMAILColumn]));
                }
                set {
                    this[this.tableTBL_USER.USER_EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_DPT {
                get {
                    return ((int)(this[this.tableTBL_USER.ID_DPTColumn]));
                }
                set {
                    this[this.tableTBL_USER.ID_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_AREA {
                get {
                    return ((int)(this[this.tableTBL_USER.ID_AREAColumn]));
                }
                set {
                    this[this.tableTBL_USER.ID_AREAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_POSITION {
                get {
                    return ((int)(this[this.tableTBL_USER.ID_POSITIONColumn]));
                }
                set {
                    this[this.tableTBL_USER.ID_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_ROLE {
                get {
                    return ((int)(this[this.tableTBL_USER.ID_ROLEColumn]));
                }
                set {
                    this[this.tableTBL_USER.ID_ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_NICKNAME {
                get {
                    return ((string)(this[this.tableTBL_USER.USER_NICKNAMEColumn]));
                }
                set {
                    this[this.tableTBL_USER.USER_NICKNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_PASSWORD {
                get {
                    return ((string)(this[this.tableTBL_USER.USER_PASSWORDColumn]));
                }
                set {
                    this[this.tableTBL_USER.USER_PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool USER_STATE {
                get {
                    return ((bool)(this[this.tableTBL_USER.USER_STATEColumn]));
                }
                set {
                    this[this.tableTBL_USER.USER_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_CREATEBY {
                get {
                    return ((string)(this[this.tableTBL_USER.USER_CREATEBYColumn]));
                }
                set {
                    this[this.tableTBL_USER.USER_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableTBL_USER.USER_UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USER_UPDATEDBY\' in table \'TBL_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_USER.USER_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime USER_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTBL_USER.USER_CREATEDATEColumn]));
                }
                set {
                    this[this.tableTBL_USER.USER_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime USER_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBL_USER.USER_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USER_UPDATEDATE\' in table \'TBL_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_USER.USER_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_AREARow TBL_AREARow {
                get {
                    return ((TBL_AREARow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_USER_TBL_AREA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_USER_TBL_AREA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_DPTRow TBL_DPTRow {
                get {
                    return ((TBL_DPTRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_USER_TBL_DPT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_USER_TBL_DPT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_POSITIONRow TBL_POSITIONRow {
                get {
                    return ((TBL_POSITIONRow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_USER_TBL_POSITION"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_USER_TBL_POSITION"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLERow TBL_ROLERow {
                get {
                    return ((TBL_ROLERow)(this.GetParentRow(this.Table.ParentRelations["FK_TBL_USER_TBL_ROLE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TBL_USER_TBL_ROLE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUSER_UPDATEDBYNull() {
                return this.IsNull(this.tableTBL_USER.USER_UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUSER_UPDATEDBYNull() {
                this[this.tableTBL_USER.USER_UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUSER_UPDATEDATENull() {
                return this.IsNull(this.tableTBL_USER.USER_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUSER_UPDATEDATENull() {
                this[this.tableTBL_USER.USER_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CUSTOMERRow[] GetTBL_CUSTOMERRows() {
                if ((this.Table.ChildRelations["FK_TBL_CUSTOMER_TBL_USER"] == null)) {
                    return new TBL_CUSTOMERRow[0];
                }
                else {
                    return ((TBL_CUSTOMERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_CUSTOMER_TBL_USER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CXCRow[] GetTBL_CXCRows() {
                if ((this.Table.ChildRelations["FK_TBL_CXC_TBL_USER1"] == null)) {
                    return new TBL_CXCRow[0];
                }
                else {
                    return ((TBL_CXCRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_CXC_TBL_USER1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ORDERRow[] GetTBL_ORDERRows() {
                if ((this.Table.ChildRelations["FK_TBL_ORDER_TBL_USER"] == null)) {
                    return new TBL_ORDERRow[0];
                }
                else {
                    return ((TBL_ORDERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_ORDER_TBL_USER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PREPAIDRow[] GetTBL_PREPAIDRows() {
                if ((this.Table.ChildRelations["FK_TBL_PREPAID_TBL_USER"] == null)) {
                    return new TBL_PREPAIDRow[0];
                }
                else {
                    return ((TBL_PREPAIDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_PREPAID_TBL_USER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PRODUCTRow[] GetTBL_PRODUCTRows() {
                if ((this.Table.ChildRelations["FK_TBL_PRODUCT_TBL_USER"] == null)) {
                    return new TBL_PRODUCTRow[0];
                }
                else {
                    return ((TBL_PRODUCTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_PRODUCT_TBL_USER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_RECEIPTRow[] GetTBL_RECEIPTRows() {
                if ((this.Table.ChildRelations["FK_TBL_RECEIPT_TBL_USER"] == null)) {
                    return new TBL_RECEIPTRow[0];
                }
                else {
                    return ((TBL_RECEIPTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_RECEIPT_TBL_USER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SESSIONRow[] GetTBL_SESSIONRows() {
                if ((this.Table.ChildRelations["FK_TBL_SESSION_TBL_USER"] == null)) {
                    return new TBL_SESSIONRow[0];
                }
                else {
                    return ((TBL_SESSIONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_SESSION_TBL_USER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_STOCKRow[] GetTBL_STOCKRows() {
                if ((this.Table.ChildRelations["FK_TBL_STOCK_TBL_USER"] == null)) {
                    return new TBL_STOCKRow[0];
                }
                else {
                    return ((TBL_STOCKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TBL_STOCK_TBL_USER"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_AREARow : global::System.Data.DataRow {
            
            private SP_CRUD_AREADataTable tableSP_CRUD_AREA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_AREARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_AREA = ((SP_CRUD_AREADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_AREA {
                get {
                    return ((int)(this[this.tableSP_CRUD_AREA.ID_AREAColumn]));
                }
                set {
                    this[this.tableSP_CRUD_AREA.ID_AREAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_DPT {
                get {
                    return ((string)(this[this.tableSP_CRUD_AREA.NAME_DPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_AREA.NAME_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AREA_NAME {
                get {
                    return ((string)(this[this.tableSP_CRUD_AREA.AREA_NAMEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_AREA.AREA_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AREA_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_AREA.AREA_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_AREA.AREA_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AREA_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_AREA.AREA_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_AREA.AREA_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AREA_UPDATEDBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_AREA.AREA_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_AREA.AREA_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime AREA_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_AREA.AREA_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_AREA.AREA_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime AREA_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_AREA.AREA_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AREA_UPDATEDATE\' in table \'SP_CRUD_AREA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_AREA.AREA_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAREA_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_AREA.AREA_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAREA_UPDATEDATENull() {
                this[this.tableSP_CRUD_AREA.AREA_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_CUSTOMERRow : global::System.Data.DataRow {
            
            private SP_CRUD_CUSTOMERDataTable tableSP_CRUD_CUSTOMER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_CUSTOMERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_CUSTOMER = ((SP_CRUD_CUSTOMERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ID_CUSTOMER {
                get {
                    return ((string)(this[this.tableSP_CRUD_CUSTOMER.ID_CUSTOMERColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CUSTOMER.ID_CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER_NAME {
                get {
                    return ((string)(this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_NAMEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CUSTOMER_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER_UPDATEDBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CUSTOMER_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CUSTOMER_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER_UPDATEDATE\' in table \'SP_CRUD_CUSTOMER\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCUSTOMER_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_CUSTOMER.CUSTOMER_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCUSTOMER_UPDATEDATENull() {
                this[this.tableSP_CRUD_CUSTOMER.CUSTOMER_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_CXCRow : global::System.Data.DataRow {
            
            private SP_CRUD_CXCDataTable tableSP_CRUD_CXC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_CXCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_CXC = ((SP_CRUD_CXCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_CXC {
                get {
                    return ((int)(this[this.tableSP_CRUD_CXC.ID_CXCColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CXC.ID_CXCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_NAME {
                get {
                    return ((string)(this[this.tableSP_CRUD_CXC.USER_NAMEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CXC.USER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE_CXC {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_CXC.DATE_CXCColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CXC.DATE_CXCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int QUANTITY_RETREAT {
                get {
                    try {
                        return ((int)(this[this.tableSP_CRUD_CXC.QUANTITY_RETREATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANTITY_RETREAT\' in table \'SP_CRUD_CXC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_CXC.QUANTITY_RETREATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int QUANTITY_RETURN {
                get {
                    try {
                        return ((int)(this[this.tableSP_CRUD_CXC.QUANTITY_RETURNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANTITY_RETURN\' in table \'SP_CRUD_CXC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_CXC.QUANTITY_RETURNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_CXC {
                get {
                    return ((decimal)(this[this.tableSP_CRUD_CXC.TOTAL_CXCColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CXC.TOTAL_CXCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BALANCE_CXC {
                get {
                    return ((int)(this[this.tableSP_CRUD_CXC.BALANCE_CXCColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CXC.BALANCE_CXCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CXC_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_CXC.CXC_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CXC.CXC_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CXC_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_CXC.CXC_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CXC.CXC_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CXC_UPDATEDBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_CXC.CXC_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CXC.CXC_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CXC_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_CXC.CXC_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_CXC.CXC_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CXC_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_CXC.CXC_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CXC_UPDATEDATE\' in table \'SP_CRUD_CXC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_CXC.CXC_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQUANTITY_RETREATNull() {
                return this.IsNull(this.tableSP_CRUD_CXC.QUANTITY_RETREATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQUANTITY_RETREATNull() {
                this[this.tableSP_CRUD_CXC.QUANTITY_RETREATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQUANTITY_RETURNNull() {
                return this.IsNull(this.tableSP_CRUD_CXC.QUANTITY_RETURNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQUANTITY_RETURNNull() {
                this[this.tableSP_CRUD_CXC.QUANTITY_RETURNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCXC_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_CXC.CXC_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCXC_UPDATEDATENull() {
                this[this.tableSP_CRUD_CXC.CXC_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_DPTRow : global::System.Data.DataRow {
            
            private SP_CRUD_DPTDataTable tableSP_CRUD_DPT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_DPTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_DPT = ((SP_CRUD_DPTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_DPT {
                get {
                    return ((int)(this[this.tableSP_CRUD_DPT.ID_DPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_DPT.ID_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_DPT {
                get {
                    return ((string)(this[this.tableSP_CRUD_DPT.NAME_DPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_DPT.NAME_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool STATE_DPT {
                get {
                    return ((bool)(this[this.tableSP_CRUD_DPT.STATE_DPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_DPT.STATE_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CREATEBY_DPT {
                get {
                    return ((string)(this[this.tableSP_CRUD_DPT.CREATEBY_DPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_DPT.CREATEBY_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UPDATEBY_DPT {
                get {
                    return ((string)(this[this.tableSP_CRUD_DPT.UPDATEBY_DPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_DPT.UPDATEBY_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CREATEDATE_DPT {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_DPT.CREATEDATE_DPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_DPT.CREATEDATE_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime UPDATEDATE_DPT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_DPT.UPDATEDATE_DPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATEDATE_DPT\' in table \'SP_CRUD_DPT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_DPT.UPDATEDATE_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUPDATEDATE_DPTNull() {
                return this.IsNull(this.tableSP_CRUD_DPT.UPDATEDATE_DPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUPDATEDATE_DPTNull() {
                this[this.tableSP_CRUD_DPT.UPDATEDATE_DPTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_ORDERRow : global::System.Data.DataRow {
            
            private SP_CRUD_ORDERDataTable tableSP_CRUD_ORDER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_ORDERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_ORDER = ((SP_CRUD_ORDERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_ORDER {
                get {
                    return ((int)(this[this.tableSP_CRUD_ORDER.ID_ORDERColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ORDER.ID_ORDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PREPAID {
                get {
                    return ((int)(this[this.tableSP_CRUD_ORDER.ID_PREPAIDColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ORDER.ID_PREPAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ORDER_QUANTITY {
                get {
                    return ((int)(this[this.tableSP_CRUD_ORDER.ORDER_QUANTITYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ORDER.ORDER_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ORDER_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_ORDER.ORDER_DATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ORDER.ORDER_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ORDER_DELIVERY {
                get {
                    return ((bool)(this[this.tableSP_CRUD_ORDER.ORDER_DELIVERYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ORDER.ORDER_DELIVERYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ORDER_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_ORDER.ORDER_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ORDER.ORDER_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ORDER_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_ORDER.ORDER_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ORDER.ORDER_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ORDER_UPDATEDBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_ORDER.ORDER_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ORDER.ORDER_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ORDER_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_ORDER.ORDER_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ORDER.ORDER_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ORDER_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_ORDER.ORDER_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDER_UPDATEDATE\' in table \'SP_CRUD_ORDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_ORDER.ORDER_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsORDER_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_ORDER.ORDER_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetORDER_UPDATEDATENull() {
                this[this.tableSP_CRUD_ORDER.ORDER_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_PERRow : global::System.Data.DataRow {
            
            private SP_CRUD_PERDataTable tableSP_CRUD_PER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_PERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_PER = ((SP_CRUD_PERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PER {
                get {
                    return ((int)(this[this.tableSP_CRUD_PER.ID_PERColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PER.ID_PERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_DPT {
                get {
                    return ((string)(this[this.tableSP_CRUD_PER.NAME_DPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PER.NAME_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_PERMISSION {
                get {
                    try {
                        return ((string)(this[this.tableSP_CRUD_PER.NAME_PERMISSIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME_PERMISSION\' in table \'SP_CRUD_PER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_PER.NAME_PERMISSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DESCRIP_PERMISSION {
                get {
                    try {
                        return ((string)(this[this.tableSP_CRUD_PER.DESCRIP_PERMISSIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIP_PERMISSION\' in table \'SP_CRUD_PER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_PER.DESCRIP_PERMISSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PER_STATE {
                get {
                    try {
                        return ((bool)(this[this.tableSP_CRUD_PER.PER_STATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PER_STATE\' in table \'SP_CRUD_PER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_PER.PER_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PER_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_PER.PER_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PER.PER_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PER_UPDATEDBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_PER.PER_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PER.PER_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PER_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_PER.PER_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PER.PER_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PER_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_PER.PER_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PER_UPDATEDATE\' in table \'SP_CRUD_PER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_PER.PER_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNAME_PERMISSIONNull() {
                return this.IsNull(this.tableSP_CRUD_PER.NAME_PERMISSIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNAME_PERMISSIONNull() {
                this[this.tableSP_CRUD_PER.NAME_PERMISSIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDESCRIP_PERMISSIONNull() {
                return this.IsNull(this.tableSP_CRUD_PER.DESCRIP_PERMISSIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDESCRIP_PERMISSIONNull() {
                this[this.tableSP_CRUD_PER.DESCRIP_PERMISSIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPER_STATENull() {
                return this.IsNull(this.tableSP_CRUD_PER.PER_STATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPER_STATENull() {
                this[this.tableSP_CRUD_PER.PER_STATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPER_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_PER.PER_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPER_UPDATEDATENull() {
                this[this.tableSP_CRUD_PER.PER_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_POSITIONRow : global::System.Data.DataRow {
            
            private SP_CRUD_POSITIONDataTable tableSP_CRUD_POSITION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_POSITIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_POSITION = ((SP_CRUD_POSITIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_POSITION {
                get {
                    return ((int)(this[this.tableSP_CRUD_POSITION.ID_POSITIONColumn]));
                }
                set {
                    this[this.tableSP_CRUD_POSITION.ID_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AREA_NAME {
                get {
                    return ((string)(this[this.tableSP_CRUD_POSITION.AREA_NAMEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_POSITION.AREA_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_POSITION {
                get {
                    return ((string)(this[this.tableSP_CRUD_POSITION.NAME_POSITIONColumn]));
                }
                set {
                    this[this.tableSP_CRUD_POSITION.NAME_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool POSITION_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_POSITION.POSITION_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_POSITION.POSITION_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CREATEBY_PST {
                get {
                    return ((string)(this[this.tableSP_CRUD_POSITION.CREATEBY_PSTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_POSITION.CREATEBY_PSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UPDATEBY_PST {
                get {
                    return ((string)(this[this.tableSP_CRUD_POSITION.UPDATEBY_PSTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_POSITION.UPDATEBY_PSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime POSITION_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_POSITION.POSITION_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_POSITION.POSITION_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime POSITION_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_POSITION.POSITION_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POSITION_UPDATEDATE\' in table \'SP_CRUD_POSITION\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_POSITION.POSITION_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPOSITION_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_POSITION.POSITION_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPOSITION_UPDATEDATENull() {
                this[this.tableSP_CRUD_POSITION.POSITION_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_PREPAIDRow : global::System.Data.DataRow {
            
            private SP_CRUD_PREPAIDDataTable tableSP_CRUD_PREPAID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_PREPAIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_PREPAID = ((SP_CRUD_PREPAIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PREPAID {
                get {
                    return ((int)(this[this.tableSP_CRUD_PREPAID.ID_PREPAIDColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.ID_PREPAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CUSTOMER_NAME {
                get {
                    return ((string)(this[this.tableSP_CRUD_PREPAID.CUSTOMER_NAMEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.CUSTOMER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DESCRIP_PRICE {
                get {
                    return ((string)(this[this.tableSP_CRUD_PREPAID.DESCRIP_PRICEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.DESCRIP_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PREPAID_QUANTITY {
                get {
                    return ((int)(this[this.tableSP_CRUD_PREPAID.PREPAID_QUANTITYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.PREPAID_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PREPAID_TOTAL {
                get {
                    return ((decimal)(this[this.tableSP_CRUD_PREPAID.PREPAID_TOTALColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.PREPAID_TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PREPAID_CASH {
                get {
                    return ((decimal)(this[this.tableSP_CRUD_PREPAID.PREPAID_CASHColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.PREPAID_CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PREPAID_CHANGE {
                get {
                    return ((decimal)(this[this.tableSP_CRUD_PREPAID.PREPAID_CHANGEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.PREPAID_CHANGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PREPAID_BALANCE {
                get {
                    return ((int)(this[this.tableSP_CRUD_PREPAID.PREPAID_BALANCEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.PREPAID_BALANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PREPAID_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_PREPAID.PREPAID_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.PREPAID_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PREPAID_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_PREPAID.PREPAID_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.PREPAID_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PREPAID_UPDATEDBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_PREPAID.PREPAID_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.PREPAID_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PREPAID_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_PREPAID.PREPAID_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.PREPAID_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PREPAID_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_PREPAID.PREPAID_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREPAID_UPDATEDATE\' in table \'SP_CRUD_PREPAID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_PREPAID.PREPAID_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPREPAID_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_PREPAID.PREPAID_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPREPAID_UPDATEDATENull() {
                this[this.tableSP_CRUD_PREPAID.PREPAID_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_PRODUCTRow : global::System.Data.DataRow {
            
            private SP_CRUD_PRODUCTDataTable tableSP_CRUD_PRODUCT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_PRODUCTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_PRODUCT = ((SP_CRUD_PRODUCTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_PRODUCT {
                get {
                    return ((int)(this[this.tableSP_CRUD_PRODUCT.ID_PRODUCTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PRODUCT.ID_PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_PRODUCT {
                get {
                    return ((decimal)(this[this.tableSP_CRUD_PRODUCT.TOTAL_PRODUCTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PRODUCT.TOTAL_PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DESCRIP_PRICE {
                get {
                    return ((string)(this[this.tableSP_CRUD_PRODUCT.DESCRIP_PRICEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PRODUCT.DESCRIP_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PRODUCT_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_PRODUCT.PRODUCT_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PRODUCT.PRODUCT_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRICE_TAG_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_PRODUCT.PRICE_TAG_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PRODUCT.PRICE_TAG_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PRICE_TAG_UPDATEDBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_PRODUCT.PRICE_TAG_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PRODUCT.PRICE_TAG_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PRODUCT_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_PRODUCT.PRODUCT_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_PRODUCT.PRODUCT_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PRODUCT_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_PRODUCT.PRODUCT_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_UPDATEDATE\' in table \'SP_CRUD_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_PRODUCT.PRODUCT_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPRODUCT_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_PRODUCT.PRODUCT_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPRODUCT_UPDATEDATENull() {
                this[this.tableSP_CRUD_PRODUCT.PRODUCT_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_RECEIPTRow : global::System.Data.DataRow {
            
            private SP_CRUD_RECEIPTDataTable tableSP_CRUD_RECEIPT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_RECEIPTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_RECEIPT = ((SP_CRUD_RECEIPTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_RECEIPT {
                get {
                    return ((int)(this[this.tableSP_CRUD_RECEIPT.ID_RECEIPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.ID_RECEIPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_CUSTOMER {
                get {
                    return ((string)(this[this.tableSP_CRUD_RECEIPT.NAME_CUSTOMERColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.NAME_CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE_RECEIPT {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_RECEIPT.DATE_RECEIPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.DATE_RECEIPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int QUANTITY {
                get {
                    return ((int)(this[this.tableSP_CRUD_RECEIPT.QUANTITYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_RECEIPT {
                get {
                    return ((decimal)(this[this.tableSP_CRUD_RECEIPT.TOTAL_RECEIPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.TOTAL_RECEIPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DESCRIP_PRICE {
                get {
                    return ((string)(this[this.tableSP_CRUD_RECEIPT.DESCRIP_PRICEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.DESCRIP_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal UNIT_PRICE {
                get {
                    return ((decimal)(this[this.tableSP_CRUD_RECEIPT.UNIT_PRICEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.UNIT_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CASH {
                get {
                    return ((decimal)(this[this.tableSP_CRUD_RECEIPT.CASHColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CHANGE {
                get {
                    return ((decimal)(this[this.tableSP_CRUD_RECEIPT.CHANGEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.CHANGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool RECEIPT_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_RECEIPT.RECEIPT_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.RECEIPT_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RECEIPT_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_RECEIPT.RECEIPT_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.RECEIPT_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RECEIPT_UPDATEDBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_RECEIPT.RECEIPT_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.RECEIPT_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RECEIPT_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_RECEIPT.RECEIPT_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.RECEIPT_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RECEIPT_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_RECEIPT.RECEIPT_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECEIPT_UPDATEDATE\' in table \'SP_CRUD_RECEIPT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_RECEIPT.RECEIPT_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRECEIPT_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_RECEIPT.RECEIPT_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRECEIPT_UPDATEDATENull() {
                this[this.tableSP_CRUD_RECEIPT.RECEIPT_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_ROLERow : global::System.Data.DataRow {
            
            private SP_CRUD_ROLEDataTable tableSP_CRUD_ROLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_ROLERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_ROLE = ((SP_CRUD_ROLEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_ROLE {
                get {
                    return ((int)(this[this.tableSP_CRUD_ROLE.ID_ROLEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE.ID_ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_ROLE {
                get {
                    return ((string)(this[this.tableSP_CRUD_ROLE.NAME_ROLEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE.NAME_ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DESCRIP_ROLE {
                get {
                    return ((string)(this[this.tableSP_CRUD_ROLE.DESCRIP_ROLEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE.DESCRIP_ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ROLE_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_ROLE.ROLE_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE.ROLE_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROLE_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_ROLE.ROLE_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE.ROLE_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROLE_UPDATEDBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_ROLE.ROLE_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE.ROLE_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ROLE_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_ROLE.ROLE_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE.ROLE_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ROLE_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_ROLE.ROLE_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROLE_UPDATEDATE\' in table \'SP_CRUD_ROLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_ROLE.ROLE_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsROLE_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_ROLE.ROLE_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetROLE_UPDATEDATENull() {
                this[this.tableSP_CRUD_ROLE.ROLE_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_ROLE_PERRow : global::System.Data.DataRow {
            
            private SP_CRUD_ROLE_PERDataTable tableSP_CRUD_ROLE_PER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_ROLE_PERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_ROLE_PER = ((SP_CRUD_ROLE_PERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_ROLE {
                get {
                    return ((string)(this[this.tableSP_CRUD_ROLE_PER.NAME_ROLEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE_PER.NAME_ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_PERMISSION {
                get {
                    try {
                        return ((string)(this[this.tableSP_CRUD_ROLE_PER.NAME_PERMISSIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME_PERMISSION\' in table \'SP_CRUD_ROLE_PER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_ROLE_PER.NAME_PERMISSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ROLE_PER_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_ROLE_PER.ROLE_PER_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE_PER.ROLE_PER_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROLE_PER_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_ROLE_PER.ROLE_PER_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE_PER.ROLE_PER_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROLE_PER_UPDATEDBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_ROLE_PER.ROLE_PER_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE_PER.ROLE_PER_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ROLE_PER_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_ROLE_PER.ROLE_PER_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE_PER.ROLE_PER_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ROLE_PER_UPDATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_ROLE_PER.ROLE_PER_UPDATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_ROLE_PER.ROLE_PER_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNAME_PERMISSIONNull() {
                return this.IsNull(this.tableSP_CRUD_ROLE_PER.NAME_PERMISSIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNAME_PERMISSIONNull() {
                this[this.tableSP_CRUD_ROLE_PER.NAME_PERMISSIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_STOCKRow : global::System.Data.DataRow {
            
            private SP_CRUD_STOCKDataTable tableSP_CRUD_STOCK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_STOCKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_STOCK = ((SP_CRUD_STOCKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_STOCK {
                get {
                    return ((int)(this[this.tableSP_CRUD_STOCK.ID_STOCKColumn]));
                }
                set {
                    this[this.tableSP_CRUD_STOCK.ID_STOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DESCRIP_PRICE {
                get {
                    return ((string)(this[this.tableSP_CRUD_STOCK.DESCRIP_PRICEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_STOCK.DESCRIP_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int STOCK_INITIAL_QUANTITY {
                get {
                    return ((int)(this[this.tableSP_CRUD_STOCK.STOCK_INITIAL_QUANTITYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_STOCK.STOCK_INITIAL_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int STOCK_QUANTITY {
                get {
                    return ((int)(this[this.tableSP_CRUD_STOCK.STOCK_QUANTITYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_STOCK.STOCK_QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int STOCK_ADJUSTMENT {
                get {
                    try {
                        return ((int)(this[this.tableSP_CRUD_STOCK.STOCK_ADJUSTMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK_ADJUSTMENT\' in table \'SP_CRUD_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_STOCK.STOCK_ADJUSTMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime STOCK_DATE_PRODUCT {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_STOCK.STOCK_DATE_PRODUCTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_STOCK.STOCK_DATE_PRODUCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool STOCK_COUNTER {
                get {
                    try {
                        return ((bool)(this[this.tableSP_CRUD_STOCK.STOCK_COUNTERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK_COUNTER\' in table \'SP_CRUD_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_STOCK.STOCK_COUNTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool STOCK_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_STOCK.STOCK_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_STOCK.STOCK_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STOCK_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_STOCK.STOCK_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_STOCK.STOCK_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STOCK_UPDATEDBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_STOCK.STOCK_UPDATEDBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_STOCK.STOCK_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime STOCK_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_STOCK.STOCK_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_STOCK.STOCK_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime STOCK_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_STOCK.STOCK_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK_UPDATEDATE\' in table \'SP_CRUD_STOCK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_STOCK.STOCK_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTOCK_ADJUSTMENTNull() {
                return this.IsNull(this.tableSP_CRUD_STOCK.STOCK_ADJUSTMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTOCK_ADJUSTMENTNull() {
                this[this.tableSP_CRUD_STOCK.STOCK_ADJUSTMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTOCK_COUNTERNull() {
                return this.IsNull(this.tableSP_CRUD_STOCK.STOCK_COUNTERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTOCK_COUNTERNull() {
                this[this.tableSP_CRUD_STOCK.STOCK_COUNTERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTOCK_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_STOCK.STOCK_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTOCK_UPDATEDATENull() {
                this[this.tableSP_CRUD_STOCK.STOCK_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_USERRow : global::System.Data.DataRow {
            
            private SP_CRUD_USERDataTable tableSP_CRUD_USER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_USERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_USER = ((SP_CRUD_USERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ID_USER {
                get {
                    return ((string)(this[this.tableSP_CRUD_USER.ID_USERColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.ID_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_NAME {
                get {
                    return ((string)(this[this.tableSP_CRUD_USER.USER_NAMEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.USER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_EMAIL {
                get {
                    return ((string)(this[this.tableSP_CRUD_USER.USER_EMAILColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.USER_EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_DPT {
                get {
                    return ((string)(this[this.tableSP_CRUD_USER.NAME_DPTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.NAME_DPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AREA_NAME {
                get {
                    return ((string)(this[this.tableSP_CRUD_USER.AREA_NAMEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.AREA_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_POSITION {
                get {
                    return ((string)(this[this.tableSP_CRUD_USER.NAME_POSITIONColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.NAME_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_ROLE {
                get {
                    return ((string)(this[this.tableSP_CRUD_USER.NAME_ROLEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.NAME_ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_PASSWORD {
                get {
                    return ((string)(this[this.tableSP_CRUD_USER.USER_PASSWORDColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.USER_PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_NICKNAME {
                get {
                    return ((string)(this[this.tableSP_CRUD_USER.USER_NICKNAMEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.USER_NICKNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool USER_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_USER.USER_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.USER_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_USER.USER_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.USER_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableSP_CRUD_USER.USER_UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USER_UPDATEDBY\' in table \'SP_CRUD_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_USER.USER_UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime USER_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_USER.USER_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_USER.USER_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime USER_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_USER.USER_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USER_UPDATEDATE\' in table \'SP_CRUD_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_USER.USER_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUSER_UPDATEDBYNull() {
                return this.IsNull(this.tableSP_CRUD_USER.USER_UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUSER_UPDATEDBYNull() {
                this[this.tableSP_CRUD_USER.USER_UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUSER_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_USER.USER_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUSER_UPDATEDATENull() {
                this[this.tableSP_CRUD_USER.USER_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_CRUD_NOTERow : global::System.Data.DataRow {
            
            private SP_CRUD_NOTEDataTable tableSP_CRUD_NOTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SP_CRUD_NOTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_CRUD_NOTE = ((SP_CRUD_NOTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_NOTE {
                get {
                    return ((int)(this[this.tableSP_CRUD_NOTE.ID_NOTEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_NOTE.ID_NOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTE_TITLE {
                get {
                    return ((string)(this[this.tableSP_CRUD_NOTE.NOTE_TITLEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_NOTE.NOTE_TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTE_CONTENT {
                get {
                    return ((string)(this[this.tableSP_CRUD_NOTE.NOTE_CONTENTColumn]));
                }
                set {
                    this[this.tableSP_CRUD_NOTE.NOTE_CONTENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime NOTE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_NOTE.NOTE_DATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_NOTE.NOTE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTE_STATE {
                get {
                    return ((bool)(this[this.tableSP_CRUD_NOTE.NOTE_STATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_NOTE.NOTE_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTE_CREATEBY {
                get {
                    return ((string)(this[this.tableSP_CRUD_NOTE.NOTE_CREATEBYColumn]));
                }
                set {
                    this[this.tableSP_CRUD_NOTE.NOTE_CREATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime NOTE_CREATEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSP_CRUD_NOTE.NOTE_CREATEDATEColumn]));
                }
                set {
                    this[this.tableSP_CRUD_NOTE.NOTE_CREATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTE_UPDATEBY {
                get {
                    try {
                        return ((string)(this[this.tableSP_CRUD_NOTE.NOTE_UPDATEBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTE_UPDATEBY\' in table \'SP_CRUD_NOTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_NOTE.NOTE_UPDATEBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime NOTE_UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_CRUD_NOTE.NOTE_UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTE_UPDATEDATE\' in table \'SP_CRUD_NOTE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_CRUD_NOTE.NOTE_UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNOTE_UPDATEBYNull() {
                return this.IsNull(this.tableSP_CRUD_NOTE.NOTE_UPDATEBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNOTE_UPDATEBYNull() {
                this[this.tableSP_CRUD_NOTE.NOTE_UPDATEBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNOTE_UPDATEDATENull() {
                return this.IsNull(this.tableSP_CRUD_NOTE.NOTE_UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNOTE_UPDATEDATENull() {
                this[this.tableSP_CRUD_NOTE.NOTE_UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class LogRowChangeEvent : global::System.EventArgs {
            
            private LogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LogRowChangeEvent(LogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public LogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_AREARowChangeEvent : global::System.EventArgs {
            
            private TBL_AREARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_AREARowChangeEvent(TBL_AREARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_AREARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_CUSTOMERRowChangeEvent : global::System.EventArgs {
            
            private TBL_CUSTOMERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CUSTOMERRowChangeEvent(TBL_CUSTOMERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CUSTOMERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_CXCRowChangeEvent : global::System.EventArgs {
            
            private TBL_CXCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CXCRowChangeEvent(TBL_CXCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_CXCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_DPTRowChangeEvent : global::System.EventArgs {
            
            private TBL_DPTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_DPTRowChangeEvent(TBL_DPTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_DPTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_NOTERowChangeEvent : global::System.EventArgs {
            
            private TBL_NOTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_NOTERowChangeEvent(TBL_NOTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_NOTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_ORDERRowChangeEvent : global::System.EventArgs {
            
            private TBL_ORDERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ORDERRowChangeEvent(TBL_ORDERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ORDERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_PERMISSIONRowChangeEvent : global::System.EventArgs {
            
            private TBL_PERMISSIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PERMISSIONRowChangeEvent(TBL_PERMISSIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PERMISSIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_POSITIONRowChangeEvent : global::System.EventArgs {
            
            private TBL_POSITIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_POSITIONRowChangeEvent(TBL_POSITIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_POSITIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_PREPAIDRowChangeEvent : global::System.EventArgs {
            
            private TBL_PREPAIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PREPAIDRowChangeEvent(TBL_PREPAIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PREPAIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_PRODUCTRowChangeEvent : global::System.EventArgs {
            
            private TBL_PRODUCTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PRODUCTRowChangeEvent(TBL_PRODUCTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_PRODUCTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_RECEIPTRowChangeEvent : global::System.EventArgs {
            
            private TBL_RECEIPTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_RECEIPTRowChangeEvent(TBL_RECEIPTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_RECEIPTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_ROLERowChangeEvent : global::System.EventArgs {
            
            private TBL_ROLERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLERowChangeEvent(TBL_ROLERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_ROLE_PERMISSIONRowChangeEvent : global::System.EventArgs {
            
            private TBL_ROLE_PERMISSIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLE_PERMISSIONRowChangeEvent(TBL_ROLE_PERMISSIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_ROLE_PERMISSIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_SESSIONRowChangeEvent : global::System.EventArgs {
            
            private TBL_SESSIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SESSIONRowChangeEvent(TBL_SESSIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_SESSIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_STOCKRowChangeEvent : global::System.EventArgs {
            
            private TBL_STOCKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_STOCKRowChangeEvent(TBL_STOCKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_STOCKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBL_USERRowChangeEvent : global::System.EventArgs {
            
            private TBL_USERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRowChangeEvent(TBL_USERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBL_USERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_AREARowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_AREARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_AREARowChangeEvent(SP_CRUD_AREARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_AREARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_CUSTOMERRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_CUSTOMERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CUSTOMERRowChangeEvent(SP_CRUD_CUSTOMERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CUSTOMERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_CXCRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_CXCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CXCRowChangeEvent(SP_CRUD_CXCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_CXCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_DPTRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_DPTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_DPTRowChangeEvent(SP_CRUD_DPTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_DPTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_ORDERRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_ORDERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ORDERRowChangeEvent(SP_CRUD_ORDERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ORDERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_PERRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_PERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PERRowChangeEvent(SP_CRUD_PERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_POSITIONRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_POSITIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_POSITIONRowChangeEvent(SP_CRUD_POSITIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_POSITIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_PREPAIDRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_PREPAIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PREPAIDRowChangeEvent(SP_CRUD_PREPAIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PREPAIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_PRODUCTRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_PRODUCTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PRODUCTRowChangeEvent(SP_CRUD_PRODUCTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_PRODUCTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_RECEIPTRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_RECEIPTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_RECEIPTRowChangeEvent(SP_CRUD_RECEIPTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_RECEIPTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_ROLERowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_ROLERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLERowChangeEvent(SP_CRUD_ROLERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_ROLE_PERRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_ROLE_PERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLE_PERRowChangeEvent(SP_CRUD_ROLE_PERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_ROLE_PERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_STOCKRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_STOCKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_STOCKRowChangeEvent(SP_CRUD_STOCKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_STOCKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_USERRowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_USERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_USERRowChangeEvent(SP_CRUD_USERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_USERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SP_CRUD_NOTERowChangeEvent : global::System.EventArgs {
            
            private SP_CRUD_NOTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_NOTERowChangeEvent(SP_CRUD_NOTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SP_CRUD_NOTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ControlApp.DataAccess.ControlAppDevDataSetIsaacTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LogTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public LogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Log";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("Thread", "Thread");
            tableMapping.ColumnMappings.Add("Level", "Level");
            tableMapping.ColumnMappings.Add("Logger", "Logger");
            tableMapping.ColumnMappings.Add("Message", "Message");
            tableMapping.ColumnMappings.Add("Exception", "Exception");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Log] ([Date], [Thread], [Level], [Logger], [Message], [Excepti" +
                "on]) VALUES (@Date, @Thread, @Level, @Logger, @Message, @Exception)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thread", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thread", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Level", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Logger", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Logger", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Exception", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Exception", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Date, Thread, [Level], Logger, Message, Exception FROM dbo.[Log]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.LogDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.LogDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.LogDataTable dataTable = new ControlAppDevDataSetIsaac.LogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.LogDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "Log");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Date, string Thread, string Level, string Logger, string Message, string Exception) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Date));
            if ((Thread == null)) {
                throw new global::System.ArgumentNullException("Thread");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Thread));
            }
            if ((Level == null)) {
                throw new global::System.ArgumentNullException("Level");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Level));
            }
            if ((Logger == null)) {
                throw new global::System.ArgumentNullException("Logger");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Logger));
            }
            if ((Message == null)) {
                throw new global::System.ArgumentNullException("Message");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Message));
            }
            if ((Exception == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Exception));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_AREATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_AREATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_AREA";
            tableMapping.ColumnMappings.Add("ID_AREA", "ID_AREA");
            tableMapping.ColumnMappings.Add("ID_DPT", "ID_DPT");
            tableMapping.ColumnMappings.Add("AREA_NAME", "AREA_NAME");
            tableMapping.ColumnMappings.Add("AREA_STATE", "AREA_STATE");
            tableMapping.ColumnMappings.Add("AREA_CREATEBY", "AREA_CREATEBY");
            tableMapping.ColumnMappings.Add("AREA_UPDATEDBY", "AREA_UPDATEDBY");
            tableMapping.ColumnMappings.Add("AREA_CREATEDATE", "AREA_CREATEDATE");
            tableMapping.ColumnMappings.Add("AREA_UPDATEDATE", "AREA_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_AREA] WHERE (([ID_AREA] = @Original_ID_AREA) AND ((@IsNull_ID_DPT = 1 AND [ID_DPT] IS NULL) OR ([ID_DPT] = @Original_ID_DPT)) AND ([AREA_NAME] = @Original_AREA_NAME) AND ([AREA_STATE] = @Original_AREA_STATE) AND ([AREA_CREATEBY] = @Original_AREA_CREATEBY) AND ((@IsNull_AREA_UPDATEDBY = 1 AND [AREA_UPDATEDBY] IS NULL) OR ([AREA_UPDATEDBY] = @Original_AREA_UPDATEDBY)) AND ([AREA_CREATEDATE] = @Original_AREA_CREATEDATE) AND ((@IsNull_AREA_UPDATEDATE = 1 AND [AREA_UPDATEDATE] IS NULL) OR ([AREA_UPDATEDATE] = @Original_AREA_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_AREA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AREA_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AREA_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_AREA] ([ID_DPT], [AREA_NAME], [AREA_STATE], [AREA_CREATEBY], [AREA_UPDATEDBY], [AREA_CREATEDATE], [AREA_UPDATEDATE]) VALUES (@ID_DPT, @AREA_NAME, @AREA_STATE, @AREA_CREATEBY, @AREA_UPDATEDBY, @AREA_CREATEDATE, @AREA_UPDATEDATE);
SELECT ID_AREA, ID_DPT, AREA_NAME, AREA_STATE, AREA_CREATEBY, AREA_UPDATEDBY, AREA_CREATEDATE, AREA_UPDATEDATE FROM TBL_AREA WHERE (ID_AREA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_AREA] SET [ID_DPT] = @ID_DPT, [AREA_NAME] = @AREA_NAME, [AREA_STATE] = @AREA_STATE, [AREA_CREATEBY] = @AREA_CREATEBY, [AREA_UPDATEDBY] = @AREA_UPDATEDBY, [AREA_CREATEDATE] = @AREA_CREATEDATE, [AREA_UPDATEDATE] = @AREA_UPDATEDATE WHERE (([ID_AREA] = @Original_ID_AREA) AND ((@IsNull_ID_DPT = 1 AND [ID_DPT] IS NULL) OR ([ID_DPT] = @Original_ID_DPT)) AND ([AREA_NAME] = @Original_AREA_NAME) AND ([AREA_STATE] = @Original_AREA_STATE) AND ([AREA_CREATEBY] = @Original_AREA_CREATEBY) AND ((@IsNull_AREA_UPDATEDBY = 1 AND [AREA_UPDATEDBY] IS NULL) OR ([AREA_UPDATEDBY] = @Original_AREA_UPDATEDBY)) AND ([AREA_CREATEDATE] = @Original_AREA_CREATEDATE) AND ((@IsNull_AREA_UPDATEDATE = 1 AND [AREA_UPDATEDATE] IS NULL) OR ([AREA_UPDATEDATE] = @Original_AREA_UPDATEDATE)));
SELECT ID_AREA, ID_DPT, AREA_NAME, AREA_STATE, AREA_CREATEBY, AREA_UPDATEDBY, AREA_CREATEDATE, AREA_UPDATEDATE FROM TBL_AREA WHERE (ID_AREA = @ID_AREA)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AREA_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_AREA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AREA_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AREA_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AREA_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AREA_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_AREA", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_AREA, ID_DPT, AREA_NAME, AREA_STATE, AREA_CREATEBY, AREA_UPDATEDBY, ARE" +
                "A_CREATEDATE, AREA_UPDATEDATE FROM dbo.TBL_AREA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_AREADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_AREADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_AREADataTable dataTable = new ControlAppDevDataSetIsaac.TBL_AREADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_AREADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_AREA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_AREA, global::System.Nullable<int> Original_ID_DPT, string Original_AREA_NAME, bool Original_AREA_STATE, string Original_AREA_CREATEBY, string Original_AREA_UPDATEDBY, System.DateTime Original_AREA_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_AREA_UPDATEDATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_AREA));
            if ((Original_ID_DPT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_DPT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_AREA_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_AREA_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_AREA_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_AREA_STATE));
            if ((Original_AREA_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_AREA_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_AREA_CREATEBY));
            }
            if ((Original_AREA_UPDATEDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_AREA_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_AREA_CREATEDATE));
            if ((Original_AREA_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_AREA_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> ID_DPT, string AREA_NAME, bool AREA_STATE, string AREA_CREATEBY, string AREA_UPDATEDBY, System.DateTime AREA_CREATEDATE, global::System.Nullable<global::System.DateTime> AREA_UPDATEDATE) {
            if ((ID_DPT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_DPT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((AREA_NAME == null)) {
                throw new global::System.ArgumentNullException("AREA_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(AREA_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(AREA_STATE));
            if ((AREA_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("AREA_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(AREA_CREATEBY));
            }
            if ((AREA_UPDATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(AREA_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(AREA_CREATEDATE));
            if ((AREA_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(AREA_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID_DPT, 
                    string AREA_NAME, 
                    bool AREA_STATE, 
                    string AREA_CREATEBY, 
                    string AREA_UPDATEDBY, 
                    System.DateTime AREA_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> AREA_UPDATEDATE, 
                    int Original_ID_AREA, 
                    global::System.Nullable<int> Original_ID_DPT, 
                    string Original_AREA_NAME, 
                    bool Original_AREA_STATE, 
                    string Original_AREA_CREATEBY, 
                    string Original_AREA_UPDATEDBY, 
                    System.DateTime Original_AREA_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_AREA_UPDATEDATE, 
                    int ID_AREA) {
            if ((ID_DPT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_DPT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((AREA_NAME == null)) {
                throw new global::System.ArgumentNullException("AREA_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(AREA_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(AREA_STATE));
            if ((AREA_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("AREA_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(AREA_CREATEBY));
            }
            if ((AREA_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(AREA_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(AREA_CREATEDATE));
            if ((AREA_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(AREA_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_AREA));
            if ((Original_ID_DPT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_DPT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_AREA_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_AREA_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_AREA_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Original_AREA_STATE));
            if ((Original_AREA_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_AREA_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_AREA_CREATEBY));
            }
            if ((Original_AREA_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_AREA_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_AREA_CREATEDATE));
            if ((Original_AREA_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_AREA_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(ID_AREA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> ID_DPT, string AREA_NAME, bool AREA_STATE, string AREA_CREATEBY, string AREA_UPDATEDBY, System.DateTime AREA_CREATEDATE, global::System.Nullable<global::System.DateTime> AREA_UPDATEDATE, int Original_ID_AREA, global::System.Nullable<int> Original_ID_DPT, string Original_AREA_NAME, bool Original_AREA_STATE, string Original_AREA_CREATEBY, string Original_AREA_UPDATEDBY, System.DateTime Original_AREA_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_AREA_UPDATEDATE) {
            return this.Update(ID_DPT, AREA_NAME, AREA_STATE, AREA_CREATEBY, AREA_UPDATEDBY, AREA_CREATEDATE, AREA_UPDATEDATE, Original_ID_AREA, Original_ID_DPT, Original_AREA_NAME, Original_AREA_STATE, Original_AREA_CREATEBY, Original_AREA_UPDATEDBY, Original_AREA_CREATEDATE, Original_AREA_UPDATEDATE, Original_ID_AREA);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_CUSTOMERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_CUSTOMERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_CUSTOMER";
            tableMapping.ColumnMappings.Add("ID_CUSTOMER", "ID_CUSTOMER");
            tableMapping.ColumnMappings.Add("CUSTOMER_NAME", "CUSTOMER_NAME");
            tableMapping.ColumnMappings.Add("CUSTOMER_STATE", "CUSTOMER_STATE");
            tableMapping.ColumnMappings.Add("CUSTOMER_CREATEBY", "CUSTOMER_CREATEBY");
            tableMapping.ColumnMappings.Add("CUSTOMER_UPDATEDBY", "CUSTOMER_UPDATEDBY");
            tableMapping.ColumnMappings.Add("CUSTOMER_CREATEDATE", "CUSTOMER_CREATEDATE");
            tableMapping.ColumnMappings.Add("CUSTOMER_UPDATEDATE", "CUSTOMER_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_CUSTOMER] WHERE (([ID_CUSTOMER] = @Original_ID_CUSTOMER) AND ([CUSTOMER_NAME] = @Original_CUSTOMER_NAME) AND ([CUSTOMER_STATE] = @Original_CUSTOMER_STATE) AND ([CUSTOMER_CREATEBY] = @Original_CUSTOMER_CREATEBY) AND ((@IsNull_CUSTOMER_UPDATEDBY = 1 AND [CUSTOMER_UPDATEDBY] IS NULL) OR ([CUSTOMER_UPDATEDBY] = @Original_CUSTOMER_UPDATEDBY)) AND ([CUSTOMER_CREATEDATE] = @Original_CUSTOMER_CREATEDATE) AND ((@IsNull_CUSTOMER_UPDATEDATE = 1 AND [CUSTOMER_UPDATEDATE] IS NULL) OR ([CUSTOMER_UPDATEDATE] = @Original_CUSTOMER_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_CUSTOMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_CUSTOMER] ([ID_CUSTOMER], [CUSTOMER_NAME], [CUSTOMER_STATE], [CUSTOMER_CREATEBY], [CUSTOMER_UPDATEDBY], [CUSTOMER_CREATEDATE], [CUSTOMER_UPDATEDATE]) VALUES (@ID_CUSTOMER, @CUSTOMER_NAME, @CUSTOMER_STATE, @CUSTOMER_CREATEBY, @CUSTOMER_UPDATEDBY, @CUSTOMER_CREATEDATE, @CUSTOMER_UPDATEDATE);
SELECT ID_CUSTOMER, CUSTOMER_NAME, CUSTOMER_STATE, CUSTOMER_CREATEBY, CUSTOMER_UPDATEDBY, CUSTOMER_CREATEDATE, CUSTOMER_UPDATEDATE FROM TBL_CUSTOMER WHERE (ID_CUSTOMER = @ID_CUSTOMER)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_CUSTOMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_CUSTOMER] SET [ID_CUSTOMER] = @ID_CUSTOMER, [CUSTOMER_NAME] = @CUSTOMER_NAME, [CUSTOMER_STATE] = @CUSTOMER_STATE, [CUSTOMER_CREATEBY] = @CUSTOMER_CREATEBY, [CUSTOMER_UPDATEDBY] = @CUSTOMER_UPDATEDBY, [CUSTOMER_CREATEDATE] = @CUSTOMER_CREATEDATE, [CUSTOMER_UPDATEDATE] = @CUSTOMER_UPDATEDATE WHERE (([ID_CUSTOMER] = @Original_ID_CUSTOMER) AND ([CUSTOMER_NAME] = @Original_CUSTOMER_NAME) AND ([CUSTOMER_STATE] = @Original_CUSTOMER_STATE) AND ([CUSTOMER_CREATEBY] = @Original_CUSTOMER_CREATEBY) AND ((@IsNull_CUSTOMER_UPDATEDBY = 1 AND [CUSTOMER_UPDATEDBY] IS NULL) OR ([CUSTOMER_UPDATEDBY] = @Original_CUSTOMER_UPDATEDBY)) AND ([CUSTOMER_CREATEDATE] = @Original_CUSTOMER_CREATEDATE) AND ((@IsNull_CUSTOMER_UPDATEDATE = 1 AND [CUSTOMER_UPDATEDATE] IS NULL) OR ([CUSTOMER_UPDATEDATE] = @Original_CUSTOMER_UPDATEDATE)));
SELECT ID_CUSTOMER, CUSTOMER_NAME, CUSTOMER_STATE, CUSTOMER_CREATEBY, CUSTOMER_UPDATEDBY, CUSTOMER_CREATEDATE, CUSTOMER_UPDATEDATE FROM TBL_CUSTOMER WHERE (ID_CUSTOMER = @ID_CUSTOMER)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_CUSTOMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTOMER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_CUSTOMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_CUSTOMER, CUSTOMER_NAME, CUSTOMER_STATE, CUSTOMER_CREATEBY, CUSTOMER_UP" +
                "DATEDBY, CUSTOMER_CREATEDATE, CUSTOMER_UPDATEDATE FROM dbo.TBL_CUSTOMER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_CUSTOMERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_CUSTOMERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_CUSTOMERDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_CUSTOMERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_CUSTOMERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_CUSTOMER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ID_CUSTOMER, string Original_CUSTOMER_NAME, bool Original_CUSTOMER_STATE, string Original_CUSTOMER_CREATEBY, string Original_CUSTOMER_UPDATEDBY, System.DateTime Original_CUSTOMER_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_CUSTOMER_UPDATEDATE) {
            if ((Original_ID_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("Original_ID_CUSTOMER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ID_CUSTOMER));
            }
            if ((Original_CUSTOMER_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_CUSTOMER_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CUSTOMER_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_CUSTOMER_STATE));
            if ((Original_CUSTOMER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_CUSTOMER_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CUSTOMER_CREATEBY));
            }
            if ((Original_CUSTOMER_UPDATEDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CUSTOMER_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_CUSTOMER_CREATEDATE));
            if ((Original_CUSTOMER_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_CUSTOMER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID_CUSTOMER, string CUSTOMER_NAME, bool CUSTOMER_STATE, string CUSTOMER_CREATEBY, string CUSTOMER_UPDATEDBY, System.DateTime CUSTOMER_CREATEDATE, global::System.Nullable<global::System.DateTime> CUSTOMER_UPDATEDATE) {
            if ((ID_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("ID_CUSTOMER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID_CUSTOMER));
            }
            if ((CUSTOMER_NAME == null)) {
                throw new global::System.ArgumentNullException("CUSTOMER_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CUSTOMER_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(CUSTOMER_STATE));
            if ((CUSTOMER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("CUSTOMER_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CUSTOMER_CREATEBY));
            }
            if ((CUSTOMER_UPDATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CUSTOMER_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(CUSTOMER_CREATEDATE));
            if ((CUSTOMER_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(CUSTOMER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ID_CUSTOMER, string CUSTOMER_NAME, bool CUSTOMER_STATE, string CUSTOMER_CREATEBY, string CUSTOMER_UPDATEDBY, System.DateTime CUSTOMER_CREATEDATE, global::System.Nullable<global::System.DateTime> CUSTOMER_UPDATEDATE, string Original_ID_CUSTOMER, string Original_CUSTOMER_NAME, bool Original_CUSTOMER_STATE, string Original_CUSTOMER_CREATEBY, string Original_CUSTOMER_UPDATEDBY, System.DateTime Original_CUSTOMER_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_CUSTOMER_UPDATEDATE) {
            if ((ID_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("ID_CUSTOMER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID_CUSTOMER));
            }
            if ((CUSTOMER_NAME == null)) {
                throw new global::System.ArgumentNullException("CUSTOMER_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CUSTOMER_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(CUSTOMER_STATE));
            if ((CUSTOMER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("CUSTOMER_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CUSTOMER_CREATEBY));
            }
            if ((CUSTOMER_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CUSTOMER_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(CUSTOMER_CREATEDATE));
            if ((CUSTOMER_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(CUSTOMER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("Original_ID_CUSTOMER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_ID_CUSTOMER));
            }
            if ((Original_CUSTOMER_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_CUSTOMER_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_CUSTOMER_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Original_CUSTOMER_STATE));
            if ((Original_CUSTOMER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_CUSTOMER_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_CUSTOMER_CREATEBY));
            }
            if ((Original_CUSTOMER_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_CUSTOMER_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_CUSTOMER_CREATEDATE));
            if ((Original_CUSTOMER_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_CUSTOMER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CUSTOMER_NAME, bool CUSTOMER_STATE, string CUSTOMER_CREATEBY, string CUSTOMER_UPDATEDBY, System.DateTime CUSTOMER_CREATEDATE, global::System.Nullable<global::System.DateTime> CUSTOMER_UPDATEDATE, string Original_ID_CUSTOMER, string Original_CUSTOMER_NAME, bool Original_CUSTOMER_STATE, string Original_CUSTOMER_CREATEBY, string Original_CUSTOMER_UPDATEDBY, System.DateTime Original_CUSTOMER_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_CUSTOMER_UPDATEDATE) {
            return this.Update(Original_ID_CUSTOMER, CUSTOMER_NAME, CUSTOMER_STATE, CUSTOMER_CREATEBY, CUSTOMER_UPDATEDBY, CUSTOMER_CREATEDATE, CUSTOMER_UPDATEDATE, Original_ID_CUSTOMER, Original_CUSTOMER_NAME, Original_CUSTOMER_STATE, Original_CUSTOMER_CREATEBY, Original_CUSTOMER_UPDATEDBY, Original_CUSTOMER_CREATEDATE, Original_CUSTOMER_UPDATEDATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_CXCTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_CXCTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_CXC";
            tableMapping.ColumnMappings.Add("ID_CXC", "ID_CXC");
            tableMapping.ColumnMappings.Add("ID_USER", "ID_USER");
            tableMapping.ColumnMappings.Add("ID_STOCK", "ID_STOCK");
            tableMapping.ColumnMappings.Add("DATE_CXC", "DATE_CXC");
            tableMapping.ColumnMappings.Add("QUANTITY_RETREAT", "QUANTITY_RETREAT");
            tableMapping.ColumnMappings.Add("QUANTITY_RETURN", "QUANTITY_RETURN");
            tableMapping.ColumnMappings.Add("TOTAL_CXC", "TOTAL_CXC");
            tableMapping.ColumnMappings.Add("BALANCE_CXC", "BALANCE_CXC");
            tableMapping.ColumnMappings.Add("CXC_STATE", "CXC_STATE");
            tableMapping.ColumnMappings.Add("CXC_CREATEBY", "CXC_CREATEBY");
            tableMapping.ColumnMappings.Add("CXC_UPDATEDBY", "CXC_UPDATEDBY");
            tableMapping.ColumnMappings.Add("CXC_CREATEDATE", "CXC_CREATEDATE");
            tableMapping.ColumnMappings.Add("CXC_UPDATEDATE", "CXC_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_CXC] WHERE (([ID_CXC] = @Original_ID_CXC) AND ([ID_USER] = @Original_ID_USER) AND ((@IsNull_ID_STOCK = 1 AND [ID_STOCK] IS NULL) OR ([ID_STOCK] = @Original_ID_STOCK)) AND ([DATE_CXC] = @Original_DATE_CXC) AND ((@IsNull_QUANTITY_RETREAT = 1 AND [QUANTITY_RETREAT] IS NULL) OR ([QUANTITY_RETREAT] = @Original_QUANTITY_RETREAT)) AND ((@IsNull_QUANTITY_RETURN = 1 AND [QUANTITY_RETURN] IS NULL) OR ([QUANTITY_RETURN] = @Original_QUANTITY_RETURN)) AND ([TOTAL_CXC] = @Original_TOTAL_CXC) AND ([BALANCE_CXC] = @Original_BALANCE_CXC) AND ([CXC_STATE] = @Original_CXC_STATE) AND ([CXC_CREATEBY] = @Original_CXC_CREATEBY) AND ([CXC_UPDATEDBY] = @Original_CXC_UPDATEDBY) AND ([CXC_CREATEDATE] = @Original_CXC_CREATEDATE) AND ((@IsNull_CXC_UPDATEDATE = 1 AND [CXC_UPDATEDATE] IS NULL) OR ([CXC_UPDATEDATE] = @Original_CXC_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_CXC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_CXC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_CXC", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_CXC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QUANTITY_RETREAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETREAT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTITY_RETREAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETREAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QUANTITY_RETURN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETURN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTITY_RETURN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETURN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTAL_CXC", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_CXC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BALANCE_CXC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BALANCE_CXC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXC_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXC_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXC_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXC_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CXC_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXC_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_CXC] ([ID_USER], [ID_STOCK], [DATE_CXC], [QUANTITY_RETREAT], [QUANTITY_RETURN], [TOTAL_CXC], [BALANCE_CXC], [CXC_STATE], [CXC_CREATEBY], [CXC_UPDATEDBY], [CXC_CREATEDATE], [CXC_UPDATEDATE]) VALUES (@ID_USER, @ID_STOCK, @DATE_CXC, @QUANTITY_RETREAT, @QUANTITY_RETURN, @TOTAL_CXC, @BALANCE_CXC, @CXC_STATE, @CXC_CREATEBY, @CXC_UPDATEDBY, @CXC_CREATEDATE, @CXC_UPDATEDATE);
SELECT ID_CXC, ID_USER, ID_STOCK, DATE_CXC, QUANTITY_RETREAT, QUANTITY_RETURN, TOTAL_CXC, BALANCE_CXC, CXC_STATE, CXC_CREATEBY, CXC_UPDATEDBY, CXC_CREATEDATE, CXC_UPDATEDATE FROM TBL_CXC WHERE (ID_CXC = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_CXC", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_CXC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTITY_RETREAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETREAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTITY_RETURN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETURN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_CXC", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_CXC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BALANCE_CXC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BALANCE_CXC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXC_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXC_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXC_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXC_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXC_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_CXC] SET [ID_USER] = @ID_USER, [ID_STOCK] = @ID_STOCK, [DATE_CXC] = @DATE_CXC, [QUANTITY_RETREAT] = @QUANTITY_RETREAT, [QUANTITY_RETURN] = @QUANTITY_RETURN, [TOTAL_CXC] = @TOTAL_CXC, [BALANCE_CXC] = @BALANCE_CXC, [CXC_STATE] = @CXC_STATE, [CXC_CREATEBY] = @CXC_CREATEBY, [CXC_UPDATEDBY] = @CXC_UPDATEDBY, [CXC_CREATEDATE] = @CXC_CREATEDATE, [CXC_UPDATEDATE] = @CXC_UPDATEDATE WHERE (([ID_CXC] = @Original_ID_CXC) AND ([ID_USER] = @Original_ID_USER) AND ((@IsNull_ID_STOCK = 1 AND [ID_STOCK] IS NULL) OR ([ID_STOCK] = @Original_ID_STOCK)) AND ([DATE_CXC] = @Original_DATE_CXC) AND ((@IsNull_QUANTITY_RETREAT = 1 AND [QUANTITY_RETREAT] IS NULL) OR ([QUANTITY_RETREAT] = @Original_QUANTITY_RETREAT)) AND ((@IsNull_QUANTITY_RETURN = 1 AND [QUANTITY_RETURN] IS NULL) OR ([QUANTITY_RETURN] = @Original_QUANTITY_RETURN)) AND ([TOTAL_CXC] = @Original_TOTAL_CXC) AND ([BALANCE_CXC] = @Original_BALANCE_CXC) AND ([CXC_STATE] = @Original_CXC_STATE) AND ([CXC_CREATEBY] = @Original_CXC_CREATEBY) AND ([CXC_UPDATEDBY] = @Original_CXC_UPDATEDBY) AND ([CXC_CREATEDATE] = @Original_CXC_CREATEDATE) AND ((@IsNull_CXC_UPDATEDATE = 1 AND [CXC_UPDATEDATE] IS NULL) OR ([CXC_UPDATEDATE] = @Original_CXC_UPDATEDATE)));
SELECT ID_CXC, ID_USER, ID_STOCK, DATE_CXC, QUANTITY_RETREAT, QUANTITY_RETURN, TOTAL_CXC, BALANCE_CXC, CXC_STATE, CXC_CREATEBY, CXC_UPDATEDBY, CXC_CREATEDATE, CXC_UPDATEDATE FROM TBL_CXC WHERE (ID_CXC = @ID_CXC)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_CXC", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_CXC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTITY_RETREAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETREAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTITY_RETURN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETURN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_CXC", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_CXC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BALANCE_CXC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BALANCE_CXC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXC_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXC_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXC_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXC_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CXC_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_CXC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_CXC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_CXC", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_CXC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QUANTITY_RETREAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETREAT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTITY_RETREAT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETREAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QUANTITY_RETURN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETURN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTITY_RETURN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY_RETURN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTAL_CXC", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_CXC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BALANCE_CXC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BALANCE_CXC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXC_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXC_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXC_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXC_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CXC_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CXC_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CXC_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_CXC", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_CXC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_CXC, ID_USER, ID_STOCK, DATE_CXC, QUANTITY_RETREAT, QUANTITY_RETURN, TO" +
                "TAL_CXC, BALANCE_CXC, CXC_STATE, CXC_CREATEBY, CXC_UPDATEDBY, CXC_CREATEDATE, CX" +
                "C_UPDATEDATE FROM dbo.TBL_CXC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_CXCDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_CXCDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_CXCDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_CXCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_CXCDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_CXC");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_CXC, string Original_ID_USER, global::System.Nullable<int> Original_ID_STOCK, System.DateTime Original_DATE_CXC, global::System.Nullable<int> Original_QUANTITY_RETREAT, global::System.Nullable<int> Original_QUANTITY_RETURN, decimal Original_TOTAL_CXC, int Original_BALANCE_CXC, bool Original_CXC_STATE, string Original_CXC_CREATEBY, string Original_CXC_UPDATEDBY, System.DateTime Original_CXC_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_CXC_UPDATEDATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_CXC));
            if ((Original_ID_USER == null)) {
                throw new global::System.ArgumentNullException("Original_ID_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ID_USER));
            }
            if ((Original_ID_STOCK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ID_STOCK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DATE_CXC));
            if ((Original_QUANTITY_RETREAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_QUANTITY_RETREAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_QUANTITY_RETURN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_QUANTITY_RETURN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_TOTAL_CXC));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_BALANCE_CXC));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_CXC_STATE));
            if ((Original_CXC_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_CXC_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_CXC_CREATEBY));
            }
            if ((Original_CXC_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("Original_CXC_UPDATEDBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_CXC_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_CXC_CREATEDATE));
            if ((Original_CXC_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_CXC_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID_USER, global::System.Nullable<int> ID_STOCK, System.DateTime DATE_CXC, global::System.Nullable<int> QUANTITY_RETREAT, global::System.Nullable<int> QUANTITY_RETURN, decimal TOTAL_CXC, int BALANCE_CXC, bool CXC_STATE, string CXC_CREATEBY, string CXC_UPDATEDBY, System.DateTime CXC_CREATEDATE, global::System.Nullable<global::System.DateTime> CXC_UPDATEDATE) {
            if ((ID_USER == null)) {
                throw new global::System.ArgumentNullException("ID_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID_USER));
            }
            if ((ID_STOCK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_STOCK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DATE_CXC));
            if ((QUANTITY_RETREAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QUANTITY_RETREAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((QUANTITY_RETURN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(QUANTITY_RETURN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(TOTAL_CXC));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(BALANCE_CXC));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(CXC_STATE));
            if ((CXC_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("CXC_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(CXC_CREATEBY));
            }
            if ((CXC_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("CXC_UPDATEDBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CXC_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(CXC_CREATEDATE));
            if ((CXC_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(CXC_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ID_USER, 
                    global::System.Nullable<int> ID_STOCK, 
                    System.DateTime DATE_CXC, 
                    global::System.Nullable<int> QUANTITY_RETREAT, 
                    global::System.Nullable<int> QUANTITY_RETURN, 
                    decimal TOTAL_CXC, 
                    int BALANCE_CXC, 
                    bool CXC_STATE, 
                    string CXC_CREATEBY, 
                    string CXC_UPDATEDBY, 
                    System.DateTime CXC_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> CXC_UPDATEDATE, 
                    int Original_ID_CXC, 
                    string Original_ID_USER, 
                    global::System.Nullable<int> Original_ID_STOCK, 
                    System.DateTime Original_DATE_CXC, 
                    global::System.Nullable<int> Original_QUANTITY_RETREAT, 
                    global::System.Nullable<int> Original_QUANTITY_RETURN, 
                    decimal Original_TOTAL_CXC, 
                    int Original_BALANCE_CXC, 
                    bool Original_CXC_STATE, 
                    string Original_CXC_CREATEBY, 
                    string Original_CXC_UPDATEDBY, 
                    System.DateTime Original_CXC_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_CXC_UPDATEDATE, 
                    int ID_CXC) {
            if ((ID_USER == null)) {
                throw new global::System.ArgumentNullException("ID_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID_USER));
            }
            if ((ID_STOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_STOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DATE_CXC));
            if ((QUANTITY_RETREAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QUANTITY_RETREAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((QUANTITY_RETURN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(QUANTITY_RETURN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(TOTAL_CXC));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(BALANCE_CXC));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(CXC_STATE));
            if ((CXC_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("CXC_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(CXC_CREATEBY));
            }
            if ((CXC_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("CXC_UPDATEDBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CXC_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(CXC_CREATEDATE));
            if ((CXC_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(CXC_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_CXC));
            if ((Original_ID_USER == null)) {
                throw new global::System.ArgumentNullException("Original_ID_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ID_USER));
            }
            if ((Original_ID_STOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_ID_STOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_DATE_CXC));
            if ((Original_QUANTITY_RETREAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_QUANTITY_RETREAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_QUANTITY_RETURN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_QUANTITY_RETURN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_TOTAL_CXC));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_BALANCE_CXC));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(Original_CXC_STATE));
            if ((Original_CXC_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_CXC_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_CXC_CREATEBY));
            }
            if ((Original_CXC_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("Original_CXC_UPDATEDBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_CXC_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_CXC_CREATEDATE));
            if ((Original_CXC_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_CXC_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(ID_CXC));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ID_USER, 
                    global::System.Nullable<int> ID_STOCK, 
                    System.DateTime DATE_CXC, 
                    global::System.Nullable<int> QUANTITY_RETREAT, 
                    global::System.Nullable<int> QUANTITY_RETURN, 
                    decimal TOTAL_CXC, 
                    int BALANCE_CXC, 
                    bool CXC_STATE, 
                    string CXC_CREATEBY, 
                    string CXC_UPDATEDBY, 
                    System.DateTime CXC_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> CXC_UPDATEDATE, 
                    int Original_ID_CXC, 
                    string Original_ID_USER, 
                    global::System.Nullable<int> Original_ID_STOCK, 
                    System.DateTime Original_DATE_CXC, 
                    global::System.Nullable<int> Original_QUANTITY_RETREAT, 
                    global::System.Nullable<int> Original_QUANTITY_RETURN, 
                    decimal Original_TOTAL_CXC, 
                    int Original_BALANCE_CXC, 
                    bool Original_CXC_STATE, 
                    string Original_CXC_CREATEBY, 
                    string Original_CXC_UPDATEDBY, 
                    System.DateTime Original_CXC_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_CXC_UPDATEDATE) {
            return this.Update(ID_USER, ID_STOCK, DATE_CXC, QUANTITY_RETREAT, QUANTITY_RETURN, TOTAL_CXC, BALANCE_CXC, CXC_STATE, CXC_CREATEBY, CXC_UPDATEDBY, CXC_CREATEDATE, CXC_UPDATEDATE, Original_ID_CXC, Original_ID_USER, Original_ID_STOCK, Original_DATE_CXC, Original_QUANTITY_RETREAT, Original_QUANTITY_RETURN, Original_TOTAL_CXC, Original_BALANCE_CXC, Original_CXC_STATE, Original_CXC_CREATEBY, Original_CXC_UPDATEDBY, Original_CXC_CREATEDATE, Original_CXC_UPDATEDATE, Original_ID_CXC);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_DPTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_DPTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_DPT";
            tableMapping.ColumnMappings.Add("ID_DPT", "ID_DPT");
            tableMapping.ColumnMappings.Add("NAME_DPT", "NAME_DPT");
            tableMapping.ColumnMappings.Add("STATE_DPT", "STATE_DPT");
            tableMapping.ColumnMappings.Add("CREATEBY_DPT", "CREATEBY_DPT");
            tableMapping.ColumnMappings.Add("UPDATEBY_DPT", "UPDATEBY_DPT");
            tableMapping.ColumnMappings.Add("CREATEDATE_DPT", "CREATEDATE_DPT");
            tableMapping.ColumnMappings.Add("UPDATEDATE_DPT", "UPDATEDATE_DPT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_DPT] WHERE (([ID_DPT] = @Original_ID_DPT) AND ([NAME_DPT] = @Original_NAME_DPT) AND ([STATE_DPT] = @Original_STATE_DPT) AND ((@IsNull_CREATEBY_DPT = 1 AND [CREATEBY_DPT] IS NULL) OR ([CREATEBY_DPT] = @Original_CREATEBY_DPT)) AND ((@IsNull_UPDATEBY_DPT = 1 AND [UPDATEBY_DPT] IS NULL) OR ([UPDATEBY_DPT] = @Original_UPDATEBY_DPT)) AND ([CREATEDATE_DPT] = @Original_CREATEDATE_DPT) AND ((@IsNull_UPDATEDATE_DPT = 1 AND [UPDATEDATE_DPT] IS NULL) OR ([UPDATEDATE_DPT] = @Original_UPDATEDATE_DPT)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATE_DPT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CREATEBY_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEBY_DPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATEBY_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEBY_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UPDATEBY_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEBY_DPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UPDATEBY_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEBY_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATEDATE_DPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEDATE_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UPDATEDATE_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEDATE_DPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UPDATEDATE_DPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEDATE_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_DPT] ([NAME_DPT], [STATE_DPT], [CREATEBY_DPT], [UPDATEBY_DPT], [CREATEDATE_DPT], [UPDATEDATE_DPT]) VALUES (@NAME_DPT, @STATE_DPT, @CREATEBY_DPT, @UPDATEBY_DPT, @CREATEDATE_DPT, @UPDATEDATE_DPT);
SELECT ID_DPT, NAME_DPT, STATE_DPT, CREATEBY_DPT, UPDATEBY_DPT, CREATEDATE_DPT, UPDATEDATE_DPT FROM TBL_DPT WHERE (ID_DPT = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE_DPT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATEBY_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEBY_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDATEBY_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEBY_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATEDATE_DPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEDATE_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDATEDATE_DPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEDATE_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_DPT] SET [NAME_DPT] = @NAME_DPT, [STATE_DPT] = @STATE_DPT, [CREATEBY_DPT] = @CREATEBY_DPT, [UPDATEBY_DPT] = @UPDATEBY_DPT, [CREATEDATE_DPT] = @CREATEDATE_DPT, [UPDATEDATE_DPT] = @UPDATEDATE_DPT WHERE (([ID_DPT] = @Original_ID_DPT) AND ([NAME_DPT] = @Original_NAME_DPT) AND ([STATE_DPT] = @Original_STATE_DPT) AND ((@IsNull_CREATEBY_DPT = 1 AND [CREATEBY_DPT] IS NULL) OR ([CREATEBY_DPT] = @Original_CREATEBY_DPT)) AND ((@IsNull_UPDATEBY_DPT = 1 AND [UPDATEBY_DPT] IS NULL) OR ([UPDATEBY_DPT] = @Original_UPDATEBY_DPT)) AND ([CREATEDATE_DPT] = @Original_CREATEDATE_DPT) AND ((@IsNull_UPDATEDATE_DPT = 1 AND [UPDATEDATE_DPT] IS NULL) OR ([UPDATEDATE_DPT] = @Original_UPDATEDATE_DPT)));
SELECT ID_DPT, NAME_DPT, STATE_DPT, CREATEBY_DPT, UPDATEBY_DPT, CREATEDATE_DPT, UPDATEDATE_DPT FROM TBL_DPT WHERE (ID_DPT = @ID_DPT)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE_DPT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATEBY_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEBY_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDATEBY_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEBY_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATEDATE_DPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEDATE_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDATEDATE_DPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEDATE_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATE_DPT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CREATEBY_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEBY_DPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATEBY_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEBY_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UPDATEBY_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEBY_DPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UPDATEBY_DPT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEBY_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATEDATE_DPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATEDATE_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UPDATEDATE_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEDATE_DPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UPDATEDATE_DPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDATEDATE_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DPT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_DPT, NAME_DPT, STATE_DPT, CREATEBY_DPT, UPDATEBY_DPT, CREATEDATE_DPT, U" +
                "PDATEDATE_DPT FROM dbo.TBL_DPT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_DPTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_DPTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_DPTDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_DPTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_DPTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_DPT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_DPT, string Original_NAME_DPT, bool Original_STATE_DPT, string Original_CREATEBY_DPT, string Original_UPDATEBY_DPT, System.DateTime Original_CREATEDATE_DPT, global::System.Nullable<global::System.DateTime> Original_UPDATEDATE_DPT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_DPT));
            if ((Original_NAME_DPT == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_DPT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NAME_DPT));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_STATE_DPT));
            if ((Original_CREATEBY_DPT == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CREATEBY_DPT));
            }
            if ((Original_UPDATEBY_DPT == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_UPDATEBY_DPT));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_CREATEDATE_DPT));
            if ((Original_UPDATEDATE_DPT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_UPDATEDATE_DPT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NAME_DPT, bool STATE_DPT, string CREATEBY_DPT, string UPDATEBY_DPT, System.DateTime CREATEDATE_DPT, global::System.Nullable<global::System.DateTime> UPDATEDATE_DPT) {
            if ((NAME_DPT == null)) {
                throw new global::System.ArgumentNullException("NAME_DPT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NAME_DPT));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(STATE_DPT));
            if ((CREATEBY_DPT == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CREATEBY_DPT));
            }
            if ((UPDATEBY_DPT == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(UPDATEBY_DPT));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(CREATEDATE_DPT));
            if ((UPDATEDATE_DPT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(UPDATEDATE_DPT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME_DPT, bool STATE_DPT, string CREATEBY_DPT, string UPDATEBY_DPT, System.DateTime CREATEDATE_DPT, global::System.Nullable<global::System.DateTime> UPDATEDATE_DPT, int Original_ID_DPT, string Original_NAME_DPT, bool Original_STATE_DPT, string Original_CREATEBY_DPT, string Original_UPDATEBY_DPT, System.DateTime Original_CREATEDATE_DPT, global::System.Nullable<global::System.DateTime> Original_UPDATEDATE_DPT, int ID_DPT) {
            if ((NAME_DPT == null)) {
                throw new global::System.ArgumentNullException("NAME_DPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NAME_DPT));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(STATE_DPT));
            if ((CREATEBY_DPT == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CREATEBY_DPT));
            }
            if ((UPDATEBY_DPT == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(UPDATEBY_DPT));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(CREATEDATE_DPT));
            if ((UPDATEDATE_DPT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(UPDATEDATE_DPT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_DPT));
            if ((Original_NAME_DPT == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_DPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_NAME_DPT));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Original_STATE_DPT));
            if ((Original_CREATEBY_DPT == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_CREATEBY_DPT));
            }
            if ((Original_UPDATEBY_DPT == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_UPDATEBY_DPT));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_CREATEDATE_DPT));
            if ((Original_UPDATEDATE_DPT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_UPDATEDATE_DPT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(ID_DPT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME_DPT, bool STATE_DPT, string CREATEBY_DPT, string UPDATEBY_DPT, System.DateTime CREATEDATE_DPT, global::System.Nullable<global::System.DateTime> UPDATEDATE_DPT, int Original_ID_DPT, string Original_NAME_DPT, bool Original_STATE_DPT, string Original_CREATEBY_DPT, string Original_UPDATEBY_DPT, System.DateTime Original_CREATEDATE_DPT, global::System.Nullable<global::System.DateTime> Original_UPDATEDATE_DPT) {
            return this.Update(NAME_DPT, STATE_DPT, CREATEBY_DPT, UPDATEBY_DPT, CREATEDATE_DPT, UPDATEDATE_DPT, Original_ID_DPT, Original_NAME_DPT, Original_STATE_DPT, Original_CREATEBY_DPT, Original_UPDATEBY_DPT, Original_CREATEDATE_DPT, Original_UPDATEDATE_DPT, Original_ID_DPT);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_NOTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_NOTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_NOTE";
            tableMapping.ColumnMappings.Add("ID_NOTE", "ID_NOTE");
            tableMapping.ColumnMappings.Add("NOTE_TITLE", "NOTE_TITLE");
            tableMapping.ColumnMappings.Add("NOTE_DATE", "NOTE_DATE");
            tableMapping.ColumnMappings.Add("NOTE_CONTENT", "NOTE_CONTENT");
            tableMapping.ColumnMappings.Add("NOTE_CREATEBY", "NOTE_CREATEBY");
            tableMapping.ColumnMappings.Add("NOTE_UPDATEBY", "NOTE_UPDATEBY");
            tableMapping.ColumnMappings.Add("NOTE_CREATEDATE", "NOTE_CREATEDATE");
            tableMapping.ColumnMappings.Add("NOTE_UPDATEDATE", "NOTE_UPDATEDATE");
            tableMapping.ColumnMappings.Add("NOTE_STATE", "NOTE_STATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_NOTE] ([NOTE_TITLE], [NOTE_DATE], [NOTE_CONTENT], [NOTE_CREATEBY], [NOTE_UPDATEBY], [NOTE_CREATEDATE], [NOTE_UPDATEDATE], [NOTE_STATE]) VALUES (@NOTE_TITLE, @NOTE_DATE, @NOTE_CONTENT, @NOTE_CREATEBY, @NOTE_UPDATEBY, @NOTE_CREATEDATE, @NOTE_UPDATEDATE, @NOTE_STATE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE_TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE_TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE_CONTENT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE_CONTENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE_CREATEBY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE_UPDATEBY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE_UPDATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_NOTE, NOTE_TITLE, NOTE_DATE, NOTE_CONTENT, NOTE_CREATEBY, NOTE_UPDATEBY" +
                ", NOTE_CREATEDATE, NOTE_UPDATEDATE, NOTE_STATE FROM dbo.TBL_NOTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_NOTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_NOTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_NOTEDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_NOTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_NOTEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_NOTE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NOTE_TITLE, System.DateTime NOTE_DATE, string NOTE_CONTENT, string NOTE_CREATEBY, string NOTE_UPDATEBY, System.DateTime NOTE_CREATEDATE, global::System.Nullable<global::System.DateTime> NOTE_UPDATEDATE, bool NOTE_STATE) {
            if ((NOTE_TITLE == null)) {
                throw new global::System.ArgumentNullException("NOTE_TITLE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOTE_TITLE));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(NOTE_DATE));
            if ((NOTE_CONTENT == null)) {
                throw new global::System.ArgumentNullException("NOTE_CONTENT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NOTE_CONTENT));
            }
            if ((NOTE_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("NOTE_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(NOTE_CREATEBY));
            }
            if ((NOTE_UPDATEBY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(NOTE_UPDATEBY));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(NOTE_CREATEDATE));
            if ((NOTE_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(NOTE_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(NOTE_STATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_ORDERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_ORDERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_ORDER";
            tableMapping.ColumnMappings.Add("ID_ORDER", "ID_ORDER");
            tableMapping.ColumnMappings.Add("ID_PREPAID", "ID_PREPAID");
            tableMapping.ColumnMappings.Add("ORDER_QUANTITY", "ORDER_QUANTITY");
            tableMapping.ColumnMappings.Add("ORDER_DATE", "ORDER_DATE");
            tableMapping.ColumnMappings.Add("ORDER_DELIVERY", "ORDER_DELIVERY");
            tableMapping.ColumnMappings.Add("ORDER_STATE", "ORDER_STATE");
            tableMapping.ColumnMappings.Add("ORDER_CREATEBY", "ORDER_CREATEBY");
            tableMapping.ColumnMappings.Add("ORDER_UPDATEDBY", "ORDER_UPDATEDBY");
            tableMapping.ColumnMappings.Add("ORDER_CREATEDATE", "ORDER_CREATEDATE");
            tableMapping.ColumnMappings.Add("ORDER_UPDATEDATE", "ORDER_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_ORDER] WHERE (([ID_ORDER] = @Original_ID_ORDER) AND ([ID_PREPAID] = @Original_ID_PREPAID) AND ([ORDER_QUANTITY] = @Original_ORDER_QUANTITY) AND ([ORDER_DATE] = @Original_ORDER_DATE) AND ([ORDER_DELIVERY] = @Original_ORDER_DELIVERY) AND ([ORDER_STATE] = @Original_ORDER_STATE) AND ([ORDER_CREATEBY] = @Original_ORDER_CREATEBY) AND ([ORDER_UPDATEDBY] = @Original_ORDER_UPDATEDBY) AND ([ORDER_CREATEDATE] = @Original_ORDER_CREATEDATE) AND ((@IsNull_ORDER_UPDATEDATE = 1 AND [ORDER_UPDATEDATE] IS NULL) OR ([ORDER_UPDATEDATE] = @Original_ORDER_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ORDER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PREPAID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PREPAID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_QUANTITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_DELIVERY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DELIVERY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ORDER_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_ORDER] ([ID_PREPAID], [ORDER_QUANTITY], [ORDER_DATE], [ORDER_DELIVERY], [ORDER_STATE], [ORDER_CREATEBY], [ORDER_UPDATEDBY], [ORDER_CREATEDATE], [ORDER_UPDATEDATE]) VALUES (@ID_PREPAID, @ORDER_QUANTITY, @ORDER_DATE, @ORDER_DELIVERY, @ORDER_STATE, @ORDER_CREATEBY, @ORDER_UPDATEDBY, @ORDER_CREATEDATE, @ORDER_UPDATEDATE);
SELECT ID_ORDER, ID_PREPAID, ORDER_QUANTITY, ORDER_DATE, ORDER_DELIVERY, ORDER_STATE, ORDER_CREATEBY, ORDER_UPDATEDBY, ORDER_CREATEDATE, ORDER_UPDATEDATE FROM TBL_ORDER WHERE (ID_ORDER = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PREPAID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PREPAID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_DELIVERY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DELIVERY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_ORDER] SET [ID_PREPAID] = @ID_PREPAID, [ORDER_QUANTITY] = @ORDER_QUANTITY, [ORDER_DATE] = @ORDER_DATE, [ORDER_DELIVERY] = @ORDER_DELIVERY, [ORDER_STATE] = @ORDER_STATE, [ORDER_CREATEBY] = @ORDER_CREATEBY, [ORDER_UPDATEDBY] = @ORDER_UPDATEDBY, [ORDER_CREATEDATE] = @ORDER_CREATEDATE, [ORDER_UPDATEDATE] = @ORDER_UPDATEDATE WHERE (([ID_ORDER] = @Original_ID_ORDER) AND ([ID_PREPAID] = @Original_ID_PREPAID) AND ([ORDER_QUANTITY] = @Original_ORDER_QUANTITY) AND ([ORDER_DATE] = @Original_ORDER_DATE) AND ([ORDER_DELIVERY] = @Original_ORDER_DELIVERY) AND ([ORDER_STATE] = @Original_ORDER_STATE) AND ([ORDER_CREATEBY] = @Original_ORDER_CREATEBY) AND ([ORDER_UPDATEDBY] = @Original_ORDER_UPDATEDBY) AND ([ORDER_CREATEDATE] = @Original_ORDER_CREATEDATE) AND ((@IsNull_ORDER_UPDATEDATE = 1 AND [ORDER_UPDATEDATE] IS NULL) OR ([ORDER_UPDATEDATE] = @Original_ORDER_UPDATEDATE)));
SELECT ID_ORDER, ID_PREPAID, ORDER_QUANTITY, ORDER_DATE, ORDER_DELIVERY, ORDER_STATE, ORDER_CREATEBY, ORDER_UPDATEDBY, ORDER_CREATEDATE, ORDER_UPDATEDATE FROM TBL_ORDER WHERE (ID_ORDER = @ID_ORDER)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PREPAID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PREPAID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_DELIVERY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DELIVERY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ORDER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ORDER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PREPAID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PREPAID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_QUANTITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_DATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_DELIVERY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_DELIVERY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ORDER_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDER_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ORDER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ORDER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ORDER, ID_PREPAID, ORDER_QUANTITY, ORDER_DATE, ORDER_DELIVERY, ORDER_ST" +
                "ATE, ORDER_CREATEBY, ORDER_UPDATEDBY, ORDER_CREATEDATE, ORDER_UPDATEDATE FROM db" +
                "o.TBL_ORDER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_ORDERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_ORDERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_ORDERDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_ORDERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_ORDERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_ORDER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_ORDER, int Original_ID_PREPAID, int Original_ORDER_QUANTITY, System.DateTime Original_ORDER_DATE, bool Original_ORDER_DELIVERY, bool Original_ORDER_STATE, string Original_ORDER_CREATEBY, string Original_ORDER_UPDATEDBY, System.DateTime Original_ORDER_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_ORDER_UPDATEDATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_ORDER));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_PREPAID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ORDER_QUANTITY));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_ORDER_DATE));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_ORDER_DELIVERY));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_ORDER_STATE));
            if ((Original_ORDER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_ORDER_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ORDER_CREATEBY));
            }
            if ((Original_ORDER_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("Original_ORDER_UPDATEDBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ORDER_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_ORDER_CREATEDATE));
            if ((Original_ORDER_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_ORDER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_PREPAID, int ORDER_QUANTITY, System.DateTime ORDER_DATE, bool ORDER_DELIVERY, bool ORDER_STATE, string ORDER_CREATEBY, string ORDER_UPDATEDBY, System.DateTime ORDER_CREATEDATE, global::System.Nullable<global::System.DateTime> ORDER_UPDATEDATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_PREPAID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ORDER_QUANTITY));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(ORDER_DATE));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(ORDER_DELIVERY));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(ORDER_STATE));
            if ((ORDER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("ORDER_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ORDER_CREATEBY));
            }
            if ((ORDER_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("ORDER_UPDATEDBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ORDER_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(ORDER_CREATEDATE));
            if ((ORDER_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(ORDER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_PREPAID, 
                    int ORDER_QUANTITY, 
                    System.DateTime ORDER_DATE, 
                    bool ORDER_DELIVERY, 
                    bool ORDER_STATE, 
                    string ORDER_CREATEBY, 
                    string ORDER_UPDATEDBY, 
                    System.DateTime ORDER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> ORDER_UPDATEDATE, 
                    int Original_ID_ORDER, 
                    int Original_ID_PREPAID, 
                    int Original_ORDER_QUANTITY, 
                    System.DateTime Original_ORDER_DATE, 
                    bool Original_ORDER_DELIVERY, 
                    bool Original_ORDER_STATE, 
                    string Original_ORDER_CREATEBY, 
                    string Original_ORDER_UPDATEDBY, 
                    System.DateTime Original_ORDER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_ORDER_UPDATEDATE, 
                    int ID_ORDER) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_PREPAID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ORDER_QUANTITY));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(ORDER_DATE));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(ORDER_DELIVERY));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(ORDER_STATE));
            if ((ORDER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("ORDER_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ORDER_CREATEBY));
            }
            if ((ORDER_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("ORDER_UPDATEDBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ORDER_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(ORDER_CREATEDATE));
            if ((ORDER_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(ORDER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_ORDER));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ID_PREPAID));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ORDER_QUANTITY));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_ORDER_DATE));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Original_ORDER_DELIVERY));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(Original_ORDER_STATE));
            if ((Original_ORDER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_ORDER_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ORDER_CREATEBY));
            }
            if ((Original_ORDER_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("Original_ORDER_UPDATEDBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ORDER_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_ORDER_CREATEDATE));
            if ((Original_ORDER_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_ORDER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(ID_ORDER));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_PREPAID, 
                    int ORDER_QUANTITY, 
                    System.DateTime ORDER_DATE, 
                    bool ORDER_DELIVERY, 
                    bool ORDER_STATE, 
                    string ORDER_CREATEBY, 
                    string ORDER_UPDATEDBY, 
                    System.DateTime ORDER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> ORDER_UPDATEDATE, 
                    int Original_ID_ORDER, 
                    int Original_ID_PREPAID, 
                    int Original_ORDER_QUANTITY, 
                    System.DateTime Original_ORDER_DATE, 
                    bool Original_ORDER_DELIVERY, 
                    bool Original_ORDER_STATE, 
                    string Original_ORDER_CREATEBY, 
                    string Original_ORDER_UPDATEDBY, 
                    System.DateTime Original_ORDER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_ORDER_UPDATEDATE) {
            return this.Update(ID_PREPAID, ORDER_QUANTITY, ORDER_DATE, ORDER_DELIVERY, ORDER_STATE, ORDER_CREATEBY, ORDER_UPDATEDBY, ORDER_CREATEDATE, ORDER_UPDATEDATE, Original_ID_ORDER, Original_ID_PREPAID, Original_ORDER_QUANTITY, Original_ORDER_DATE, Original_ORDER_DELIVERY, Original_ORDER_STATE, Original_ORDER_CREATEBY, Original_ORDER_UPDATEDBY, Original_ORDER_CREATEDATE, Original_ORDER_UPDATEDATE, Original_ID_ORDER);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_PERMISSIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_PERMISSIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_PERMISSION";
            tableMapping.ColumnMappings.Add("ID_PER", "ID_PER");
            tableMapping.ColumnMappings.Add("ID_DPT", "ID_DPT");
            tableMapping.ColumnMappings.Add("NAME_PERMISSION", "NAME_PERMISSION");
            tableMapping.ColumnMappings.Add("DESCRIP_PERMISSION", "DESCRIP_PERMISSION");
            tableMapping.ColumnMappings.Add("PER_STATE", "PER_STATE");
            tableMapping.ColumnMappings.Add("PER_CREATEBY", "PER_CREATEBY");
            tableMapping.ColumnMappings.Add("PER_UPDATEDBY", "PER_UPDATEDBY");
            tableMapping.ColumnMappings.Add("PER_CREATEDATE", "PER_CREATEDATE");
            tableMapping.ColumnMappings.Add("PER_UPDATEDATE", "PER_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_PERMISSION] WHERE (([ID_PER] = @Original_ID_PER) AND ((@IsNull_ID_DPT = 1 AND [ID_DPT] IS NULL) OR ([ID_DPT] = @Original_ID_DPT)) AND ((@IsNull_NAME_PERMISSION = 1 AND [NAME_PERMISSION] IS NULL) OR ([NAME_PERMISSION] = @Original_NAME_PERMISSION)) AND ((@IsNull_DESCRIP_PERMISSION = 1 AND [DESCRIP_PERMISSION] IS NULL) OR ([DESCRIP_PERMISSION] = @Original_DESCRIP_PERMISSION)) AND ((@IsNull_PER_STATE = 1 AND [PER_STATE] IS NULL) OR ([PER_STATE] = @Original_PER_STATE)) AND ([PER_CREATEBY] = @Original_PER_CREATEBY) AND ((@IsNull_PER_UPDATEDBY = 1 AND [PER_UPDATEDBY] IS NULL) OR ([PER_UPDATEDBY] = @Original_PER_UPDATEDBY)) AND ([PER_CREATEDATE] = @Original_PER_CREATEDATE) AND ((@IsNull_PER_UPDATEDATE = 1 AND [PER_UPDATEDATE] IS NULL) OR ([PER_UPDATEDATE] = @Original_PER_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NAME_PERMISSION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_PERMISSION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_PERMISSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_PERMISSION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DESCRIP_PERMISSION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_PERMISSION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRIP_PERMISSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_PERMISSION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PER_STATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_STATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PER_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PER_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_PERMISSION] ([ID_DPT], [NAME_PERMISSION], [DESCRIP_PERMISSION], [PER_STATE], [PER_CREATEBY], [PER_UPDATEDBY], [PER_CREATEDATE], [PER_UPDATEDATE]) VALUES (@ID_DPT, @NAME_PERMISSION, @DESCRIP_PERMISSION, @PER_STATE, @PER_CREATEBY, @PER_UPDATEDBY, @PER_CREATEDATE, @PER_UPDATEDATE);
SELECT ID_PER, ID_DPT, NAME_PERMISSION, DESCRIP_PERMISSION, PER_STATE, PER_CREATEBY, PER_UPDATEDBY, PER_CREATEDATE, PER_UPDATEDATE FROM TBL_PERMISSION WHERE (ID_PER = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_PERMISSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_PERMISSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRIP_PERMISSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_PERMISSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_PERMISSION] SET [ID_DPT] = @ID_DPT, [NAME_PERMISSION] = @NAME_PERMISSION, [DESCRIP_PERMISSION] = @DESCRIP_PERMISSION, [PER_STATE] = @PER_STATE, [PER_CREATEBY] = @PER_CREATEBY, [PER_UPDATEDBY] = @PER_UPDATEDBY, [PER_CREATEDATE] = @PER_CREATEDATE, [PER_UPDATEDATE] = @PER_UPDATEDATE WHERE (([ID_PER] = @Original_ID_PER) AND ((@IsNull_ID_DPT = 1 AND [ID_DPT] IS NULL) OR ([ID_DPT] = @Original_ID_DPT)) AND ((@IsNull_NAME_PERMISSION = 1 AND [NAME_PERMISSION] IS NULL) OR ([NAME_PERMISSION] = @Original_NAME_PERMISSION)) AND ((@IsNull_DESCRIP_PERMISSION = 1 AND [DESCRIP_PERMISSION] IS NULL) OR ([DESCRIP_PERMISSION] = @Original_DESCRIP_PERMISSION)) AND ((@IsNull_PER_STATE = 1 AND [PER_STATE] IS NULL) OR ([PER_STATE] = @Original_PER_STATE)) AND ([PER_CREATEBY] = @Original_PER_CREATEBY) AND ((@IsNull_PER_UPDATEDBY = 1 AND [PER_UPDATEDBY] IS NULL) OR ([PER_UPDATEDBY] = @Original_PER_UPDATEDBY)) AND ([PER_CREATEDATE] = @Original_PER_CREATEDATE) AND ((@IsNull_PER_UPDATEDATE = 1 AND [PER_UPDATEDATE] IS NULL) OR ([PER_UPDATEDATE] = @Original_PER_UPDATEDATE)));
SELECT ID_PER, ID_DPT, NAME_PERMISSION, DESCRIP_PERMISSION, PER_STATE, PER_CREATEBY, PER_UPDATEDBY, PER_CREATEDATE, PER_UPDATEDATE FROM TBL_PERMISSION WHERE (ID_PER = @ID_PER)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_PERMISSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_PERMISSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRIP_PERMISSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_PERMISSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NAME_PERMISSION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_PERMISSION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_PERMISSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_PERMISSION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DESCRIP_PERMISSION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_PERMISSION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRIP_PERMISSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_PERMISSION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PER_STATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_STATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PER_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PER_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PER_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_PER, ID_DPT, NAME_PERMISSION, DESCRIP_PERMISSION, PER_STATE, PER_CREATE" +
                "BY, PER_UPDATEDBY, PER_CREATEDATE, PER_UPDATEDATE FROM dbo.TBL_PERMISSION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_PERMISSIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_PERMISSIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_PERMISSIONDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_PERMISSIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_PERMISSIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_PERMISSION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_PER, global::System.Nullable<int> Original_ID_DPT, string Original_NAME_PERMISSION, string Original_DESCRIP_PERMISSION, global::System.Nullable<bool> Original_PER_STATE, string Original_PER_CREATEBY, string Original_PER_UPDATEDBY, System.DateTime Original_PER_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_PER_UPDATEDATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_PER));
            if ((Original_ID_DPT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_DPT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_NAME_PERMISSION == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_NAME_PERMISSION));
            }
            if ((Original_DESCRIP_PERMISSION == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DESCRIP_PERMISSION));
            }
            if ((Original_PER_STATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_PER_STATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_PER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_PER_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_PER_CREATEBY));
            }
            if ((Original_PER_UPDATEDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_PER_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_PER_CREATEDATE));
            if ((Original_PER_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_PER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> ID_DPT, string NAME_PERMISSION, string DESCRIP_PERMISSION, global::System.Nullable<bool> PER_STATE, string PER_CREATEBY, string PER_UPDATEDBY, System.DateTime PER_CREATEDATE, global::System.Nullable<global::System.DateTime> PER_UPDATEDATE) {
            if ((ID_DPT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_DPT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((NAME_PERMISSION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME_PERMISSION));
            }
            if ((DESCRIP_PERMISSION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DESCRIP_PERMISSION));
            }
            if ((PER_STATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(PER_STATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("PER_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PER_CREATEBY));
            }
            if ((PER_UPDATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PER_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(PER_CREATEDATE));
            if ((PER_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(PER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID_DPT, 
                    string NAME_PERMISSION, 
                    string DESCRIP_PERMISSION, 
                    global::System.Nullable<bool> PER_STATE, 
                    string PER_CREATEBY, 
                    string PER_UPDATEDBY, 
                    System.DateTime PER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> PER_UPDATEDATE, 
                    int Original_ID_PER, 
                    global::System.Nullable<int> Original_ID_DPT, 
                    string Original_NAME_PERMISSION, 
                    string Original_DESCRIP_PERMISSION, 
                    global::System.Nullable<bool> Original_PER_STATE, 
                    string Original_PER_CREATEBY, 
                    string Original_PER_UPDATEDBY, 
                    System.DateTime Original_PER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_PER_UPDATEDATE, 
                    int ID_PER) {
            if ((ID_DPT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_DPT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((NAME_PERMISSION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME_PERMISSION));
            }
            if ((DESCRIP_PERMISSION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DESCRIP_PERMISSION));
            }
            if ((PER_STATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(PER_STATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("PER_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PER_CREATEBY));
            }
            if ((PER_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PER_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(PER_CREATEDATE));
            if ((PER_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(PER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_PER));
            if ((Original_ID_DPT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ID_DPT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_NAME_PERMISSION == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_NAME_PERMISSION));
            }
            if ((Original_DESCRIP_PERMISSION == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_DESCRIP_PERMISSION));
            }
            if ((Original_PER_STATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Original_PER_STATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_PER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_PER_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_PER_CREATEBY));
            }
            if ((Original_PER_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_PER_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_PER_CREATEDATE));
            if ((Original_PER_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_PER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(ID_PER));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> ID_DPT, 
                    string NAME_PERMISSION, 
                    string DESCRIP_PERMISSION, 
                    global::System.Nullable<bool> PER_STATE, 
                    string PER_CREATEBY, 
                    string PER_UPDATEDBY, 
                    System.DateTime PER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> PER_UPDATEDATE, 
                    int Original_ID_PER, 
                    global::System.Nullable<int> Original_ID_DPT, 
                    string Original_NAME_PERMISSION, 
                    string Original_DESCRIP_PERMISSION, 
                    global::System.Nullable<bool> Original_PER_STATE, 
                    string Original_PER_CREATEBY, 
                    string Original_PER_UPDATEDBY, 
                    System.DateTime Original_PER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_PER_UPDATEDATE) {
            return this.Update(ID_DPT, NAME_PERMISSION, DESCRIP_PERMISSION, PER_STATE, PER_CREATEBY, PER_UPDATEDBY, PER_CREATEDATE, PER_UPDATEDATE, Original_ID_PER, Original_ID_DPT, Original_NAME_PERMISSION, Original_DESCRIP_PERMISSION, Original_PER_STATE, Original_PER_CREATEBY, Original_PER_UPDATEDBY, Original_PER_CREATEDATE, Original_PER_UPDATEDATE, Original_ID_PER);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_POSITIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_POSITIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_POSITION";
            tableMapping.ColumnMappings.Add("ID_POSITION", "ID_POSITION");
            tableMapping.ColumnMappings.Add("ID_AREA", "ID_AREA");
            tableMapping.ColumnMappings.Add("NAME_POSITION", "NAME_POSITION");
            tableMapping.ColumnMappings.Add("POSITION_STATE", "POSITION_STATE");
            tableMapping.ColumnMappings.Add("POSITION_CREATEBY", "POSITION_CREATEBY");
            tableMapping.ColumnMappings.Add("POSITION_UPDATEDBY", "POSITION_UPDATEDBY");
            tableMapping.ColumnMappings.Add("POSITION_CREATEDATE", "POSITION_CREATEDATE");
            tableMapping.ColumnMappings.Add("POSITION_UPDATEDATE", "POSITION_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_POSITION] WHERE (([ID_POSITION] = @Original_ID_POSITION) AND ([ID_AREA] = @Original_ID_AREA) AND ([NAME_POSITION] = @Original_NAME_POSITION) AND ([POSITION_STATE] = @Original_POSITION_STATE) AND ([POSITION_CREATEBY] = @Original_POSITION_CREATEBY) AND ((@IsNull_POSITION_UPDATEDBY = 1 AND [POSITION_UPDATEDBY] IS NULL) OR ([POSITION_UPDATEDBY] = @Original_POSITION_UPDATEDBY)) AND ([POSITION_CREATEDATE] = @Original_POSITION_CREATEDATE) AND ((@IsNull_POSITION_UPDATEDATE = 1 AND [POSITION_UPDATEDATE] IS NULL) OR ([POSITION_UPDATEDATE] = @Original_POSITION_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_POSITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_POSITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_AREA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_POSITION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_POSITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POSITION_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POSITION_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_POSITION] ([ID_AREA], [NAME_POSITION], [POSITION_STATE], [POSITION_CREATEBY], [POSITION_UPDATEDBY], [POSITION_CREATEDATE], [POSITION_UPDATEDATE]) VALUES (@ID_AREA, @NAME_POSITION, @POSITION_STATE, @POSITION_CREATEBY, @POSITION_UPDATEDBY, @POSITION_CREATEDATE, @POSITION_UPDATEDATE);
SELECT ID_POSITION, ID_AREA, NAME_POSITION, POSITION_STATE, POSITION_CREATEBY, POSITION_UPDATEDBY, POSITION_CREATEDATE, POSITION_UPDATEDATE FROM TBL_POSITION WHERE (ID_POSITION = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_AREA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_POSITION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_POSITION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_POSITION] SET [ID_AREA] = @ID_AREA, [NAME_POSITION] = @NAME_POSITION, [POSITION_STATE] = @POSITION_STATE, [POSITION_CREATEBY] = @POSITION_CREATEBY, [POSITION_UPDATEDBY] = @POSITION_UPDATEDBY, [POSITION_CREATEDATE] = @POSITION_CREATEDATE, [POSITION_UPDATEDATE] = @POSITION_UPDATEDATE WHERE (([ID_POSITION] = @Original_ID_POSITION) AND ([ID_AREA] = @Original_ID_AREA) AND ([NAME_POSITION] = @Original_NAME_POSITION) AND ([POSITION_STATE] = @Original_POSITION_STATE) AND ([POSITION_CREATEBY] = @Original_POSITION_CREATEBY) AND ((@IsNull_POSITION_UPDATEDBY = 1 AND [POSITION_UPDATEDBY] IS NULL) OR ([POSITION_UPDATEDBY] = @Original_POSITION_UPDATEDBY)) AND ([POSITION_CREATEDATE] = @Original_POSITION_CREATEDATE) AND ((@IsNull_POSITION_UPDATEDATE = 1 AND [POSITION_UPDATEDATE] IS NULL) OR ([POSITION_UPDATEDATE] = @Original_POSITION_UPDATEDATE)));
SELECT ID_POSITION, ID_AREA, NAME_POSITION, POSITION_STATE, POSITION_CREATEBY, POSITION_UPDATEDBY, POSITION_CREATEDATE, POSITION_UPDATEDATE FROM TBL_POSITION WHERE (ID_POSITION = @ID_POSITION)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_AREA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_POSITION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_POSITION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSITION_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_POSITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_POSITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_AREA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_POSITION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_POSITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POSITION_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POSITION_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POSITION_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSITION_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_POSITION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_POSITION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_POSITION, ID_AREA, NAME_POSITION, POSITION_STATE, POSITION_CREATEBY, PO" +
                "SITION_UPDATEDBY, POSITION_CREATEDATE, POSITION_UPDATEDATE FROM dbo.TBL_POSITION" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_POSITIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_POSITIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_POSITIONDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_POSITIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_POSITIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_POSITION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_POSITION, int Original_ID_AREA, string Original_NAME_POSITION, bool Original_POSITION_STATE, string Original_POSITION_CREATEBY, string Original_POSITION_UPDATEDBY, System.DateTime Original_POSITION_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_POSITION_UPDATEDATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_POSITION));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_AREA));
            if ((Original_NAME_POSITION == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_POSITION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NAME_POSITION));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_POSITION_STATE));
            if ((Original_POSITION_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_POSITION_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_POSITION_CREATEBY));
            }
            if ((Original_POSITION_UPDATEDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_POSITION_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_POSITION_CREATEDATE));
            if ((Original_POSITION_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_POSITION_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_AREA, string NAME_POSITION, bool POSITION_STATE, string POSITION_CREATEBY, string POSITION_UPDATEDBY, System.DateTime POSITION_CREATEDATE, global::System.Nullable<global::System.DateTime> POSITION_UPDATEDATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_AREA));
            if ((NAME_POSITION == null)) {
                throw new global::System.ArgumentNullException("NAME_POSITION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME_POSITION));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(POSITION_STATE));
            if ((POSITION_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("POSITION_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(POSITION_CREATEBY));
            }
            if ((POSITION_UPDATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(POSITION_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(POSITION_CREATEDATE));
            if ((POSITION_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(POSITION_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_AREA, 
                    string NAME_POSITION, 
                    bool POSITION_STATE, 
                    string POSITION_CREATEBY, 
                    string POSITION_UPDATEDBY, 
                    System.DateTime POSITION_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> POSITION_UPDATEDATE, 
                    int Original_ID_POSITION, 
                    int Original_ID_AREA, 
                    string Original_NAME_POSITION, 
                    bool Original_POSITION_STATE, 
                    string Original_POSITION_CREATEBY, 
                    string Original_POSITION_UPDATEDBY, 
                    System.DateTime Original_POSITION_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_POSITION_UPDATEDATE, 
                    int ID_POSITION) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_AREA));
            if ((NAME_POSITION == null)) {
                throw new global::System.ArgumentNullException("NAME_POSITION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME_POSITION));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(POSITION_STATE));
            if ((POSITION_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("POSITION_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(POSITION_CREATEBY));
            }
            if ((POSITION_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(POSITION_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(POSITION_CREATEDATE));
            if ((POSITION_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(POSITION_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_POSITION));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_AREA));
            if ((Original_NAME_POSITION == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_POSITION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_NAME_POSITION));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_POSITION_STATE));
            if ((Original_POSITION_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_POSITION_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_POSITION_CREATEBY));
            }
            if ((Original_POSITION_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_POSITION_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_POSITION_CREATEDATE));
            if ((Original_POSITION_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_POSITION_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(ID_POSITION));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_AREA, string NAME_POSITION, bool POSITION_STATE, string POSITION_CREATEBY, string POSITION_UPDATEDBY, System.DateTime POSITION_CREATEDATE, global::System.Nullable<global::System.DateTime> POSITION_UPDATEDATE, int Original_ID_POSITION, int Original_ID_AREA, string Original_NAME_POSITION, bool Original_POSITION_STATE, string Original_POSITION_CREATEBY, string Original_POSITION_UPDATEDBY, System.DateTime Original_POSITION_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_POSITION_UPDATEDATE) {
            return this.Update(ID_AREA, NAME_POSITION, POSITION_STATE, POSITION_CREATEBY, POSITION_UPDATEDBY, POSITION_CREATEDATE, POSITION_UPDATEDATE, Original_ID_POSITION, Original_ID_AREA, Original_NAME_POSITION, Original_POSITION_STATE, Original_POSITION_CREATEBY, Original_POSITION_UPDATEDBY, Original_POSITION_CREATEDATE, Original_POSITION_UPDATEDATE, Original_ID_POSITION);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_PREPAIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_PREPAIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_PREPAID";
            tableMapping.ColumnMappings.Add("ID_PREPAID", "ID_PREPAID");
            tableMapping.ColumnMappings.Add("ID_CUSTOMER", "ID_CUSTOMER");
            tableMapping.ColumnMappings.Add("ID_PRODUCT", "ID_PRODUCT");
            tableMapping.ColumnMappings.Add("PREPAID_QUANTITY", "PREPAID_QUANTITY");
            tableMapping.ColumnMappings.Add("PREPAID_TOTAL", "PREPAID_TOTAL");
            tableMapping.ColumnMappings.Add("PREPAID_CASH", "PREPAID_CASH");
            tableMapping.ColumnMappings.Add("PREPAID_CHANGE", "PREPAID_CHANGE");
            tableMapping.ColumnMappings.Add("PREPAID_BALANCE", "PREPAID_BALANCE");
            tableMapping.ColumnMappings.Add("PREPAID_STATE", "PREPAID_STATE");
            tableMapping.ColumnMappings.Add("PREPAID_CREATEBY", "PREPAID_CREATEBY");
            tableMapping.ColumnMappings.Add("PREPAID_UPDATEDBY", "PREPAID_UPDATEDBY");
            tableMapping.ColumnMappings.Add("PREPAID_CREATEDATE", "PREPAID_CREATEDATE");
            tableMapping.ColumnMappings.Add("PREPAID_UPDATEDATE", "PREPAID_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_PREPAID] WHERE (([ID_PREPAID] = @Original_ID_PREPAID) AND ([ID_CUSTOMER] = @Original_ID_CUSTOMER) AND ([ID_PRODUCT] = @Original_ID_PRODUCT) AND ([PREPAID_QUANTITY] = @Original_PREPAID_QUANTITY) AND ([PREPAID_TOTAL] = @Original_PREPAID_TOTAL) AND ([PREPAID_CASH] = @Original_PREPAID_CASH) AND ([PREPAID_CHANGE] = @Original_PREPAID_CHANGE) AND ([PREPAID_BALANCE] = @Original_PREPAID_BALANCE) AND ([PREPAID_STATE] = @Original_PREPAID_STATE) AND ([PREPAID_CREATEBY] = @Original_PREPAID_CREATEBY) AND ((@IsNull_PREPAID_UPDATEDBY = 1 AND [PREPAID_UPDATEDBY] IS NULL) OR ([PREPAID_UPDATEDBY] = @Original_PREPAID_UPDATEDBY)) AND ([PREPAID_CREATEDATE] = @Original_PREPAID_CREATEDATE) AND ((@IsNull_PREPAID_UPDATEDATE = 1 AND [PREPAID_UPDATEDATE] IS NULL) OR ([PREPAID_UPDATEDATE] = @Original_PREPAID_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PREPAID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PREPAID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_CUSTOMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_QUANTITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_TOTAL", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_TOTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_CASH", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CASH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_CHANGE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CHANGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_BALANCE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_BALANCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PREPAID_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PREPAID_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_PREPAID] ([ID_CUSTOMER], [ID_PRODUCT], [PREPAID_QUANTITY], [PREPAID_TOTAL], [PREPAID_CASH], [PREPAID_CHANGE], [PREPAID_BALANCE], [PREPAID_STATE], [PREPAID_CREATEBY], [PREPAID_UPDATEDBY], [PREPAID_CREATEDATE], [PREPAID_UPDATEDATE]) VALUES (@ID_CUSTOMER, @ID_PRODUCT, @PREPAID_QUANTITY, @PREPAID_TOTAL, @PREPAID_CASH, @PREPAID_CHANGE, @PREPAID_BALANCE, @PREPAID_STATE, @PREPAID_CREATEBY, @PREPAID_UPDATEDBY, @PREPAID_CREATEDATE, @PREPAID_UPDATEDATE);
SELECT ID_PREPAID, ID_CUSTOMER, ID_PRODUCT, PREPAID_QUANTITY, PREPAID_TOTAL, PREPAID_CASH, PREPAID_CHANGE, PREPAID_BALANCE, PREPAID_STATE, PREPAID_CREATEBY, PREPAID_UPDATEDBY, PREPAID_CREATEDATE, PREPAID_UPDATEDATE FROM TBL_PREPAID WHERE (ID_PREPAID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_CUSTOMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_TOTAL", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_TOTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_CASH", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_CHANGE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CHANGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_BALANCE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_BALANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBL_PREPAID] SET [ID_CUSTOMER] = @ID_CUSTOMER, [ID_PRODUCT] = @ID_P" +
                "RODUCT, [PREPAID_QUANTITY] = @PREPAID_QUANTITY, [PREPAID_TOTAL] = @PREPAID_TOTAL" +
                ", [PREPAID_CASH] = @PREPAID_CASH, [PREPAID_CHANGE] = @PREPAID_CHANGE, [PREPAID_B" +
                "ALANCE] = @PREPAID_BALANCE, [PREPAID_STATE] = @PREPAID_STATE, [PREPAID_CREATEBY]" +
                " = @PREPAID_CREATEBY, [PREPAID_UPDATEDBY] = @PREPAID_UPDATEDBY, [PREPAID_CREATED" +
                "ATE] = @PREPAID_CREATEDATE, [PREPAID_UPDATEDATE] = @PREPAID_UPDATEDATE WHERE (([" +
                "ID_PREPAID] = @Original_ID_PREPAID) AND ([ID_CUSTOMER] = @Original_ID_CUSTOMER) " +
                "AND ([ID_PRODUCT] = @Original_ID_PRODUCT) AND ([PREPAID_QUANTITY] = @Original_PR" +
                "EPAID_QUANTITY) AND ([PREPAID_TOTAL] = @Original_PREPAID_TOTAL) AND ([PREPAID_CA" +
                "SH] = @Original_PREPAID_CASH) AND ([PREPAID_CHANGE] = @Original_PREPAID_CHANGE) " +
                "AND ([PREPAID_BALANCE] = @Original_PREPAID_BALANCE) AND ([PREPAID_STATE] = @Orig" +
                "inal_PREPAID_STATE) AND ([PREPAID_CREATEBY] = @Original_PREPAID_CREATEBY) AND ((" +
                "@IsNull_PREPAID_UPDATEDBY = 1 AND [PREPAID_UPDATEDBY] IS NULL) OR ([PREPAID_UPDA" +
                "TEDBY] = @Original_PREPAID_UPDATEDBY)) AND ([PREPAID_CREATEDATE] = @Original_PRE" +
                "PAID_CREATEDATE) AND ((@IsNull_PREPAID_UPDATEDATE = 1 AND [PREPAID_UPDATEDATE] I" +
                "S NULL) OR ([PREPAID_UPDATEDATE] = @Original_PREPAID_UPDATEDATE)));\r\nSELECT ID_P" +
                "REPAID, ID_CUSTOMER, ID_PRODUCT, PREPAID_QUANTITY, PREPAID_TOTAL, PREPAID_CASH, " +
                "PREPAID_CHANGE, PREPAID_BALANCE, PREPAID_STATE, PREPAID_CREATEBY, PREPAID_UPDATE" +
                "DBY, PREPAID_CREATEDATE, PREPAID_UPDATEDATE FROM TBL_PREPAID WHERE (ID_PREPAID =" +
                " @ID_PREPAID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_CUSTOMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_TOTAL", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_TOTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_CASH", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_CHANGE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CHANGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_BALANCE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_BALANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PREPAID_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PREPAID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PREPAID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_CUSTOMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_QUANTITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_TOTAL", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_TOTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_CASH", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CASH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_CHANGE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CHANGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_BALANCE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_BALANCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PREPAID_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PREPAID_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PREPAID_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PREPAID_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PREPAID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PREPAID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_PREPAID, ID_CUSTOMER, ID_PRODUCT, PREPAID_QUANTITY, PREPAID_TOTAL, PREP" +
                "AID_CASH, PREPAID_CHANGE, PREPAID_BALANCE, PREPAID_STATE, PREPAID_CREATEBY, PREP" +
                "AID_UPDATEDBY, PREPAID_CREATEDATE, PREPAID_UPDATEDATE FROM dbo.TBL_PREPAID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_PREPAIDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_PREPAIDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_PREPAIDDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_PREPAIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_PREPAIDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_PREPAID");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_PREPAID, string Original_ID_CUSTOMER, int Original_ID_PRODUCT, int Original_PREPAID_QUANTITY, decimal Original_PREPAID_TOTAL, decimal Original_PREPAID_CASH, decimal Original_PREPAID_CHANGE, int Original_PREPAID_BALANCE, bool Original_PREPAID_STATE, string Original_PREPAID_CREATEBY, string Original_PREPAID_UPDATEDBY, System.DateTime Original_PREPAID_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_PREPAID_UPDATEDATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_PREPAID));
            if ((Original_ID_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("Original_ID_CUSTOMER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ID_CUSTOMER));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_PRODUCT));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_PREPAID_QUANTITY));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_PREPAID_TOTAL));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_PREPAID_CASH));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_PREPAID_CHANGE));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_PREPAID_BALANCE));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_PREPAID_STATE));
            if ((Original_PREPAID_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_PREPAID_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_PREPAID_CREATEBY));
            }
            if ((Original_PREPAID_UPDATEDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_PREPAID_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_PREPAID_CREATEDATE));
            if ((Original_PREPAID_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_PREPAID_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID_CUSTOMER, int ID_PRODUCT, int PREPAID_QUANTITY, decimal PREPAID_TOTAL, decimal PREPAID_CASH, decimal PREPAID_CHANGE, int PREPAID_BALANCE, bool PREPAID_STATE, string PREPAID_CREATEBY, string PREPAID_UPDATEDBY, System.DateTime PREPAID_CREATEDATE, global::System.Nullable<global::System.DateTime> PREPAID_UPDATEDATE) {
            if ((ID_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("ID_CUSTOMER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID_CUSTOMER));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_PRODUCT));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(PREPAID_QUANTITY));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PREPAID_TOTAL));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(PREPAID_CASH));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(PREPAID_CHANGE));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(PREPAID_BALANCE));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(PREPAID_STATE));
            if ((PREPAID_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("PREPAID_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(PREPAID_CREATEBY));
            }
            if ((PREPAID_UPDATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(PREPAID_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(PREPAID_CREATEDATE));
            if ((PREPAID_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(PREPAID_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ID_CUSTOMER, 
                    int ID_PRODUCT, 
                    int PREPAID_QUANTITY, 
                    decimal PREPAID_TOTAL, 
                    decimal PREPAID_CASH, 
                    decimal PREPAID_CHANGE, 
                    int PREPAID_BALANCE, 
                    bool PREPAID_STATE, 
                    string PREPAID_CREATEBY, 
                    string PREPAID_UPDATEDBY, 
                    System.DateTime PREPAID_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> PREPAID_UPDATEDATE, 
                    int Original_ID_PREPAID, 
                    string Original_ID_CUSTOMER, 
                    int Original_ID_PRODUCT, 
                    int Original_PREPAID_QUANTITY, 
                    decimal Original_PREPAID_TOTAL, 
                    decimal Original_PREPAID_CASH, 
                    decimal Original_PREPAID_CHANGE, 
                    int Original_PREPAID_BALANCE, 
                    bool Original_PREPAID_STATE, 
                    string Original_PREPAID_CREATEBY, 
                    string Original_PREPAID_UPDATEDBY, 
                    System.DateTime Original_PREPAID_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_PREPAID_UPDATEDATE, 
                    int ID_PREPAID) {
            if ((ID_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("ID_CUSTOMER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID_CUSTOMER));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_PRODUCT));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(PREPAID_QUANTITY));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(PREPAID_TOTAL));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(PREPAID_CASH));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(PREPAID_CHANGE));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(PREPAID_BALANCE));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(PREPAID_STATE));
            if ((PREPAID_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("PREPAID_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(PREPAID_CREATEBY));
            }
            if ((PREPAID_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(PREPAID_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(PREPAID_CREATEDATE));
            if ((PREPAID_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(PREPAID_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_PREPAID));
            if ((Original_ID_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("Original_ID_CUSTOMER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ID_CUSTOMER));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_ID_PRODUCT));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_PREPAID_QUANTITY));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_PREPAID_TOTAL));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_PREPAID_CASH));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_PREPAID_CHANGE));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_PREPAID_BALANCE));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(Original_PREPAID_STATE));
            if ((Original_PREPAID_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_PREPAID_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_PREPAID_CREATEBY));
            }
            if ((Original_PREPAID_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_PREPAID_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_PREPAID_CREATEDATE));
            if ((Original_PREPAID_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_PREPAID_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(ID_PREPAID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ID_CUSTOMER, 
                    int ID_PRODUCT, 
                    int PREPAID_QUANTITY, 
                    decimal PREPAID_TOTAL, 
                    decimal PREPAID_CASH, 
                    decimal PREPAID_CHANGE, 
                    int PREPAID_BALANCE, 
                    bool PREPAID_STATE, 
                    string PREPAID_CREATEBY, 
                    string PREPAID_UPDATEDBY, 
                    System.DateTime PREPAID_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> PREPAID_UPDATEDATE, 
                    int Original_ID_PREPAID, 
                    string Original_ID_CUSTOMER, 
                    int Original_ID_PRODUCT, 
                    int Original_PREPAID_QUANTITY, 
                    decimal Original_PREPAID_TOTAL, 
                    decimal Original_PREPAID_CASH, 
                    decimal Original_PREPAID_CHANGE, 
                    int Original_PREPAID_BALANCE, 
                    bool Original_PREPAID_STATE, 
                    string Original_PREPAID_CREATEBY, 
                    string Original_PREPAID_UPDATEDBY, 
                    System.DateTime Original_PREPAID_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_PREPAID_UPDATEDATE) {
            return this.Update(ID_CUSTOMER, ID_PRODUCT, PREPAID_QUANTITY, PREPAID_TOTAL, PREPAID_CASH, PREPAID_CHANGE, PREPAID_BALANCE, PREPAID_STATE, PREPAID_CREATEBY, PREPAID_UPDATEDBY, PREPAID_CREATEDATE, PREPAID_UPDATEDATE, Original_ID_PREPAID, Original_ID_CUSTOMER, Original_ID_PRODUCT, Original_PREPAID_QUANTITY, Original_PREPAID_TOTAL, Original_PREPAID_CASH, Original_PREPAID_CHANGE, Original_PREPAID_BALANCE, Original_PREPAID_STATE, Original_PREPAID_CREATEBY, Original_PREPAID_UPDATEDBY, Original_PREPAID_CREATEDATE, Original_PREPAID_UPDATEDATE, Original_ID_PREPAID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_PRODUCTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_PRODUCTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_PRODUCT";
            tableMapping.ColumnMappings.Add("ID_PRODUCT", "ID_PRODUCT");
            tableMapping.ColumnMappings.Add("TOTAL_PRODUCT", "TOTAL_PRODUCT");
            tableMapping.ColumnMappings.Add("DESCRIP_PRICE", "DESCRIP_PRICE");
            tableMapping.ColumnMappings.Add("PRODUCT_STATE", "PRODUCT_STATE");
            tableMapping.ColumnMappings.Add("PRODUCT_CREATEBY", "PRODUCT_CREATEBY");
            tableMapping.ColumnMappings.Add("PRODUCT_UPDATEDBY", "PRODUCT_UPDATEDBY");
            tableMapping.ColumnMappings.Add("PRODUCT_CREATEDATE", "PRODUCT_CREATEDATE");
            tableMapping.ColumnMappings.Add("PRODUCT_UPDATEDATE", "PRODUCT_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_PRODUCT] WHERE (([ID_PRODUCT] = @Original_ID_PRODUCT) AND ([TOTAL_PRODUCT] = @Original_TOTAL_PRODUCT) AND ([DESCRIP_PRICE] = @Original_DESCRIP_PRICE) AND ([PRODUCT_STATE] = @Original_PRODUCT_STATE) AND ([PRODUCT_CREATEBY] = @Original_PRODUCT_CREATEBY) AND ((@IsNull_PRODUCT_UPDATEDBY = 1 AND [PRODUCT_UPDATEDBY] IS NULL) OR ([PRODUCT_UPDATEDBY] = @Original_PRODUCT_UPDATEDBY)) AND ([PRODUCT_CREATEDATE] = @Original_PRODUCT_CREATEDATE) AND ((@IsNull_PRODUCT_UPDATEDATE = 1 AND [PRODUCT_UPDATEDATE] IS NULL) OR ([PRODUCT_UPDATEDATE] = @Original_PRODUCT_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTAL_PRODUCT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRIP_PRICE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_PRICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PRODUCT_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PRODUCT_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_PRODUCT] ([TOTAL_PRODUCT], [DESCRIP_PRICE], [PRODUCT_STATE], [PRODUCT_CREATEBY], [PRODUCT_UPDATEDBY], [PRODUCT_CREATEDATE], [PRODUCT_UPDATEDATE]) VALUES (@TOTAL_PRODUCT, @DESCRIP_PRICE, @PRODUCT_STATE, @PRODUCT_CREATEBY, @PRODUCT_UPDATEDBY, @PRODUCT_CREATEDATE, @PRODUCT_UPDATEDATE);
SELECT ID_PRODUCT, TOTAL_PRODUCT, DESCRIP_PRICE, PRODUCT_STATE, PRODUCT_CREATEBY, PRODUCT_UPDATEDBY, PRODUCT_CREATEDATE, PRODUCT_UPDATEDATE FROM TBL_PRODUCT WHERE (ID_PRODUCT = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_PRODUCT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_PRODUCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRIP_PRICE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_PRODUCT] SET [TOTAL_PRODUCT] = @TOTAL_PRODUCT, [DESCRIP_PRICE] = @DESCRIP_PRICE, [PRODUCT_STATE] = @PRODUCT_STATE, [PRODUCT_CREATEBY] = @PRODUCT_CREATEBY, [PRODUCT_UPDATEDBY] = @PRODUCT_UPDATEDBY, [PRODUCT_CREATEDATE] = @PRODUCT_CREATEDATE, [PRODUCT_UPDATEDATE] = @PRODUCT_UPDATEDATE WHERE (([ID_PRODUCT] = @Original_ID_PRODUCT) AND ([TOTAL_PRODUCT] = @Original_TOTAL_PRODUCT) AND ([DESCRIP_PRICE] = @Original_DESCRIP_PRICE) AND ([PRODUCT_STATE] = @Original_PRODUCT_STATE) AND ([PRODUCT_CREATEBY] = @Original_PRODUCT_CREATEBY) AND ((@IsNull_PRODUCT_UPDATEDBY = 1 AND [PRODUCT_UPDATEDBY] IS NULL) OR ([PRODUCT_UPDATEDBY] = @Original_PRODUCT_UPDATEDBY)) AND ([PRODUCT_CREATEDATE] = @Original_PRODUCT_CREATEDATE) AND ((@IsNull_PRODUCT_UPDATEDATE = 1 AND [PRODUCT_UPDATEDATE] IS NULL) OR ([PRODUCT_UPDATEDATE] = @Original_PRODUCT_UPDATEDATE)));
SELECT ID_PRODUCT, TOTAL_PRODUCT, DESCRIP_PRICE, PRODUCT_STATE, PRODUCT_CREATEBY, PRODUCT_UPDATEDBY, PRODUCT_CREATEDATE, PRODUCT_UPDATEDATE FROM TBL_PRODUCT WHERE (ID_PRODUCT = @ID_PRODUCT)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_PRODUCT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_PRODUCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRIP_PRICE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRODUCT_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTAL_PRODUCT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRIP_PRICE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_PRICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PRODUCT_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PRODUCT_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRODUCT_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRODUCT_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PRODUCT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_PRODUCT, TOTAL_PRODUCT, DESCRIP_PRICE, PRODUCT_STATE, PRODUCT_CREATEBY," +
                " PRODUCT_UPDATEDBY, PRODUCT_CREATEDATE, PRODUCT_UPDATEDATE FROM dbo.TBL_PRODUCT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_PRODUCTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_PRODUCTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_PRODUCTDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_PRODUCTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_PRODUCTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_PRODUCT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_PRODUCT, decimal Original_TOTAL_PRODUCT, string Original_DESCRIP_PRICE, bool Original_PRODUCT_STATE, string Original_PRODUCT_CREATEBY, string Original_PRODUCT_UPDATEDBY, System.DateTime Original_PRODUCT_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_PRODUCT_UPDATEDATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_PRODUCT));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_TOTAL_PRODUCT));
            if ((Original_DESCRIP_PRICE == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRIP_PRICE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DESCRIP_PRICE));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_PRODUCT_STATE));
            if ((Original_PRODUCT_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_PRODUCT_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PRODUCT_CREATEBY));
            }
            if ((Original_PRODUCT_UPDATEDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PRODUCT_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_PRODUCT_CREATEDATE));
            if ((Original_PRODUCT_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_PRODUCT_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal TOTAL_PRODUCT, string DESCRIP_PRICE, bool PRODUCT_STATE, string PRODUCT_CREATEBY, string PRODUCT_UPDATEDBY, System.DateTime PRODUCT_CREATEDATE, global::System.Nullable<global::System.DateTime> PRODUCT_UPDATEDATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TOTAL_PRODUCT));
            if ((DESCRIP_PRICE == null)) {
                throw new global::System.ArgumentNullException("DESCRIP_PRICE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DESCRIP_PRICE));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(PRODUCT_STATE));
            if ((PRODUCT_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("PRODUCT_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PRODUCT_CREATEBY));
            }
            if ((PRODUCT_UPDATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PRODUCT_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(PRODUCT_CREATEDATE));
            if ((PRODUCT_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(PRODUCT_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal TOTAL_PRODUCT, 
                    string DESCRIP_PRICE, 
                    bool PRODUCT_STATE, 
                    string PRODUCT_CREATEBY, 
                    string PRODUCT_UPDATEDBY, 
                    System.DateTime PRODUCT_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> PRODUCT_UPDATEDATE, 
                    int Original_ID_PRODUCT, 
                    decimal Original_TOTAL_PRODUCT, 
                    string Original_DESCRIP_PRICE, 
                    bool Original_PRODUCT_STATE, 
                    string Original_PRODUCT_CREATEBY, 
                    string Original_PRODUCT_UPDATEDBY, 
                    System.DateTime Original_PRODUCT_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_PRODUCT_UPDATEDATE, 
                    int ID_PRODUCT) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TOTAL_PRODUCT));
            if ((DESCRIP_PRICE == null)) {
                throw new global::System.ArgumentNullException("DESCRIP_PRICE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DESCRIP_PRICE));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(PRODUCT_STATE));
            if ((PRODUCT_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("PRODUCT_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PRODUCT_CREATEBY));
            }
            if ((PRODUCT_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PRODUCT_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(PRODUCT_CREATEDATE));
            if ((PRODUCT_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(PRODUCT_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_PRODUCT));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_TOTAL_PRODUCT));
            if ((Original_DESCRIP_PRICE == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRIP_PRICE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_DESCRIP_PRICE));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_PRODUCT_STATE));
            if ((Original_PRODUCT_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_PRODUCT_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_PRODUCT_CREATEBY));
            }
            if ((Original_PRODUCT_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_PRODUCT_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_PRODUCT_CREATEDATE));
            if ((Original_PRODUCT_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_PRODUCT_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(ID_PRODUCT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal TOTAL_PRODUCT, string DESCRIP_PRICE, bool PRODUCT_STATE, string PRODUCT_CREATEBY, string PRODUCT_UPDATEDBY, System.DateTime PRODUCT_CREATEDATE, global::System.Nullable<global::System.DateTime> PRODUCT_UPDATEDATE, int Original_ID_PRODUCT, decimal Original_TOTAL_PRODUCT, string Original_DESCRIP_PRICE, bool Original_PRODUCT_STATE, string Original_PRODUCT_CREATEBY, string Original_PRODUCT_UPDATEDBY, System.DateTime Original_PRODUCT_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_PRODUCT_UPDATEDATE) {
            return this.Update(TOTAL_PRODUCT, DESCRIP_PRICE, PRODUCT_STATE, PRODUCT_CREATEBY, PRODUCT_UPDATEDBY, PRODUCT_CREATEDATE, PRODUCT_UPDATEDATE, Original_ID_PRODUCT, Original_TOTAL_PRODUCT, Original_DESCRIP_PRICE, Original_PRODUCT_STATE, Original_PRODUCT_CREATEBY, Original_PRODUCT_UPDATEDBY, Original_PRODUCT_CREATEDATE, Original_PRODUCT_UPDATEDATE, Original_ID_PRODUCT);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_RECEIPTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_RECEIPTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_RECEIPT";
            tableMapping.ColumnMappings.Add("ID_RECEIPT", "ID_RECEIPT");
            tableMapping.ColumnMappings.Add("NAME_CUSTOMER", "NAME_CUSTOMER");
            tableMapping.ColumnMappings.Add("DATE_RECEIPT", "DATE_RECEIPT");
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY");
            tableMapping.ColumnMappings.Add("TOTAL_RECEIPT", "TOTAL_RECEIPT");
            tableMapping.ColumnMappings.Add("ID_PRODUCT", "ID_PRODUCT");
            tableMapping.ColumnMappings.Add("ID_STOCK", "ID_STOCK");
            tableMapping.ColumnMappings.Add("UNIT_PRICE", "UNIT_PRICE");
            tableMapping.ColumnMappings.Add("CASH", "CASH");
            tableMapping.ColumnMappings.Add("CHANGE", "CHANGE");
            tableMapping.ColumnMappings.Add("RECEIPT_STATE", "RECEIPT_STATE");
            tableMapping.ColumnMappings.Add("RECEIPT_CREATEBY", "RECEIPT_CREATEBY");
            tableMapping.ColumnMappings.Add("RECEIPT_UPDATEDBY", "RECEIPT_UPDATEDBY");
            tableMapping.ColumnMappings.Add("RECEIPT_CREATEDATE", "RECEIPT_CREATEDATE");
            tableMapping.ColumnMappings.Add("RECEIPT_UPDATEDATE", "RECEIPT_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_RECEIPT] WHERE (([ID_RECEIPT] = @Original_ID_RECEIPT) AND ([NAME_CUSTOMER] = @Original_NAME_CUSTOMER) AND ([DATE_RECEIPT] = @Original_DATE_RECEIPT) AND ([QUANTITY] = @Original_QUANTITY) AND ([TOTAL_RECEIPT] = @Original_TOTAL_RECEIPT) AND ([ID_PRODUCT] = @Original_ID_PRODUCT) AND ((@IsNull_ID_STOCK = 1 AND [ID_STOCK] IS NULL) OR ([ID_STOCK] = @Original_ID_STOCK)) AND ([UNIT_PRICE] = @Original_UNIT_PRICE) AND ([CASH] = @Original_CASH) AND ([CHANGE] = @Original_CHANGE) AND ([RECEIPT_STATE] = @Original_RECEIPT_STATE) AND ([RECEIPT_CREATEBY] = @Original_RECEIPT_CREATEBY) AND ((@IsNull_RECEIPT_UPDATEDBY = 1 AND [RECEIPT_UPDATEDBY] IS NULL) OR ([RECEIPT_UPDATEDBY] = @Original_RECEIPT_UPDATEDBY)) AND ([RECEIPT_CREATEDATE] = @Original_RECEIPT_CREATEDATE) AND ((@IsNull_RECEIPT_UPDATEDATE = 1 AND [RECEIPT_UPDATEDATE] IS NULL) OR ([RECEIPT_UPDATEDATE] = @Original_RECEIPT_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_RECEIPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_RECEIPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_CUSTOMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_RECEIPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_RECEIPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTAL_RECEIPT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_RECEIPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UNIT_PRICE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNIT_PRICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CASH", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CASH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHANGE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHANGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIPT_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIPT_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEIPT_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIPT_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIPT_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEIPT_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIPT_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_RECEIPT] ([NAME_CUSTOMER], [DATE_RECEIPT], [QUANTITY], [TOTAL_RECEIPT], [ID_PRODUCT], [ID_STOCK], [UNIT_PRICE], [CASH], [CHANGE], [RECEIPT_STATE], [RECEIPT_CREATEBY], [RECEIPT_UPDATEDBY], [RECEIPT_CREATEDATE], [RECEIPT_UPDATEDATE]) VALUES (@NAME_CUSTOMER, @DATE_RECEIPT, @QUANTITY, @TOTAL_RECEIPT, @ID_PRODUCT, @ID_STOCK, @UNIT_PRICE, @CASH, @CHANGE, @RECEIPT_STATE, @RECEIPT_CREATEBY, @RECEIPT_UPDATEDBY, @RECEIPT_CREATEDATE, @RECEIPT_UPDATEDATE);
SELECT ID_RECEIPT, NAME_CUSTOMER, DATE_RECEIPT, QUANTITY, TOTAL_RECEIPT, ID_PRODUCT, ID_STOCK, UNIT_PRICE, CASH, CHANGE, RECEIPT_STATE, RECEIPT_CREATEBY, RECEIPT_UPDATEDBY, RECEIPT_CREATEDATE, RECEIPT_UPDATEDATE FROM TBL_RECEIPT WHERE (ID_RECEIPT = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_CUSTOMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_RECEIPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_RECEIPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_RECEIPT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_RECEIPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNIT_PRICE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNIT_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CASH", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHANGE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHANGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIPT_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIPT_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIPT_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIPT_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIPT_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBL_RECEIPT] SET [NAME_CUSTOMER] = @NAME_CUSTOMER, [DATE_RECEIPT] =" +
                " @DATE_RECEIPT, [QUANTITY] = @QUANTITY, [TOTAL_RECEIPT] = @TOTAL_RECEIPT, [ID_PR" +
                "ODUCT] = @ID_PRODUCT, [ID_STOCK] = @ID_STOCK, [UNIT_PRICE] = @UNIT_PRICE, [CASH]" +
                " = @CASH, [CHANGE] = @CHANGE, [RECEIPT_STATE] = @RECEIPT_STATE, [RECEIPT_CREATEB" +
                "Y] = @RECEIPT_CREATEBY, [RECEIPT_UPDATEDBY] = @RECEIPT_UPDATEDBY, [RECEIPT_CREAT" +
                "EDATE] = @RECEIPT_CREATEDATE, [RECEIPT_UPDATEDATE] = @RECEIPT_UPDATEDATE WHERE (" +
                "([ID_RECEIPT] = @Original_ID_RECEIPT) AND ([NAME_CUSTOMER] = @Original_NAME_CUST" +
                "OMER) AND ([DATE_RECEIPT] = @Original_DATE_RECEIPT) AND ([QUANTITY] = @Original_" +
                "QUANTITY) AND ([TOTAL_RECEIPT] = @Original_TOTAL_RECEIPT) AND ([ID_PRODUCT] = @O" +
                "riginal_ID_PRODUCT) AND ((@IsNull_ID_STOCK = 1 AND [ID_STOCK] IS NULL) OR ([ID_S" +
                "TOCK] = @Original_ID_STOCK)) AND ([UNIT_PRICE] = @Original_UNIT_PRICE) AND ([CAS" +
                "H] = @Original_CASH) AND ([CHANGE] = @Original_CHANGE) AND ([RECEIPT_STATE] = @O" +
                "riginal_RECEIPT_STATE) AND ([RECEIPT_CREATEBY] = @Original_RECEIPT_CREATEBY) AND" +
                " ((@IsNull_RECEIPT_UPDATEDBY = 1 AND [RECEIPT_UPDATEDBY] IS NULL) OR ([RECEIPT_U" +
                "PDATEDBY] = @Original_RECEIPT_UPDATEDBY)) AND ([RECEIPT_CREATEDATE] = @Original_" +
                "RECEIPT_CREATEDATE) AND ((@IsNull_RECEIPT_UPDATEDATE = 1 AND [RECEIPT_UPDATEDATE" +
                "] IS NULL) OR ([RECEIPT_UPDATEDATE] = @Original_RECEIPT_UPDATEDATE)));\r\nSELECT I" +
                "D_RECEIPT, NAME_CUSTOMER, DATE_RECEIPT, QUANTITY, TOTAL_RECEIPT, ID_PRODUCT, ID_" +
                "STOCK, UNIT_PRICE, CASH, CHANGE, RECEIPT_STATE, RECEIPT_CREATEBY, RECEIPT_UPDATE" +
                "DBY, RECEIPT_CREATEDATE, RECEIPT_UPDATEDATE FROM TBL_RECEIPT WHERE (ID_RECEIPT =" +
                " @ID_RECEIPT)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_CUSTOMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_RECEIPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_RECEIPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_RECEIPT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_RECEIPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UNIT_PRICE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNIT_PRICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CASH", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHANGE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHANGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIPT_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIPT_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIPT_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIPT_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIPT_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_RECEIPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_RECEIPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_CUSTOMER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_CUSTOMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_RECEIPT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_RECEIPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUANTITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTAL_RECEIPT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOTAL_RECEIPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UNIT_PRICE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UNIT_PRICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CASH", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CASH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHANGE", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHANGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIPT_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIPT_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEIPT_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIPT_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIPT_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RECEIPT_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIPT_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIPT_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_RECEIPT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_RECEIPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_RECEIPT, NAME_CUSTOMER, DATE_RECEIPT, QUANTITY, TOTAL_RECEIPT, ID_PRODU" +
                "CT, ID_STOCK, UNIT_PRICE, CASH, CHANGE, RECEIPT_STATE, RECEIPT_CREATEBY, RECEIPT" +
                "_UPDATEDBY, RECEIPT_CREATEDATE, RECEIPT_UPDATEDATE FROM dbo.TBL_RECEIPT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_RECEIPTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_RECEIPTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_RECEIPTDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_RECEIPTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_RECEIPTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_RECEIPT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_RECEIPT, string Original_NAME_CUSTOMER, System.DateTime Original_DATE_RECEIPT, int Original_QUANTITY, decimal Original_TOTAL_RECEIPT, int Original_ID_PRODUCT, global::System.Nullable<int> Original_ID_STOCK, decimal Original_UNIT_PRICE, decimal Original_CASH, decimal Original_CHANGE, bool Original_RECEIPT_STATE, string Original_RECEIPT_CREATEBY, string Original_RECEIPT_UPDATEDBY, System.DateTime Original_RECEIPT_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_RECEIPT_UPDATEDATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_RECEIPT));
            if ((Original_NAME_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_CUSTOMER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NAME_CUSTOMER));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DATE_RECEIPT));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_QUANTITY));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_TOTAL_RECEIPT));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_ID_PRODUCT));
            if ((Original_ID_STOCK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_ID_STOCK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_UNIT_PRICE));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_CASH));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_CHANGE));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_RECEIPT_STATE));
            if ((Original_RECEIPT_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_RECEIPT_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_RECEIPT_CREATEBY));
            }
            if ((Original_RECEIPT_UPDATEDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_RECEIPT_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_RECEIPT_CREATEDATE));
            if ((Original_RECEIPT_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_RECEIPT_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NAME_CUSTOMER, System.DateTime DATE_RECEIPT, int QUANTITY, decimal TOTAL_RECEIPT, int ID_PRODUCT, global::System.Nullable<int> ID_STOCK, decimal UNIT_PRICE, decimal CASH, decimal CHANGE, bool RECEIPT_STATE, string RECEIPT_CREATEBY, string RECEIPT_UPDATEDBY, System.DateTime RECEIPT_CREATEDATE, global::System.Nullable<global::System.DateTime> RECEIPT_UPDATEDATE) {
            if ((NAME_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("NAME_CUSTOMER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NAME_CUSTOMER));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATE_RECEIPT));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(QUANTITY));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(TOTAL_RECEIPT));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ID_PRODUCT));
            if ((ID_STOCK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ID_STOCK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(UNIT_PRICE));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(CASH));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(CHANGE));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(RECEIPT_STATE));
            if ((RECEIPT_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("RECEIPT_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(RECEIPT_CREATEBY));
            }
            if ((RECEIPT_UPDATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(RECEIPT_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(RECEIPT_CREATEDATE));
            if ((RECEIPT_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(RECEIPT_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NAME_CUSTOMER, 
                    System.DateTime DATE_RECEIPT, 
                    int QUANTITY, 
                    decimal TOTAL_RECEIPT, 
                    int ID_PRODUCT, 
                    global::System.Nullable<int> ID_STOCK, 
                    decimal UNIT_PRICE, 
                    decimal CASH, 
                    decimal CHANGE, 
                    bool RECEIPT_STATE, 
                    string RECEIPT_CREATEBY, 
                    string RECEIPT_UPDATEDBY, 
                    System.DateTime RECEIPT_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> RECEIPT_UPDATEDATE, 
                    int Original_ID_RECEIPT, 
                    string Original_NAME_CUSTOMER, 
                    System.DateTime Original_DATE_RECEIPT, 
                    int Original_QUANTITY, 
                    decimal Original_TOTAL_RECEIPT, 
                    int Original_ID_PRODUCT, 
                    global::System.Nullable<int> Original_ID_STOCK, 
                    decimal Original_UNIT_PRICE, 
                    decimal Original_CASH, 
                    decimal Original_CHANGE, 
                    bool Original_RECEIPT_STATE, 
                    string Original_RECEIPT_CREATEBY, 
                    string Original_RECEIPT_UPDATEDBY, 
                    System.DateTime Original_RECEIPT_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_RECEIPT_UPDATEDATE, 
                    int ID_RECEIPT) {
            if ((NAME_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("NAME_CUSTOMER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NAME_CUSTOMER));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATE_RECEIPT));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(QUANTITY));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(TOTAL_RECEIPT));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ID_PRODUCT));
            if ((ID_STOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_STOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(UNIT_PRICE));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(CASH));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(CHANGE));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(RECEIPT_STATE));
            if ((RECEIPT_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("RECEIPT_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(RECEIPT_CREATEBY));
            }
            if ((RECEIPT_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(RECEIPT_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(RECEIPT_CREATEDATE));
            if ((RECEIPT_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(RECEIPT_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_ID_RECEIPT));
            if ((Original_NAME_CUSTOMER == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_CUSTOMER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_NAME_CUSTOMER));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_DATE_RECEIPT));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_QUANTITY));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_TOTAL_RECEIPT));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ID_PRODUCT));
            if ((Original_ID_STOCK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_ID_STOCK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_UNIT_PRICE));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_CASH));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_CHANGE));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(Original_RECEIPT_STATE));
            if ((Original_RECEIPT_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_RECEIPT_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_RECEIPT_CREATEBY));
            }
            if ((Original_RECEIPT_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_RECEIPT_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_RECEIPT_CREATEDATE));
            if ((Original_RECEIPT_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(Original_RECEIPT_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(ID_RECEIPT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NAME_CUSTOMER, 
                    System.DateTime DATE_RECEIPT, 
                    int QUANTITY, 
                    decimal TOTAL_RECEIPT, 
                    int ID_PRODUCT, 
                    global::System.Nullable<int> ID_STOCK, 
                    decimal UNIT_PRICE, 
                    decimal CASH, 
                    decimal CHANGE, 
                    bool RECEIPT_STATE, 
                    string RECEIPT_CREATEBY, 
                    string RECEIPT_UPDATEDBY, 
                    System.DateTime RECEIPT_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> RECEIPT_UPDATEDATE, 
                    int Original_ID_RECEIPT, 
                    string Original_NAME_CUSTOMER, 
                    System.DateTime Original_DATE_RECEIPT, 
                    int Original_QUANTITY, 
                    decimal Original_TOTAL_RECEIPT, 
                    int Original_ID_PRODUCT, 
                    global::System.Nullable<int> Original_ID_STOCK, 
                    decimal Original_UNIT_PRICE, 
                    decimal Original_CASH, 
                    decimal Original_CHANGE, 
                    bool Original_RECEIPT_STATE, 
                    string Original_RECEIPT_CREATEBY, 
                    string Original_RECEIPT_UPDATEDBY, 
                    System.DateTime Original_RECEIPT_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_RECEIPT_UPDATEDATE) {
            return this.Update(NAME_CUSTOMER, DATE_RECEIPT, QUANTITY, TOTAL_RECEIPT, ID_PRODUCT, ID_STOCK, UNIT_PRICE, CASH, CHANGE, RECEIPT_STATE, RECEIPT_CREATEBY, RECEIPT_UPDATEDBY, RECEIPT_CREATEDATE, RECEIPT_UPDATEDATE, Original_ID_RECEIPT, Original_NAME_CUSTOMER, Original_DATE_RECEIPT, Original_QUANTITY, Original_TOTAL_RECEIPT, Original_ID_PRODUCT, Original_ID_STOCK, Original_UNIT_PRICE, Original_CASH, Original_CHANGE, Original_RECEIPT_STATE, Original_RECEIPT_CREATEBY, Original_RECEIPT_UPDATEDBY, Original_RECEIPT_CREATEDATE, Original_RECEIPT_UPDATEDATE, Original_ID_RECEIPT);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_ROLETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_ROLETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_ROLE";
            tableMapping.ColumnMappings.Add("ID_ROLE", "ID_ROLE");
            tableMapping.ColumnMappings.Add("NAME_ROLE", "NAME_ROLE");
            tableMapping.ColumnMappings.Add("DESCRIP_ROLE", "DESCRIP_ROLE");
            tableMapping.ColumnMappings.Add("ROLE_STATE", "ROLE_STATE");
            tableMapping.ColumnMappings.Add("ROLE_CREATEBY", "ROLE_CREATEBY");
            tableMapping.ColumnMappings.Add("ROLE_UPDATEDBY", "ROLE_UPDATEDBY");
            tableMapping.ColumnMappings.Add("ROLE_CREATEDATE", "ROLE_CREATEDATE");
            tableMapping.ColumnMappings.Add("ROLE_UPDATEDATE", "ROLE_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_ROLE] WHERE (([ID_ROLE] = @Original_ID_ROLE) AND ([NAME_ROLE] = @Original_NAME_ROLE) AND ([DESCRIP_ROLE] = @Original_DESCRIP_ROLE) AND ([ROLE_STATE] = @Original_ROLE_STATE) AND ([ROLE_CREATEBY] = @Original_ROLE_CREATEBY) AND ((@IsNull_ROLE_UPDATEDBY = 1 AND [ROLE_UPDATEDBY] IS NULL) OR ([ROLE_UPDATEDBY] = @Original_ROLE_UPDATEDBY)) AND ([ROLE_CREATEDATE] = @Original_ROLE_CREATEDATE) AND ((@IsNull_ROLE_UPDATEDATE = 1 AND [ROLE_UPDATEDATE] IS NULL) OR ([ROLE_UPDATEDATE] = @Original_ROLE_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ROLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ROLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_ROLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ROLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRIP_ROLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_ROLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROLE_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROLE_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROLE_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROLE_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROLE_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROLE_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROLE_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_ROLE] ([NAME_ROLE], [DESCRIP_ROLE], [ROLE_STATE], [ROLE_CREATEBY], [ROLE_UPDATEDBY], [ROLE_CREATEDATE], [ROLE_UPDATEDATE]) VALUES (@NAME_ROLE, @DESCRIP_ROLE, @ROLE_STATE, @ROLE_CREATEBY, @ROLE_UPDATEDBY, @ROLE_CREATEDATE, @ROLE_UPDATEDATE);
SELECT ID_ROLE, NAME_ROLE, DESCRIP_ROLE, ROLE_STATE, ROLE_CREATEBY, ROLE_UPDATEDBY, ROLE_CREATEDATE, ROLE_UPDATEDATE FROM TBL_ROLE WHERE (ID_ROLE = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_ROLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ROLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRIP_ROLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_ROLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_ROLE] SET [NAME_ROLE] = @NAME_ROLE, [DESCRIP_ROLE] = @DESCRIP_ROLE, [ROLE_STATE] = @ROLE_STATE, [ROLE_CREATEBY] = @ROLE_CREATEBY, [ROLE_UPDATEDBY] = @ROLE_UPDATEDBY, [ROLE_CREATEDATE] = @ROLE_CREATEDATE, [ROLE_UPDATEDATE] = @ROLE_UPDATEDATE WHERE (([ID_ROLE] = @Original_ID_ROLE) AND ([NAME_ROLE] = @Original_NAME_ROLE) AND ([DESCRIP_ROLE] = @Original_DESCRIP_ROLE) AND ([ROLE_STATE] = @Original_ROLE_STATE) AND ([ROLE_CREATEBY] = @Original_ROLE_CREATEBY) AND ((@IsNull_ROLE_UPDATEDBY = 1 AND [ROLE_UPDATEDBY] IS NULL) OR ([ROLE_UPDATEDBY] = @Original_ROLE_UPDATEDBY)) AND ([ROLE_CREATEDATE] = @Original_ROLE_CREATEDATE) AND ((@IsNull_ROLE_UPDATEDATE = 1 AND [ROLE_UPDATEDATE] IS NULL) OR ([ROLE_UPDATEDATE] = @Original_ROLE_UPDATEDATE)));
SELECT ID_ROLE, NAME_ROLE, DESCRIP_ROLE, ROLE_STATE, ROLE_CREATEBY, ROLE_UPDATEDBY, ROLE_CREATEDATE, ROLE_UPDATEDATE FROM TBL_ROLE WHERE (ID_ROLE = @ID_ROLE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_ROLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ROLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRIP_ROLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_ROLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ROLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ROLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_ROLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ROLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCRIP_ROLE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIP_ROLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROLE_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROLE_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROLE_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROLE_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROLE_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROLE_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROLE_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ROLE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ROLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ROLE, NAME_ROLE, DESCRIP_ROLE, ROLE_STATE, ROLE_CREATEBY, ROLE_UPDATEDB" +
                "Y, ROLE_CREATEDATE, ROLE_UPDATEDATE FROM dbo.TBL_ROLE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_ROLEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_ROLEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_ROLEDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_ROLEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_ROLEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_ROLE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_ROLE, string Original_NAME_ROLE, string Original_DESCRIP_ROLE, bool Original_ROLE_STATE, string Original_ROLE_CREATEBY, string Original_ROLE_UPDATEDBY, System.DateTime Original_ROLE_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_ROLE_UPDATEDATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_ROLE));
            if ((Original_NAME_ROLE == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_ROLE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NAME_ROLE));
            }
            if ((Original_DESCRIP_ROLE == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRIP_ROLE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DESCRIP_ROLE));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_ROLE_STATE));
            if ((Original_ROLE_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_ROLE_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ROLE_CREATEBY));
            }
            if ((Original_ROLE_UPDATEDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ROLE_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_ROLE_CREATEDATE));
            if ((Original_ROLE_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_ROLE_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NAME_ROLE, string DESCRIP_ROLE, bool ROLE_STATE, string ROLE_CREATEBY, string ROLE_UPDATEDBY, System.DateTime ROLE_CREATEDATE, global::System.Nullable<global::System.DateTime> ROLE_UPDATEDATE) {
            if ((NAME_ROLE == null)) {
                throw new global::System.ArgumentNullException("NAME_ROLE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NAME_ROLE));
            }
            if ((DESCRIP_ROLE == null)) {
                throw new global::System.ArgumentNullException("DESCRIP_ROLE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DESCRIP_ROLE));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(ROLE_STATE));
            if ((ROLE_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("ROLE_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ROLE_CREATEBY));
            }
            if ((ROLE_UPDATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ROLE_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(ROLE_CREATEDATE));
            if ((ROLE_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(ROLE_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NAME_ROLE, 
                    string DESCRIP_ROLE, 
                    bool ROLE_STATE, 
                    string ROLE_CREATEBY, 
                    string ROLE_UPDATEDBY, 
                    System.DateTime ROLE_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> ROLE_UPDATEDATE, 
                    int Original_ID_ROLE, 
                    string Original_NAME_ROLE, 
                    string Original_DESCRIP_ROLE, 
                    bool Original_ROLE_STATE, 
                    string Original_ROLE_CREATEBY, 
                    string Original_ROLE_UPDATEDBY, 
                    System.DateTime Original_ROLE_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_ROLE_UPDATEDATE, 
                    int ID_ROLE) {
            if ((NAME_ROLE == null)) {
                throw new global::System.ArgumentNullException("NAME_ROLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NAME_ROLE));
            }
            if ((DESCRIP_ROLE == null)) {
                throw new global::System.ArgumentNullException("DESCRIP_ROLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DESCRIP_ROLE));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(ROLE_STATE));
            if ((ROLE_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("ROLE_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ROLE_CREATEBY));
            }
            if ((ROLE_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ROLE_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(ROLE_CREATEDATE));
            if ((ROLE_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(ROLE_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_ROLE));
            if ((Original_NAME_ROLE == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_ROLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_NAME_ROLE));
            }
            if ((Original_DESCRIP_ROLE == null)) {
                throw new global::System.ArgumentNullException("Original_DESCRIP_ROLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_DESCRIP_ROLE));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_ROLE_STATE));
            if ((Original_ROLE_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_ROLE_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ROLE_CREATEBY));
            }
            if ((Original_ROLE_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ROLE_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_ROLE_CREATEDATE));
            if ((Original_ROLE_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_ROLE_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(ID_ROLE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME_ROLE, string DESCRIP_ROLE, bool ROLE_STATE, string ROLE_CREATEBY, string ROLE_UPDATEDBY, System.DateTime ROLE_CREATEDATE, global::System.Nullable<global::System.DateTime> ROLE_UPDATEDATE, int Original_ID_ROLE, string Original_NAME_ROLE, string Original_DESCRIP_ROLE, bool Original_ROLE_STATE, string Original_ROLE_CREATEBY, string Original_ROLE_UPDATEDBY, System.DateTime Original_ROLE_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_ROLE_UPDATEDATE) {
            return this.Update(NAME_ROLE, DESCRIP_ROLE, ROLE_STATE, ROLE_CREATEBY, ROLE_UPDATEDBY, ROLE_CREATEDATE, ROLE_UPDATEDATE, Original_ID_ROLE, Original_NAME_ROLE, Original_DESCRIP_ROLE, Original_ROLE_STATE, Original_ROLE_CREATEBY, Original_ROLE_UPDATEDBY, Original_ROLE_CREATEDATE, Original_ROLE_UPDATEDATE, Original_ID_ROLE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_ROLE_PERMISSIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_ROLE_PERMISSIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_ROLE_PERMISSION";
            tableMapping.ColumnMappings.Add("ID_ROLE", "ID_ROLE");
            tableMapping.ColumnMappings.Add("ID_PER", "ID_PER");
            tableMapping.ColumnMappings.Add("ROLE_PER_STATE", "ROLE_PER_STATE");
            tableMapping.ColumnMappings.Add("ROLE_PER_CREATEBY", "ROLE_PER_CREATEBY");
            tableMapping.ColumnMappings.Add("ROLE_PER_UPDATEDBY", "ROLE_PER_UPDATEDBY");
            tableMapping.ColumnMappings.Add("ROLE_PER_CREATEDATE", "ROLE_PER_CREATEDATE");
            tableMapping.ColumnMappings.Add("ROLE_PER_UPDATEDATE", "ROLE_PER_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_ROLE_PERMISSION] ([ID_ROLE], [ID_PER], [ROLE_PER_STATE], [ROLE_PER_CREATEBY], [ROLE_PER_UPDATEDBY], [ROLE_PER_CREATEDATE], [ROLE_PER_UPDATEDATE]) VALUES (@ID_ROLE, @ID_PER, @ROLE_PER_STATE, @ROLE_PER_CREATEBY, @ROLE_PER_UPDATEDBY, @ROLE_PER_CREATEDATE, @ROLE_PER_UPDATEDATE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ROLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ROLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_PER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_PER_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_PER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_PER_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_PER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_PER_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_PER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_PER_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROLE_PER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROLE_PER_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ROLE, ID_PER, ROLE_PER_STATE, ROLE_PER_CREATEBY, ROLE_PER_UPDATEDBY, RO" +
                "LE_PER_CREATEDATE, ROLE_PER_UPDATEDATE FROM dbo.TBL_ROLE_PERMISSION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_ROLE_PERMISSIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_ROLE_PERMISSIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_ROLE_PERMISSIONDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_ROLE_PERMISSIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_ROLE_PERMISSIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_ROLE_PERMISSION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_ROLE, int ID_PER, bool ROLE_PER_STATE, string ROLE_PER_CREATEBY, string ROLE_PER_UPDATEDBY, System.DateTime ROLE_PER_CREATEDATE, System.DateTime ROLE_PER_UPDATEDATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_ROLE));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_PER));
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(ROLE_PER_STATE));
            if ((ROLE_PER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("ROLE_PER_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ROLE_PER_CREATEBY));
            }
            if ((ROLE_PER_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("ROLE_PER_UPDATEDBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ROLE_PER_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(ROLE_PER_CREATEDATE));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(ROLE_PER_UPDATEDATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_SESSIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_SESSIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_SESSION";
            tableMapping.ColumnMappings.Add("ID_SESION", "ID_SESION");
            tableMapping.ColumnMappings.Add("ID_USER", "ID_USER");
            tableMapping.ColumnMappings.Add("DATE_SESSION", "DATE_SESSION");
            tableMapping.ColumnMappings.Add("EDIT_SESSION", "EDIT_SESSION");
            tableMapping.ColumnMappings.Add("SESSION_STATE", "SESSION_STATE");
            tableMapping.ColumnMappings.Add("SESSION_CREATEBY", "SESSION_CREATEBY");
            tableMapping.ColumnMappings.Add("SESSION_UPDATEDBY", "SESSION_UPDATEDBY");
            tableMapping.ColumnMappings.Add("SESSION_CREATEDATE", "SESSION_CREATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_SESSION] WHERE (([ID_SESION] = @Original_ID_SESION) AND ([ID_USER] = @Original_ID_USER) AND ([DATE_SESSION] = @Original_DATE_SESSION) AND ([EDIT_SESSION] = @Original_EDIT_SESSION) AND ([SESSION_STATE] = @Original_SESSION_STATE) AND ([SESSION_CREATEBY] = @Original_SESSION_CREATEBY) AND ((@IsNull_SESSION_UPDATEDBY = 1 AND [SESSION_UPDATEDBY] IS NULL) OR ([SESSION_UPDATEDBY] = @Original_SESSION_UPDATEDBY)) AND ([SESSION_CREATEDATE] = @Original_SESSION_CREATEDATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_SESION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SESION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_SESSION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_SESSION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDIT_SESSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDIT_SESSION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SESSION_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SESSION_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SESSION_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SESSION_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SESSION_CREATEDATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_SESSION] ([ID_USER], [DATE_SESSION], [EDIT_SESSION], [SESSION_STATE], [SESSION_CREATEBY], [SESSION_UPDATEDBY], [SESSION_CREATEDATE]) VALUES (@ID_USER, @DATE_SESSION, @EDIT_SESSION, @SESSION_STATE, @SESSION_CREATEBY, @SESSION_UPDATEDBY, @SESSION_CREATEDATE);
SELECT ID_SESION, ID_USER, DATE_SESSION, EDIT_SESSION, SESSION_STATE, SESSION_CREATEBY, SESSION_UPDATEDBY, SESSION_CREATEDATE FROM TBL_SESSION WHERE (ID_SESION = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_SESSION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_SESSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDIT_SESSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDIT_SESSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SESSION_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SESSION_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SESSION_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SESSION_CREATEDATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_SESSION] SET [ID_USER] = @ID_USER, [DATE_SESSION] = @DATE_SESSION, [EDIT_SESSION] = @EDIT_SESSION, [SESSION_STATE] = @SESSION_STATE, [SESSION_CREATEBY] = @SESSION_CREATEBY, [SESSION_UPDATEDBY] = @SESSION_UPDATEDBY, [SESSION_CREATEDATE] = @SESSION_CREATEDATE WHERE (([ID_SESION] = @Original_ID_SESION) AND ([ID_USER] = @Original_ID_USER) AND ([DATE_SESSION] = @Original_DATE_SESSION) AND ([EDIT_SESSION] = @Original_EDIT_SESSION) AND ([SESSION_STATE] = @Original_SESSION_STATE) AND ([SESSION_CREATEBY] = @Original_SESSION_CREATEBY) AND ((@IsNull_SESSION_UPDATEDBY = 1 AND [SESSION_UPDATEDBY] IS NULL) OR ([SESSION_UPDATEDBY] = @Original_SESSION_UPDATEDBY)) AND ([SESSION_CREATEDATE] = @Original_SESSION_CREATEDATE));
SELECT ID_SESION, ID_USER, DATE_SESSION, EDIT_SESSION, SESSION_STATE, SESSION_CREATEBY, SESSION_UPDATEDBY, SESSION_CREATEDATE FROM TBL_SESSION WHERE (ID_SESION = @ID_SESION)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_SESSION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_SESSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDIT_SESSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDIT_SESSION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SESSION_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SESSION_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SESSION_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SESSION_CREATEDATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_SESION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SESION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_SESSION", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_SESSION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDIT_SESSION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDIT_SESSION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SESSION_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SESSION_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SESSION_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SESSION_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SESSION_CREATEDATE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SESSION_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_SESION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SESION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_SESION, ID_USER, DATE_SESSION, EDIT_SESSION, SESSION_STATE, SESSION_CRE" +
                "ATEBY, SESSION_UPDATEDBY, SESSION_CREATEDATE FROM dbo.TBL_SESSION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_SESSIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_SESSIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_SESSIONDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_SESSIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_SESSIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_SESSION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_SESION, string Original_ID_USER, System.DateTime Original_DATE_SESSION, string Original_EDIT_SESSION, bool Original_SESSION_STATE, string Original_SESSION_CREATEBY, string Original_SESSION_UPDATEDBY, System.DateTime Original_SESSION_CREATEDATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_SESION));
            if ((Original_ID_USER == null)) {
                throw new global::System.ArgumentNullException("Original_ID_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ID_USER));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DATE_SESSION));
            if ((Original_EDIT_SESSION == null)) {
                throw new global::System.ArgumentNullException("Original_EDIT_SESSION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_EDIT_SESSION));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_SESSION_STATE));
            if ((Original_SESSION_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_SESSION_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_SESSION_CREATEBY));
            }
            if ((Original_SESSION_UPDATEDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SESSION_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_SESSION_CREATEDATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID_USER, System.DateTime DATE_SESSION, string EDIT_SESSION, bool SESSION_STATE, string SESSION_CREATEBY, string SESSION_UPDATEDBY, System.DateTime SESSION_CREATEDATE) {
            if ((ID_USER == null)) {
                throw new global::System.ArgumentNullException("ID_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID_USER));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATE_SESSION));
            if ((EDIT_SESSION == null)) {
                throw new global::System.ArgumentNullException("EDIT_SESSION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(EDIT_SESSION));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(SESSION_STATE));
            if ((SESSION_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("SESSION_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SESSION_CREATEBY));
            }
            if ((SESSION_UPDATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SESSION_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(SESSION_CREATEDATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ID_USER, 
                    System.DateTime DATE_SESSION, 
                    string EDIT_SESSION, 
                    bool SESSION_STATE, 
                    string SESSION_CREATEBY, 
                    string SESSION_UPDATEDBY, 
                    System.DateTime SESSION_CREATEDATE, 
                    int Original_ID_SESION, 
                    string Original_ID_USER, 
                    System.DateTime Original_DATE_SESSION, 
                    string Original_EDIT_SESSION, 
                    bool Original_SESSION_STATE, 
                    string Original_SESSION_CREATEBY, 
                    string Original_SESSION_UPDATEDBY, 
                    System.DateTime Original_SESSION_CREATEDATE, 
                    int ID_SESION) {
            if ((ID_USER == null)) {
                throw new global::System.ArgumentNullException("ID_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID_USER));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATE_SESSION));
            if ((EDIT_SESSION == null)) {
                throw new global::System.ArgumentNullException("EDIT_SESSION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(EDIT_SESSION));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(SESSION_STATE));
            if ((SESSION_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("SESSION_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SESSION_CREATEBY));
            }
            if ((SESSION_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SESSION_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(SESSION_CREATEDATE));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_SESION));
            if ((Original_ID_USER == null)) {
                throw new global::System.ArgumentNullException("Original_ID_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ID_USER));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_DATE_SESSION));
            if ((Original_EDIT_SESSION == null)) {
                throw new global::System.ArgumentNullException("Original_EDIT_SESSION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_EDIT_SESSION));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Original_SESSION_STATE));
            if ((Original_SESSION_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_SESSION_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_SESSION_CREATEBY));
            }
            if ((Original_SESSION_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_SESSION_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_SESSION_CREATEDATE));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(ID_SESION));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ID_USER, System.DateTime DATE_SESSION, string EDIT_SESSION, bool SESSION_STATE, string SESSION_CREATEBY, string SESSION_UPDATEDBY, System.DateTime SESSION_CREATEDATE, int Original_ID_SESION, string Original_ID_USER, System.DateTime Original_DATE_SESSION, string Original_EDIT_SESSION, bool Original_SESSION_STATE, string Original_SESSION_CREATEBY, string Original_SESSION_UPDATEDBY, System.DateTime Original_SESSION_CREATEDATE) {
            return this.Update(ID_USER, DATE_SESSION, EDIT_SESSION, SESSION_STATE, SESSION_CREATEBY, SESSION_UPDATEDBY, SESSION_CREATEDATE, Original_ID_SESION, Original_ID_USER, Original_DATE_SESSION, Original_EDIT_SESSION, Original_SESSION_STATE, Original_SESSION_CREATEBY, Original_SESSION_UPDATEDBY, Original_SESSION_CREATEDATE, Original_ID_SESION);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_STOCKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_STOCKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_STOCK";
            tableMapping.ColumnMappings.Add("ID_STOCK", "ID_STOCK");
            tableMapping.ColumnMappings.Add("ID_PRODUCT", "ID_PRODUCT");
            tableMapping.ColumnMappings.Add("STOCK_INITIAL_QUANTITY", "STOCK_INITIAL_QUANTITY");
            tableMapping.ColumnMappings.Add("STOCK_QUANTITY", "STOCK_QUANTITY");
            tableMapping.ColumnMappings.Add("STOCK_ADJUSTMENT", "STOCK_ADJUSTMENT");
            tableMapping.ColumnMappings.Add("STOCK_DATE_PRODUCT", "STOCK_DATE_PRODUCT");
            tableMapping.ColumnMappings.Add("STOCK_COUNTER", "STOCK_COUNTER");
            tableMapping.ColumnMappings.Add("STOCK_STATE", "STOCK_STATE");
            tableMapping.ColumnMappings.Add("STOCK_CREATEBY", "STOCK_CREATEBY");
            tableMapping.ColumnMappings.Add("STOCK_UPDATEDBY", "STOCK_UPDATEDBY");
            tableMapping.ColumnMappings.Add("STOCK_CREATEDATE", "STOCK_CREATEDATE");
            tableMapping.ColumnMappings.Add("STOCK_UPDATEDATE", "STOCK_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_STOCK] WHERE (([ID_STOCK] = @Original_ID_STOCK) AND ([ID_PRODUCT] = @Original_ID_PRODUCT) AND ([STOCK_INITIAL_QUANTITY] = @Original_STOCK_INITIAL_QUANTITY) AND ([STOCK_QUANTITY] = @Original_STOCK_QUANTITY) AND ((@IsNull_STOCK_ADJUSTMENT = 1 AND [STOCK_ADJUSTMENT] IS NULL) OR ([STOCK_ADJUSTMENT] = @Original_STOCK_ADJUSTMENT)) AND ([STOCK_DATE_PRODUCT] = @Original_STOCK_DATE_PRODUCT) AND ((@IsNull_STOCK_COUNTER = 1 AND [STOCK_COUNTER] IS NULL) OR ([STOCK_COUNTER] = @Original_STOCK_COUNTER)) AND ([STOCK_STATE] = @Original_STOCK_STATE) AND ([STOCK_CREATEBY] = @Original_STOCK_CREATEBY) AND ([STOCK_UPDATEDBY] = @Original_STOCK_UPDATEDBY) AND ([STOCK_CREATEDATE] = @Original_STOCK_CREATEDATE) AND ((@IsNull_STOCK_UPDATEDATE = 1 AND [STOCK_UPDATEDATE] IS NULL) OR ([STOCK_UPDATEDATE] = @Original_STOCK_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_INITIAL_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_INITIAL_QUANTITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_QUANTITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOCK_ADJUSTMENT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_ADJUSTMENT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_ADJUSTMENT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_ADJUSTMENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_DATE_PRODUCT", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_DATE_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOCK_COUNTER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_COUNTER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_COUNTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_COUNTER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOCK_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_STOCK] ([ID_PRODUCT], [STOCK_INITIAL_QUANTITY], [STOCK_QUANTITY], [STOCK_ADJUSTMENT], [STOCK_DATE_PRODUCT], [STOCK_COUNTER], [STOCK_STATE], [STOCK_CREATEBY], [STOCK_UPDATEDBY], [STOCK_CREATEDATE], [STOCK_UPDATEDATE]) VALUES (@ID_PRODUCT, @STOCK_INITIAL_QUANTITY, @STOCK_QUANTITY, @STOCK_ADJUSTMENT, @STOCK_DATE_PRODUCT, @STOCK_COUNTER, @STOCK_STATE, @STOCK_CREATEBY, @STOCK_UPDATEDBY, @STOCK_CREATEDATE, @STOCK_UPDATEDATE);
SELECT ID_STOCK, ID_PRODUCT, STOCK_INITIAL_QUANTITY, STOCK_QUANTITY, STOCK_ADJUSTMENT, STOCK_DATE_PRODUCT, STOCK_COUNTER, STOCK_STATE, STOCK_CREATEBY, STOCK_UPDATEDBY, STOCK_CREATEDATE, STOCK_UPDATEDATE FROM TBL_STOCK WHERE (ID_STOCK = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_INITIAL_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_INITIAL_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_ADJUSTMENT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_ADJUSTMENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_DATE_PRODUCT", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_DATE_PRODUCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_COUNTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_COUNTER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBL_STOCK] SET [ID_PRODUCT] = @ID_PRODUCT, [STOCK_INITIAL_QUANTITY]" +
                " = @STOCK_INITIAL_QUANTITY, [STOCK_QUANTITY] = @STOCK_QUANTITY, [STOCK_ADJUSTMEN" +
                "T] = @STOCK_ADJUSTMENT, [STOCK_DATE_PRODUCT] = @STOCK_DATE_PRODUCT, [STOCK_COUNT" +
                "ER] = @STOCK_COUNTER, [STOCK_STATE] = @STOCK_STATE, [STOCK_CREATEBY] = @STOCK_CR" +
                "EATEBY, [STOCK_UPDATEDBY] = @STOCK_UPDATEDBY, [STOCK_CREATEDATE] = @STOCK_CREATE" +
                "DATE, [STOCK_UPDATEDATE] = @STOCK_UPDATEDATE WHERE (([ID_STOCK] = @Original_ID_S" +
                "TOCK) AND ([ID_PRODUCT] = @Original_ID_PRODUCT) AND ([STOCK_INITIAL_QUANTITY] = " +
                "@Original_STOCK_INITIAL_QUANTITY) AND ([STOCK_QUANTITY] = @Original_STOCK_QUANTI" +
                "TY) AND ((@IsNull_STOCK_ADJUSTMENT = 1 AND [STOCK_ADJUSTMENT] IS NULL) OR ([STOC" +
                "K_ADJUSTMENT] = @Original_STOCK_ADJUSTMENT)) AND ([STOCK_DATE_PRODUCT] = @Origin" +
                "al_STOCK_DATE_PRODUCT) AND ((@IsNull_STOCK_COUNTER = 1 AND [STOCK_COUNTER] IS NU" +
                "LL) OR ([STOCK_COUNTER] = @Original_STOCK_COUNTER)) AND ([STOCK_STATE] = @Origin" +
                "al_STOCK_STATE) AND ([STOCK_CREATEBY] = @Original_STOCK_CREATEBY) AND ([STOCK_UP" +
                "DATEDBY] = @Original_STOCK_UPDATEDBY) AND ([STOCK_CREATEDATE] = @Original_STOCK_" +
                "CREATEDATE) AND ((@IsNull_STOCK_UPDATEDATE = 1 AND [STOCK_UPDATEDATE] IS NULL) O" +
                "R ([STOCK_UPDATEDATE] = @Original_STOCK_UPDATEDATE)));\r\nSELECT ID_STOCK, ID_PROD" +
                "UCT, STOCK_INITIAL_QUANTITY, STOCK_QUANTITY, STOCK_ADJUSTMENT, STOCK_DATE_PRODUC" +
                "T, STOCK_COUNTER, STOCK_STATE, STOCK_CREATEBY, STOCK_UPDATEDBY, STOCK_CREATEDATE" +
                ", STOCK_UPDATEDATE FROM TBL_STOCK WHERE (ID_STOCK = @ID_STOCK)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_INITIAL_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_INITIAL_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_QUANTITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_ADJUSTMENT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_ADJUSTMENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_DATE_PRODUCT", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_DATE_PRODUCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_COUNTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_COUNTER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOCK_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_STOCK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_PRODUCT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_INITIAL_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_INITIAL_QUANTITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_QUANTITY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_QUANTITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOCK_ADJUSTMENT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_ADJUSTMENT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_ADJUSTMENT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_ADJUSTMENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_DATE_PRODUCT", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_DATE_PRODUCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOCK_COUNTER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_COUNTER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_COUNTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_COUNTER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOCK_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOCK_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOCK_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_STOCK", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_STOCK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_STOCK, ID_PRODUCT, STOCK_INITIAL_QUANTITY, STOCK_QUANTITY, STOCK_ADJUST" +
                "MENT, STOCK_DATE_PRODUCT, STOCK_COUNTER, STOCK_STATE, STOCK_CREATEBY, STOCK_UPDA" +
                "TEDBY, STOCK_CREATEDATE, STOCK_UPDATEDATE FROM dbo.TBL_STOCK";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_STOCKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_STOCKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_STOCKDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_STOCKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_STOCKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_STOCK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_STOCK, int Original_ID_PRODUCT, int Original_STOCK_INITIAL_QUANTITY, int Original_STOCK_QUANTITY, global::System.Nullable<int> Original_STOCK_ADJUSTMENT, System.DateTime Original_STOCK_DATE_PRODUCT, global::System.Nullable<bool> Original_STOCK_COUNTER, bool Original_STOCK_STATE, string Original_STOCK_CREATEBY, string Original_STOCK_UPDATEDBY, System.DateTime Original_STOCK_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_STOCK_UPDATEDATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_STOCK));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_PRODUCT));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_STOCK_INITIAL_QUANTITY));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_STOCK_QUANTITY));
            if ((Original_STOCK_ADJUSTMENT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_STOCK_ADJUSTMENT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_STOCK_DATE_PRODUCT));
            if ((Original_STOCK_COUNTER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_STOCK_COUNTER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_STOCK_STATE));
            if ((Original_STOCK_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_STOCK_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_STOCK_CREATEBY));
            }
            if ((Original_STOCK_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("Original_STOCK_UPDATEDBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_STOCK_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_STOCK_CREATEDATE));
            if ((Original_STOCK_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_STOCK_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_PRODUCT, int STOCK_INITIAL_QUANTITY, int STOCK_QUANTITY, global::System.Nullable<int> STOCK_ADJUSTMENT, System.DateTime STOCK_DATE_PRODUCT, global::System.Nullable<bool> STOCK_COUNTER, bool STOCK_STATE, string STOCK_CREATEBY, string STOCK_UPDATEDBY, System.DateTime STOCK_CREATEDATE, global::System.Nullable<global::System.DateTime> STOCK_UPDATEDATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_PRODUCT));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(STOCK_INITIAL_QUANTITY));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(STOCK_QUANTITY));
            if ((STOCK_ADJUSTMENT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(STOCK_ADJUSTMENT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(STOCK_DATE_PRODUCT));
            if ((STOCK_COUNTER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(STOCK_COUNTER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(STOCK_STATE));
            if ((STOCK_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("STOCK_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(STOCK_CREATEBY));
            }
            if ((STOCK_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("STOCK_UPDATEDBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(STOCK_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(STOCK_CREATEDATE));
            if ((STOCK_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(STOCK_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_PRODUCT, 
                    int STOCK_INITIAL_QUANTITY, 
                    int STOCK_QUANTITY, 
                    global::System.Nullable<int> STOCK_ADJUSTMENT, 
                    System.DateTime STOCK_DATE_PRODUCT, 
                    global::System.Nullable<bool> STOCK_COUNTER, 
                    bool STOCK_STATE, 
                    string STOCK_CREATEBY, 
                    string STOCK_UPDATEDBY, 
                    System.DateTime STOCK_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> STOCK_UPDATEDATE, 
                    int Original_ID_STOCK, 
                    int Original_ID_PRODUCT, 
                    int Original_STOCK_INITIAL_QUANTITY, 
                    int Original_STOCK_QUANTITY, 
                    global::System.Nullable<int> Original_STOCK_ADJUSTMENT, 
                    System.DateTime Original_STOCK_DATE_PRODUCT, 
                    global::System.Nullable<bool> Original_STOCK_COUNTER, 
                    bool Original_STOCK_STATE, 
                    string Original_STOCK_CREATEBY, 
                    string Original_STOCK_UPDATEDBY, 
                    System.DateTime Original_STOCK_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_STOCK_UPDATEDATE, 
                    int ID_STOCK) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_PRODUCT));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(STOCK_INITIAL_QUANTITY));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(STOCK_QUANTITY));
            if ((STOCK_ADJUSTMENT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(STOCK_ADJUSTMENT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(STOCK_DATE_PRODUCT));
            if ((STOCK_COUNTER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(STOCK_COUNTER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(STOCK_STATE));
            if ((STOCK_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("STOCK_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(STOCK_CREATEBY));
            }
            if ((STOCK_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("STOCK_UPDATEDBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(STOCK_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(STOCK_CREATEDATE));
            if ((STOCK_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(STOCK_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ID_STOCK));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_PRODUCT));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_STOCK_INITIAL_QUANTITY));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_STOCK_QUANTITY));
            if ((Original_STOCK_ADJUSTMENT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_STOCK_ADJUSTMENT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_STOCK_DATE_PRODUCT));
            if ((Original_STOCK_COUNTER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(Original_STOCK_COUNTER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(Original_STOCK_STATE));
            if ((Original_STOCK_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_STOCK_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_STOCK_CREATEBY));
            }
            if ((Original_STOCK_UPDATEDBY == null)) {
                throw new global::System.ArgumentNullException("Original_STOCK_UPDATEDBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_STOCK_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_STOCK_CREATEDATE));
            if ((Original_STOCK_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_STOCK_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(ID_STOCK));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_PRODUCT, 
                    int STOCK_INITIAL_QUANTITY, 
                    int STOCK_QUANTITY, 
                    global::System.Nullable<int> STOCK_ADJUSTMENT, 
                    System.DateTime STOCK_DATE_PRODUCT, 
                    global::System.Nullable<bool> STOCK_COUNTER, 
                    bool STOCK_STATE, 
                    string STOCK_CREATEBY, 
                    string STOCK_UPDATEDBY, 
                    System.DateTime STOCK_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> STOCK_UPDATEDATE, 
                    int Original_ID_STOCK, 
                    int Original_ID_PRODUCT, 
                    int Original_STOCK_INITIAL_QUANTITY, 
                    int Original_STOCK_QUANTITY, 
                    global::System.Nullable<int> Original_STOCK_ADJUSTMENT, 
                    System.DateTime Original_STOCK_DATE_PRODUCT, 
                    global::System.Nullable<bool> Original_STOCK_COUNTER, 
                    bool Original_STOCK_STATE, 
                    string Original_STOCK_CREATEBY, 
                    string Original_STOCK_UPDATEDBY, 
                    System.DateTime Original_STOCK_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_STOCK_UPDATEDATE) {
            return this.Update(ID_PRODUCT, STOCK_INITIAL_QUANTITY, STOCK_QUANTITY, STOCK_ADJUSTMENT, STOCK_DATE_PRODUCT, STOCK_COUNTER, STOCK_STATE, STOCK_CREATEBY, STOCK_UPDATEDBY, STOCK_CREATEDATE, STOCK_UPDATEDATE, Original_ID_STOCK, Original_ID_PRODUCT, Original_STOCK_INITIAL_QUANTITY, Original_STOCK_QUANTITY, Original_STOCK_ADJUSTMENT, Original_STOCK_DATE_PRODUCT, Original_STOCK_COUNTER, Original_STOCK_STATE, Original_STOCK_CREATEBY, Original_STOCK_UPDATEDBY, Original_STOCK_CREATEDATE, Original_STOCK_UPDATEDATE, Original_ID_STOCK);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_USERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBL_USERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_USER";
            tableMapping.ColumnMappings.Add("ID_USER", "ID_USER");
            tableMapping.ColumnMappings.Add("USER_NAME", "USER_NAME");
            tableMapping.ColumnMappings.Add("USER_EMAIL", "USER_EMAIL");
            tableMapping.ColumnMappings.Add("ID_DPT", "ID_DPT");
            tableMapping.ColumnMappings.Add("ID_AREA", "ID_AREA");
            tableMapping.ColumnMappings.Add("ID_POSITION", "ID_POSITION");
            tableMapping.ColumnMappings.Add("ID_ROLE", "ID_ROLE");
            tableMapping.ColumnMappings.Add("USER_NICKNAME", "USER_NICKNAME");
            tableMapping.ColumnMappings.Add("USER_PASSWORD", "USER_PASSWORD");
            tableMapping.ColumnMappings.Add("USER_STATE", "USER_STATE");
            tableMapping.ColumnMappings.Add("USER_CREATEBY", "USER_CREATEBY");
            tableMapping.ColumnMappings.Add("USER_UPDATEDBY", "USER_UPDATEDBY");
            tableMapping.ColumnMappings.Add("USER_CREATEDATE", "USER_CREATEDATE");
            tableMapping.ColumnMappings.Add("USER_UPDATEDATE", "USER_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TBL_USER] WHERE (([ID_USER] = @Original_ID_USER) AND ([USER_NAME] = @Original_USER_NAME) AND ([USER_EMAIL] = @Original_USER_EMAIL) AND ([ID_DPT] = @Original_ID_DPT) AND ([ID_AREA] = @Original_ID_AREA) AND ([ID_POSITION] = @Original_ID_POSITION) AND ([ID_ROLE] = @Original_ID_ROLE) AND ([USER_NICKNAME] = @Original_USER_NICKNAME) AND ([USER_PASSWORD] = @Original_USER_PASSWORD) AND ([USER_STATE] = @Original_USER_STATE) AND ([USER_CREATEBY] = @Original_USER_CREATEBY) AND ((@IsNull_USER_UPDATEDBY = 1 AND [USER_UPDATEDBY] IS NULL) OR ([USER_UPDATEDBY] = @Original_USER_UPDATEDBY)) AND ([USER_CREATEDATE] = @Original_USER_CREATEDATE) AND ((@IsNull_USER_UPDATEDATE = 1 AND [USER_UPDATEDATE] IS NULL) OR ([USER_UPDATEDATE] = @Original_USER_UPDATEDATE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_AREA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_POSITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_POSITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ROLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ROLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_NICKNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_NICKNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_PASSWORD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_PASSWORD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USER_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USER_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_USER] ([ID_USER], [USER_NAME], [USER_EMAIL], [ID_DPT], [ID_AREA], [ID_POSITION], [ID_ROLE], [USER_NICKNAME], [USER_PASSWORD], [USER_STATE], [USER_CREATEBY], [USER_UPDATEDBY], [USER_CREATEDATE], [USER_UPDATEDATE]) VALUES (@ID_USER, @USER_NAME, @USER_EMAIL, @ID_DPT, @ID_AREA, @ID_POSITION, @ID_ROLE, @USER_NICKNAME, @USER_PASSWORD, @USER_STATE, @USER_CREATEBY, @USER_UPDATEDBY, @USER_CREATEDATE, @USER_UPDATEDATE);
SELECT ID_USER, USER_NAME, USER_EMAIL, ID_DPT, ID_AREA, ID_POSITION, ID_ROLE, USER_NICKNAME, USER_PASSWORD, USER_STATE, USER_CREATEBY, USER_UPDATEDBY, USER_CREATEDATE, USER_UPDATEDATE FROM TBL_USER WHERE (ID_USER = @ID_USER)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_AREA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_POSITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_POSITION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ROLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ROLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_NICKNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_NICKNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_PASSWORD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_PASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TBL_USER] SET [ID_USER] = @ID_USER, [USER_NAME] = @USER_NAME, [USER_EMAIL] = @USER_EMAIL, [ID_DPT] = @ID_DPT, [ID_AREA] = @ID_AREA, [ID_POSITION] = @ID_POSITION, [ID_ROLE] = @ID_ROLE, [USER_NICKNAME] = @USER_NICKNAME, [USER_PASSWORD] = @USER_PASSWORD, [USER_STATE] = @USER_STATE, [USER_CREATEBY] = @USER_CREATEBY, [USER_UPDATEDBY] = @USER_UPDATEDBY, [USER_CREATEDATE] = @USER_CREATEDATE, [USER_UPDATEDATE] = @USER_UPDATEDATE WHERE (([ID_USER] = @Original_ID_USER) AND ([USER_NAME] = @Original_USER_NAME) AND ([USER_EMAIL] = @Original_USER_EMAIL) AND ([ID_DPT] = @Original_ID_DPT) AND ([ID_AREA] = @Original_ID_AREA) AND ([ID_POSITION] = @Original_ID_POSITION) AND ([ID_ROLE] = @Original_ID_ROLE) AND ([USER_NICKNAME] = @Original_USER_NICKNAME) AND ([USER_PASSWORD] = @Original_USER_PASSWORD) AND ([USER_STATE] = @Original_USER_STATE) AND ([USER_CREATEBY] = @Original_USER_CREATEBY) AND ((@IsNull_USER_UPDATEDBY = 1 AND [USER_UPDATEDBY] IS NULL) OR ([USER_UPDATEDBY] = @Original_USER_UPDATEDBY)) AND ([USER_CREATEDATE] = @Original_USER_CREATEDATE) AND ((@IsNull_USER_UPDATEDATE = 1 AND [USER_UPDATEDATE] IS NULL) OR ([USER_UPDATEDATE] = @Original_USER_UPDATEDATE)));
SELECT ID_USER, USER_NAME, USER_EMAIL, ID_DPT, ID_AREA, ID_POSITION, ID_ROLE, USER_NICKNAME, USER_PASSWORD, USER_STATE, USER_CREATEBY, USER_UPDATEDBY, USER_CREATEDATE, USER_UPDATEDATE FROM TBL_USER WHERE (ID_USER = @ID_USER)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_AREA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_POSITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_POSITION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ROLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ROLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_NICKNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_NICKNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_PASSWORD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_PASSWORD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_CREATEBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_CREATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_USER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_USER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_EMAIL", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_AREA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_AREA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_POSITION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_POSITION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ROLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ROLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_NICKNAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_NICKNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_PASSWORD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_PASSWORD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_STATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_CREATEBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_CREATEBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USER_UPDATEDBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_UPDATEDBY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_CREATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_CREATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_USER_UPDATEDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USER_UPDATEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USER_UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_USER, USER_NAME, USER_EMAIL, ID_DPT, ID_AREA, ID_POSITION, ID_ROLE, USE" +
                "R_NICKNAME, USER_PASSWORD, USER_STATE, USER_CREATEBY, USER_UPDATEDBY, USER_CREAT" +
                "EDATE, USER_UPDATEDATE FROM dbo.TBL_USER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.TBL_USERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.TBL_USERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ControlAppDevDataSetIsaac.TBL_USERDataTable dataTable = new ControlAppDevDataSetIsaac.TBL_USERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac.TBL_USERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ControlAppDevDataSetIsaac dataSet) {
            return this.Adapter.Update(dataSet, "TBL_USER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ID_USER, string Original_USER_NAME, string Original_USER_EMAIL, int Original_ID_DPT, int Original_ID_AREA, int Original_ID_POSITION, int Original_ID_ROLE, string Original_USER_NICKNAME, string Original_USER_PASSWORD, bool Original_USER_STATE, string Original_USER_CREATEBY, string Original_USER_UPDATEDBY, System.DateTime Original_USER_CREATEDATE, global::System.Nullable<global::System.DateTime> Original_USER_UPDATEDATE) {
            if ((Original_ID_USER == null)) {
                throw new global::System.ArgumentNullException("Original_ID_USER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ID_USER));
            }
            if ((Original_USER_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_USER_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_USER_NAME));
            }
            if ((Original_USER_EMAIL == null)) {
                throw new global::System.ArgumentNullException("Original_USER_EMAIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_USER_EMAIL));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ID_DPT));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ID_AREA));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_ID_POSITION));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ID_ROLE));
            if ((Original_USER_NICKNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USER_NICKNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_USER_NICKNAME));
            }
            if ((Original_USER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_USER_PASSWORD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_USER_PASSWORD));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_USER_STATE));
            if ((Original_USER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_USER_CREATEBY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_USER_CREATEBY));
            }
            if ((Original_USER_UPDATEDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_USER_UPDATEDBY));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_USER_CREATEDATE));
            if ((Original_USER_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_USER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID_USER, string USER_NAME, string USER_EMAIL, int ID_DPT, int ID_AREA, int ID_POSITION, int ID_ROLE, string USER_NICKNAME, string USER_PASSWORD, bool USER_STATE, string USER_CREATEBY, string USER_UPDATEDBY, System.DateTime USER_CREATEDATE, global::System.Nullable<global::System.DateTime> USER_UPDATEDATE) {
            if ((ID_USER == null)) {
                throw new global::System.ArgumentNullException("ID_USER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID_USER));
            }
            if ((USER_NAME == null)) {
                throw new global::System.ArgumentNullException("USER_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USER_NAME));
            }
            if ((USER_EMAIL == null)) {
                throw new global::System.ArgumentNullException("USER_EMAIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(USER_EMAIL));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_DPT));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ID_AREA));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ID_POSITION));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(ID_ROLE));
            if ((USER_NICKNAME == null)) {
                throw new global::System.ArgumentNullException("USER_NICKNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(USER_NICKNAME));
            }
            if ((USER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("USER_PASSWORD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(USER_PASSWORD));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(USER_STATE));
            if ((USER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("USER_CREATEBY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(USER_CREATEBY));
            }
            if ((USER_UPDATEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(USER_UPDATEDBY));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(USER_CREATEDATE));
            if ((USER_UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(USER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ID_USER, 
                    string USER_NAME, 
                    string USER_EMAIL, 
                    int ID_DPT, 
                    int ID_AREA, 
                    int ID_POSITION, 
                    int ID_ROLE, 
                    string USER_NICKNAME, 
                    string USER_PASSWORD, 
                    bool USER_STATE, 
                    string USER_CREATEBY, 
                    string USER_UPDATEDBY, 
                    System.DateTime USER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> USER_UPDATEDATE, 
                    string Original_ID_USER, 
                    string Original_USER_NAME, 
                    string Original_USER_EMAIL, 
                    int Original_ID_DPT, 
                    int Original_ID_AREA, 
                    int Original_ID_POSITION, 
                    int Original_ID_ROLE, 
                    string Original_USER_NICKNAME, 
                    string Original_USER_PASSWORD, 
                    bool Original_USER_STATE, 
                    string Original_USER_CREATEBY, 
                    string Original_USER_UPDATEDBY, 
                    System.DateTime Original_USER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_USER_UPDATEDATE) {
            if ((ID_USER == null)) {
                throw new global::System.ArgumentNullException("ID_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID_USER));
            }
            if ((USER_NAME == null)) {
                throw new global::System.ArgumentNullException("USER_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(USER_NAME));
            }
            if ((USER_EMAIL == null)) {
                throw new global::System.ArgumentNullException("USER_EMAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(USER_EMAIL));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_DPT));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ID_AREA));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_POSITION));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ID_ROLE));
            if ((USER_NICKNAME == null)) {
                throw new global::System.ArgumentNullException("USER_NICKNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(USER_NICKNAME));
            }
            if ((USER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("USER_PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(USER_PASSWORD));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(USER_STATE));
            if ((USER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("USER_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(USER_CREATEBY));
            }
            if ((USER_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(USER_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(USER_CREATEDATE));
            if ((USER_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(USER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_USER == null)) {
                throw new global::System.ArgumentNullException("Original_ID_USER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ID_USER));
            }
            if ((Original_USER_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_USER_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_USER_NAME));
            }
            if ((Original_USER_EMAIL == null)) {
                throw new global::System.ArgumentNullException("Original_USER_EMAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_USER_EMAIL));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_ID_DPT));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_ID_AREA));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_ID_POSITION));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_ID_ROLE));
            if ((Original_USER_NICKNAME == null)) {
                throw new global::System.ArgumentNullException("Original_USER_NICKNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_USER_NICKNAME));
            }
            if ((Original_USER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_USER_PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_USER_PASSWORD));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(Original_USER_STATE));
            if ((Original_USER_CREATEBY == null)) {
                throw new global::System.ArgumentNullException("Original_USER_CREATEBY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_USER_CREATEBY));
            }
            if ((Original_USER_UPDATEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_USER_UPDATEDBY));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_USER_CREATEDATE));
            if ((Original_USER_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_USER_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string USER_NAME, 
                    string USER_EMAIL, 
                    int ID_DPT, 
                    int ID_AREA, 
                    int ID_POSITION, 
                    int ID_ROLE, 
                    string USER_NICKNAME, 
                    string USER_PASSWORD, 
                    bool USER_STATE, 
                    string USER_CREATEBY, 
                    string USER_UPDATEDBY, 
                    System.DateTime USER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> USER_UPDATEDATE, 
                    string Original_ID_USER, 
                    string Original_USER_NAME, 
                    string Original_USER_EMAIL, 
                    int Original_ID_DPT, 
                    int Original_ID_AREA, 
                    int Original_ID_POSITION, 
                    int Original_ID_ROLE, 
                    string Original_USER_NICKNAME, 
                    string Original_USER_PASSWORD, 
                    bool Original_USER_STATE, 
                    string Original_USER_CREATEBY, 
                    string Original_USER_UPDATEDBY, 
                    System.DateTime Original_USER_CREATEDATE, 
                    global::System.Nullable<global::System.DateTime> Original_USER_UPDATEDATE) {
            return this.Update(Original_ID_USER, USER_NAME, USER_EMAIL, ID_DPT, ID_AREA, ID_POSITION, ID_ROLE, USER_NICKNAME, USER_PASSWORD, USER_STATE, USER_CREATEBY, USER_UPDATEDBY, USER_CREATEDATE, USER_UPDATEDATE, Original_ID_USER, Original_USER_NAME, Original_USER_EMAIL, Original_ID_DPT, Original_ID_AREA, Original_ID_POSITION, Original_ID_ROLE, Original_USER_NICKNAME, Original_USER_PASSWORD, Original_USER_STATE, Original_USER_CREATEBY, Original_USER_UPDATEDBY, Original_USER_CREATEDATE, Original_USER_UPDATEDATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_AREATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_AREATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_AREA";
            tableMapping.ColumnMappings.Add("ID_AREA", "ID_AREA");
            tableMapping.ColumnMappings.Add("NAME_DPT", "NAME_DPT");
            tableMapping.ColumnMappings.Add("AREA_NAME", "AREA_NAME");
            tableMapping.ColumnMappings.Add("AREA_STATE", "AREA_STATE");
            tableMapping.ColumnMappings.Add("AREA_CREATEBY", "AREA_CREATEBY");
            tableMapping.ColumnMappings.Add("AREA_UPDATEDBY", "AREA_UPDATEDBY");
            tableMapping.ColumnMappings.Add("AREA_CREATEDATE", "AREA_CREATEDATE");
            tableMapping.ColumnMappings.Add("AREA_UPDATEDATE", "AREA_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_AREA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_AREA", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_DPT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pAREA_NAME", global::System.Data.SqlDbType.VarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_AREADataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_AREA, global::System.Nullable<int> pID_DPT, string pAREA_NAME) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_AREA.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_AREA.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_DPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_DPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pAREA_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pAREA_NAME));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_AREADataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_AREA, global::System.Nullable<int> pID_DPT, string pAREA_NAME) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_AREA.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_AREA.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_DPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_DPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pAREA_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pAREA_NAME));
            }
            ControlAppDevDataSetIsaac.SP_CRUD_AREADataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_AREADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_CUSTOMERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_CUSTOMERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_CUSTOMER";
            tableMapping.ColumnMappings.Add("ID_CUSTOMER", "ID_CUSTOMER");
            tableMapping.ColumnMappings.Add("CUSTOMER_NAME", "CUSTOMER_NAME");
            tableMapping.ColumnMappings.Add("CUSTOMER_STATE", "CUSTOMER_STATE");
            tableMapping.ColumnMappings.Add("CUSTOMER_CREATEBY", "CUSTOMER_CREATEBY");
            tableMapping.ColumnMappings.Add("CUSTOMER_UPDATEDBY", "CUSTOMER_UPDATEDBY");
            tableMapping.ColumnMappings.Add("CUSTOMER_CREATEDATE", "CUSTOMER_CREATEDATE");
            tableMapping.ColumnMappings.Add("CUSTOMER_UPDATEDATE", "CUSTOMER_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_CUSTOMER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_CUSTOMER", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pCUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_CUSTOMERDataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, string pID_CUSTOMER, string pCUSTOMER_NAME) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_CUSTOMER == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pID_CUSTOMER));
            }
            if ((pCUSTOMER_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pCUSTOMER_NAME));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_CUSTOMERDataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, string pID_CUSTOMER, string pCUSTOMER_NAME) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_CUSTOMER == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pID_CUSTOMER));
            }
            if ((pCUSTOMER_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pCUSTOMER_NAME));
            }
            ControlAppDevDataSetIsaac.SP_CRUD_CUSTOMERDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_CUSTOMERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_CXCTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_CXCTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_CXC";
            tableMapping.ColumnMappings.Add("ID_CXC", "ID_CXC");
            tableMapping.ColumnMappings.Add("USER_NAME", "USER_NAME");
            tableMapping.ColumnMappings.Add("DATE_CXC", "DATE_CXC");
            tableMapping.ColumnMappings.Add("QUANTITY_RETREAT", "QUANTITY_RETREAT");
            tableMapping.ColumnMappings.Add("QUANTITY_RETURN", "QUANTITY_RETURN");
            tableMapping.ColumnMappings.Add("TOTAL_CXC", "TOTAL_CXC");
            tableMapping.ColumnMappings.Add("BALANCE_CXC", "BALANCE_CXC");
            tableMapping.ColumnMappings.Add("CXC_STATE", "CXC_STATE");
            tableMapping.ColumnMappings.Add("CXC_CREATEBY", "CXC_CREATEBY");
            tableMapping.ColumnMappings.Add("CXC_UPDATEDBY", "CXC_UPDATEDBY");
            tableMapping.ColumnMappings.Add("CXC_CREATEDATE", "CXC_CREATEDATE");
            tableMapping.ColumnMappings.Add("CXC_UPDATEDATE", "CXC_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_CXC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_CXC", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_USER", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_STOCK", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pQUANTITY_RETREAT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pQUANTITY_RETURN", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pTOTAL_CXC", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pBALANCE_CXC", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pCUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pDATE_STOCK", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_CXCDataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_CXC, string pID_USER, global::System.Nullable<int> pID_STOCK, global::System.Nullable<int> pQUANTITY_RETREAT, global::System.Nullable<int> pQUANTITY_RETURN, global::System.Nullable<decimal> pTOTAL_CXC, global::System.Nullable<int> pBALANCE_CXC, string pCUSTOMER_NAME, global::System.Nullable<global::System.DateTime> pDATE_STOCK) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_CXC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_CXC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_USER == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pID_USER));
            }
            if ((pID_STOCK.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pID_STOCK.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pQUANTITY_RETREAT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pQUANTITY_RETREAT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pQUANTITY_RETURN.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(pQUANTITY_RETURN.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((pTOTAL_CXC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((decimal)(pTOTAL_CXC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((pBALANCE_CXC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((int)(pBALANCE_CXC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((pCUSTOMER_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(pCUSTOMER_NAME));
            }
            if ((pDATE_STOCK.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((System.DateTime)(pDATE_STOCK.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_CXCDataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_CXC, string pID_USER, global::System.Nullable<int> pID_STOCK, global::System.Nullable<int> pQUANTITY_RETREAT, global::System.Nullable<int> pQUANTITY_RETURN, global::System.Nullable<decimal> pTOTAL_CXC, global::System.Nullable<int> pBALANCE_CXC, string pCUSTOMER_NAME, global::System.Nullable<global::System.DateTime> pDATE_STOCK) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_CXC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_CXC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_USER == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pID_USER));
            }
            if ((pID_STOCK.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pID_STOCK.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pQUANTITY_RETREAT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pQUANTITY_RETREAT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pQUANTITY_RETURN.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(pQUANTITY_RETURN.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((pTOTAL_CXC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((decimal)(pTOTAL_CXC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((pBALANCE_CXC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((int)(pBALANCE_CXC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((pCUSTOMER_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(pCUSTOMER_NAME));
            }
            if ((pDATE_STOCK.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((System.DateTime)(pDATE_STOCK.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            ControlAppDevDataSetIsaac.SP_CRUD_CXCDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_CXCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_DPTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_DPTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_DPT";
            tableMapping.ColumnMappings.Add("ID_DPT", "ID_DPT");
            tableMapping.ColumnMappings.Add("NAME_DPT", "NAME_DPT");
            tableMapping.ColumnMappings.Add("STATE_DPT", "STATE_DPT");
            tableMapping.ColumnMappings.Add("CREATEBY_DPT", "CREATEBY_DPT");
            tableMapping.ColumnMappings.Add("UPDATEBY_DPT", "UPDATEBY_DPT");
            tableMapping.ColumnMappings.Add("CREATEDATE_DPT", "CREATEDATE_DPT");
            tableMapping.ColumnMappings.Add("UPDATEDATE_DPT", "UPDATEDATE_DPT");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_DPT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_DPT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pNAME_DPT", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_DPTDataTable dataTable, global::System.Nullable<int> p_ACTION, global::System.Nullable<int> pID_DPT, string pID_BY, string pNAME_DPT) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_DPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pID_DPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pID_BY));
            }
            if ((pNAME_DPT == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pNAME_DPT));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_DPTDataTable GetData(global::System.Nullable<int> p_ACTION, global::System.Nullable<int> pID_DPT, string pID_BY, string pNAME_DPT) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_DPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pID_DPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pID_BY));
            }
            if ((pNAME_DPT == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pNAME_DPT));
            }
            ControlAppDevDataSetIsaac.SP_CRUD_DPTDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_DPTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_ORDERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_ORDERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_ORDER";
            tableMapping.ColumnMappings.Add("ID_ORDER", "ID_ORDER");
            tableMapping.ColumnMappings.Add("ID_PREPAID", "ID_PREPAID");
            tableMapping.ColumnMappings.Add("ORDER_QUANTITY", "ORDER_QUANTITY");
            tableMapping.ColumnMappings.Add("ORDER_DATE", "ORDER_DATE");
            tableMapping.ColumnMappings.Add("ORDER_DELIVERY", "ORDER_DELIVERY");
            tableMapping.ColumnMappings.Add("ORDER_STATE", "ORDER_STATE");
            tableMapping.ColumnMappings.Add("ORDER_CREATEBY", "ORDER_CREATEBY");
            tableMapping.ColumnMappings.Add("ORDER_UPDATEDBY", "ORDER_UPDATEDBY");
            tableMapping.ColumnMappings.Add("ORDER_CREATEDATE", "ORDER_CREATEDATE");
            tableMapping.ColumnMappings.Add("ORDER_UPDATEDATE", "ORDER_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_ORDER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_ORDER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_PREPAID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pORDER_QUANTITY", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pORDER_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pORDER_DELIVERY", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_ORDERDataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_ORDER, global::System.Nullable<int> pID_PREPAID, global::System.Nullable<int> pORDER_QUANTITY, global::System.Nullable<global::System.DateTime> pORDER_DATE, global::System.Nullable<bool> pORDER_DELIVERY) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_ORDER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_ORDER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_PREPAID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_PREPAID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pORDER_QUANTITY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pORDER_QUANTITY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pORDER_DATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((System.DateTime)(pORDER_DATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pORDER_DELIVERY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(pORDER_DELIVERY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_ORDERDataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_ORDER, global::System.Nullable<int> pID_PREPAID, global::System.Nullable<int> pORDER_QUANTITY, global::System.Nullable<global::System.DateTime> pORDER_DATE, global::System.Nullable<bool> pORDER_DELIVERY) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_ORDER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_ORDER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_PREPAID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_PREPAID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pORDER_QUANTITY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pORDER_QUANTITY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pORDER_DATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((System.DateTime)(pORDER_DATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pORDER_DELIVERY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(pORDER_DELIVERY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            ControlAppDevDataSetIsaac.SP_CRUD_ORDERDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_ORDERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_PERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_PERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_PER";
            tableMapping.ColumnMappings.Add("ID_PER", "ID_PER");
            tableMapping.ColumnMappings.Add("NAME_DPT", "NAME_DPT");
            tableMapping.ColumnMappings.Add("NAME_PERMISSION", "NAME_PERMISSION");
            tableMapping.ColumnMappings.Add("DESCRIP_PERMISSION", "DESCRIP_PERMISSION");
            tableMapping.ColumnMappings.Add("PER_STATE", "PER_STATE");
            tableMapping.ColumnMappings.Add("PER_CREATEBY", "PER_CREATEBY");
            tableMapping.ColumnMappings.Add("PER_UPDATEDBY", "PER_UPDATEDBY");
            tableMapping.ColumnMappings.Add("PER_CREATEDATE", "PER_CREATEDATE");
            tableMapping.ColumnMappings.Add("PER_UPDATEDATE", "PER_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_PER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_PER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_DPT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pNAME_PER", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pDESCRIP_PER", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_PERDataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_PER, global::System.Nullable<int> pID_DPT, string pNAME_PER, string pDESCRIP_PER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_PER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_PER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_DPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_DPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pNAME_PER == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pNAME_PER));
            }
            if ((pDESCRIP_PER == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(pDESCRIP_PER));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_PERDataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_PER, global::System.Nullable<int> pID_DPT, string pNAME_PER, string pDESCRIP_PER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_PER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_PER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_DPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_DPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pNAME_PER == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pNAME_PER));
            }
            if ((pDESCRIP_PER == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(pDESCRIP_PER));
            }
            ControlAppDevDataSetIsaac.SP_CRUD_PERDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_PERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_POSITIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_POSITIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_POSITION";
            tableMapping.ColumnMappings.Add("ID_POSITION", "ID_POSITION");
            tableMapping.ColumnMappings.Add("AREA_NAME", "AREA_NAME");
            tableMapping.ColumnMappings.Add("NAME_POSITION", "NAME_POSITION");
            tableMapping.ColumnMappings.Add("POSITION_STATE", "POSITION_STATE");
            tableMapping.ColumnMappings.Add("CREATEBY_PST", "CREATEBY_PST");
            tableMapping.ColumnMappings.Add("UPDATEBY_PST", "UPDATEBY_PST");
            tableMapping.ColumnMappings.Add("POSITION_CREATEDATE", "POSITION_CREATEDATE");
            tableMapping.ColumnMappings.Add("POSITION_UPDATEDATE", "POSITION_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_POSITION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_PST", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_AREA", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pNAME_PST", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_POSITIONDataTable dataTable, global::System.Nullable<int> p_ACTION, global::System.Nullable<int> pID_PST, global::System.Nullable<int> pID_AREA, string pID_BY, string pNAME_PST) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_PST.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pID_PST.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pID_AREA.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_AREA.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pID_BY));
            }
            if ((pNAME_PST == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pNAME_PST));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_POSITIONDataTable GetData(global::System.Nullable<int> p_ACTION, global::System.Nullable<int> pID_PST, global::System.Nullable<int> pID_AREA, string pID_BY, string pNAME_PST) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_PST.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pID_PST.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pID_AREA.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_AREA.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pID_BY));
            }
            if ((pNAME_PST == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pNAME_PST));
            }
            ControlAppDevDataSetIsaac.SP_CRUD_POSITIONDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_POSITIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_PREPAIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_PREPAIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_PREPAID";
            tableMapping.ColumnMappings.Add("ID_PREPAID", "ID_PREPAID");
            tableMapping.ColumnMappings.Add("CUSTOMER_NAME", "CUSTOMER_NAME");
            tableMapping.ColumnMappings.Add("DESCRIP_PRICE", "DESCRIP_PRICE");
            tableMapping.ColumnMappings.Add("PREPAID_QUANTITY", "PREPAID_QUANTITY");
            tableMapping.ColumnMappings.Add("PREPAID_TOTAL", "PREPAID_TOTAL");
            tableMapping.ColumnMappings.Add("PREPAID_CASH", "PREPAID_CASH");
            tableMapping.ColumnMappings.Add("PREPAID_CHANGE", "PREPAID_CHANGE");
            tableMapping.ColumnMappings.Add("PREPAID_BALANCE", "PREPAID_BALANCE");
            tableMapping.ColumnMappings.Add("PREPAID_STATE", "PREPAID_STATE");
            tableMapping.ColumnMappings.Add("PREPAID_CREATEBY", "PREPAID_CREATEBY");
            tableMapping.ColumnMappings.Add("PREPAID_UPDATEDBY", "PREPAID_UPDATEDBY");
            tableMapping.ColumnMappings.Add("PREPAID_CREATEDATE", "PREPAID_CREATEDATE");
            tableMapping.ColumnMappings.Add("PREPAID_UPDATEDATE", "PREPAID_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_PREPAID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_PREPAID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_CUSTOMER", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_PRODUCT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pPREPAID_QUANTITY", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pPREPAID_TOTAL", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pPREPAID_CASH", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pPREPAID_CHANGE", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pPREPAID_BALANCE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pCUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_PREPAIDDataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_PREPAID, string pID_CUSTOMER, global::System.Nullable<int> pID_PRODUCT, global::System.Nullable<int> pPREPAID_QUANTITY, global::System.Nullable<decimal> pPREPAID_TOTAL, global::System.Nullable<decimal> pPREPAID_CASH, global::System.Nullable<decimal> pPREPAID_CHANGE, global::System.Nullable<int> pPREPAID_BALANCE, string pCUSTOMER_NAME) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_PREPAID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_PREPAID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_CUSTOMER == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pID_CUSTOMER));
            }
            if ((pID_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pID_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pPREPAID_QUANTITY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pPREPAID_QUANTITY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pPREPAID_TOTAL.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((decimal)(pPREPAID_TOTAL.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((pPREPAID_CASH.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((decimal)(pPREPAID_CASH.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((pPREPAID_CHANGE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((decimal)(pPREPAID_CHANGE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((pPREPAID_BALANCE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((int)(pPREPAID_BALANCE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((pCUSTOMER_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = ((string)(pCUSTOMER_NAME));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_PREPAIDDataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_PREPAID, string pID_CUSTOMER, global::System.Nullable<int> pID_PRODUCT, global::System.Nullable<int> pPREPAID_QUANTITY, global::System.Nullable<decimal> pPREPAID_TOTAL, global::System.Nullable<decimal> pPREPAID_CASH, global::System.Nullable<decimal> pPREPAID_CHANGE, global::System.Nullable<int> pPREPAID_BALANCE, string pCUSTOMER_NAME) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_PREPAID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_PREPAID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_CUSTOMER == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pID_CUSTOMER));
            }
            if ((pID_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pID_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pPREPAID_QUANTITY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pPREPAID_QUANTITY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pPREPAID_TOTAL.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((decimal)(pPREPAID_TOTAL.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((pPREPAID_CASH.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((decimal)(pPREPAID_CASH.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((pPREPAID_CHANGE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((decimal)(pPREPAID_CHANGE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((pPREPAID_BALANCE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((int)(pPREPAID_BALANCE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((pCUSTOMER_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = ((string)(pCUSTOMER_NAME));
            }
            ControlAppDevDataSetIsaac.SP_CRUD_PREPAIDDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_PREPAIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_PRODUCTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_PRODUCTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_PRODUCT";
            tableMapping.ColumnMappings.Add("ID_PRODUCT", "ID_PRODUCT");
            tableMapping.ColumnMappings.Add("TOTAL_PRODUCT", "TOTAL_PRODUCT");
            tableMapping.ColumnMappings.Add("DESCRIP_PRICE", "DESCRIP_PRICE");
            tableMapping.ColumnMappings.Add("PRODUCT_STATE", "PRODUCT_STATE");
            tableMapping.ColumnMappings.Add("PRICE_TAG_CREATEBY", "PRICE_TAG_CREATEBY");
            tableMapping.ColumnMappings.Add("PRICE_TAG_UPDATEDBY", "PRICE_TAG_UPDATEDBY");
            tableMapping.ColumnMappings.Add("PRODUCT_CREATEDATE", "PRODUCT_CREATEDATE");
            tableMapping.ColumnMappings.Add("PRODUCT_UPDATEDATE", "PRODUCT_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_PRODUCT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_PRODUCT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pTOTAL_PRODUCT", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pDESCRIP_PRICE", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_PRODUCTDataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_PRODUCT, global::System.Nullable<decimal> pTOTAL_PRODUCT, string pDESCRIP_PRICE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pTOTAL_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(pTOTAL_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pDESCRIP_PRICE == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pDESCRIP_PRICE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_PRODUCTDataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_PRODUCT, global::System.Nullable<decimal> pTOTAL_PRODUCT, string pDESCRIP_PRICE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pTOTAL_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(pTOTAL_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pDESCRIP_PRICE == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pDESCRIP_PRICE));
            }
            ControlAppDevDataSetIsaac.SP_CRUD_PRODUCTDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_PRODUCTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_RECEIPTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_RECEIPTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_RECEIPT";
            tableMapping.ColumnMappings.Add("ID_RECEIPT", "ID_RECEIPT");
            tableMapping.ColumnMappings.Add("NAME_CUSTOMER", "NAME_CUSTOMER");
            tableMapping.ColumnMappings.Add("DATE_RECEIPT", "DATE_RECEIPT");
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY");
            tableMapping.ColumnMappings.Add("TOTAL_RECEIPT", "TOTAL_RECEIPT");
            tableMapping.ColumnMappings.Add("DESCRIP_PRICE", "DESCRIP_PRICE");
            tableMapping.ColumnMappings.Add("UNIT_PRICE", "UNIT_PRICE");
            tableMapping.ColumnMappings.Add("CASH", "CASH");
            tableMapping.ColumnMappings.Add("CHANGE", "CHANGE");
            tableMapping.ColumnMappings.Add("RECEIPT_STATE", "RECEIPT_STATE");
            tableMapping.ColumnMappings.Add("RECEIPT_CREATEBY", "RECEIPT_CREATEBY");
            tableMapping.ColumnMappings.Add("RECEIPT_UPDATEDBY", "RECEIPT_UPDATEDBY");
            tableMapping.ColumnMappings.Add("RECEIPT_CREATEDATE", "RECEIPT_CREATEDATE");
            tableMapping.ColumnMappings.Add("RECEIPT_UPDATEDATE", "RECEIPT_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_RECEIPT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_RECEIPT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_STOCK", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pCUSTOMER_NAME", global::System.Data.SqlDbType.VarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pQUANTITY", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pTOTAL_RECEIPT", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_PRODUCT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pUNIT_PRICE", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pCASH", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pCHANGE", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_RECEIPTDataTable dataTable, global::System.Nullable<int> p_ACTION, global::System.Nullable<int> pID_RECEIPT, string pID_BY, global::System.Nullable<int> pID_STOCK, string pCUSTOMER_NAME, global::System.Nullable<int> pQUANTITY, global::System.Nullable<decimal> pTOTAL_RECEIPT, global::System.Nullable<int> pID_PRODUCT, global::System.Nullable<decimal> pUNIT_PRICE, global::System.Nullable<decimal> pCASH, global::System.Nullable<decimal> pCHANGE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_RECEIPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pID_RECEIPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pID_BY));
            }
            if ((pID_STOCK.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_STOCK.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pCUSTOMER_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pCUSTOMER_NAME));
            }
            if ((pQUANTITY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pQUANTITY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pTOTAL_RECEIPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((decimal)(pTOTAL_RECEIPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((pID_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(pID_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((pUNIT_PRICE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((decimal)(pUNIT_PRICE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((pCASH.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((decimal)(pCASH.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((pCHANGE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((decimal)(pCHANGE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_RECEIPTDataTable GetData(global::System.Nullable<int> p_ACTION, global::System.Nullable<int> pID_RECEIPT, string pID_BY, global::System.Nullable<int> pID_STOCK, string pCUSTOMER_NAME, global::System.Nullable<int> pQUANTITY, global::System.Nullable<decimal> pTOTAL_RECEIPT, global::System.Nullable<int> pID_PRODUCT, global::System.Nullable<decimal> pUNIT_PRICE, global::System.Nullable<decimal> pCASH, global::System.Nullable<decimal> pCHANGE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_RECEIPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(pID_RECEIPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pID_BY));
            }
            if ((pID_STOCK.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_STOCK.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pCUSTOMER_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pCUSTOMER_NAME));
            }
            if ((pQUANTITY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pQUANTITY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pTOTAL_RECEIPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((decimal)(pTOTAL_RECEIPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((pID_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(pID_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((pUNIT_PRICE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((decimal)(pUNIT_PRICE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((pCASH.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((decimal)(pCASH.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((pCHANGE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((decimal)(pCHANGE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            ControlAppDevDataSetIsaac.SP_CRUD_RECEIPTDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_RECEIPTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_ROLETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_ROLETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_ROLE";
            tableMapping.ColumnMappings.Add("ID_ROLE", "ID_ROLE");
            tableMapping.ColumnMappings.Add("NAME_ROLE", "NAME_ROLE");
            tableMapping.ColumnMappings.Add("DESCRIP_ROLE", "DESCRIP_ROLE");
            tableMapping.ColumnMappings.Add("ROLE_STATE", "ROLE_STATE");
            tableMapping.ColumnMappings.Add("ROLE_CREATEBY", "ROLE_CREATEBY");
            tableMapping.ColumnMappings.Add("ROLE_UPDATEDBY", "ROLE_UPDATEDBY");
            tableMapping.ColumnMappings.Add("ROLE_CREATEDATE", "ROLE_CREATEDATE");
            tableMapping.ColumnMappings.Add("ROLE_UPDATEDATE", "ROLE_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_ROLE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_ROLE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pNAME_ROLE", global::System.Data.SqlDbType.VarChar, 75, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pDESCRIP_ROLE", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_ROLEDataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_ROLE, string pNAME_ROLE, string pDESCRIP_ROLE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_ROLE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_ROLE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pNAME_ROLE == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pNAME_ROLE));
            }
            if ((pDESCRIP_ROLE == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pDESCRIP_ROLE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_ROLEDataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_ROLE, string pNAME_ROLE, string pDESCRIP_ROLE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_ROLE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_ROLE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pNAME_ROLE == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pNAME_ROLE));
            }
            if ((pDESCRIP_ROLE == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pDESCRIP_ROLE));
            }
            ControlAppDevDataSetIsaac.SP_CRUD_ROLEDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_ROLEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_ROLE_PERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_ROLE_PERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_ROLE_PER";
            tableMapping.ColumnMappings.Add("NAME_ROLE", "NAME_ROLE");
            tableMapping.ColumnMappings.Add("NAME_PERMISSION", "NAME_PERMISSION");
            tableMapping.ColumnMappings.Add("ROLE_PER_STATE", "ROLE_PER_STATE");
            tableMapping.ColumnMappings.Add("ROLE_PER_CREATEBY", "ROLE_PER_CREATEBY");
            tableMapping.ColumnMappings.Add("ROLE_PER_UPDATEDBY", "ROLE_PER_UPDATEDBY");
            tableMapping.ColumnMappings.Add("ROLE_PER_CREATEDATE", "ROLE_PER_CREATEDATE");
            tableMapping.ColumnMappings.Add("ROLE_PER_UPDATEDATE", "ROLE_PER_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_ROLE_PER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_ROLE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_PER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pNAME_ROLE", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pNAME_PER", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_ROLE_PERDataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_ROLE, global::System.Nullable<int> pID_PER, string pNAME_ROLE, string pNAME_PER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_ROLE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_ROLE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_PER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_PER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pNAME_ROLE == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pNAME_ROLE));
            }
            if ((pNAME_PER == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(pNAME_PER));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_ROLE_PERDataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_ROLE, global::System.Nullable<int> pID_PER, string pNAME_ROLE, string pNAME_PER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_ROLE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_ROLE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_PER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_PER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pNAME_ROLE == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pNAME_ROLE));
            }
            if ((pNAME_PER == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(pNAME_PER));
            }
            ControlAppDevDataSetIsaac.SP_CRUD_ROLE_PERDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_ROLE_PERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_STOCKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_STOCKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_STOCK";
            tableMapping.ColumnMappings.Add("ID_STOCK", "ID_STOCK");
            tableMapping.ColumnMappings.Add("DESCRIP_PRICE", "DESCRIP_PRICE");
            tableMapping.ColumnMappings.Add("STOCK_INITIAL_QUANTITY", "STOCK_INITIAL_QUANTITY");
            tableMapping.ColumnMappings.Add("STOCK_QUANTITY", "STOCK_QUANTITY");
            tableMapping.ColumnMappings.Add("STOCK_ADJUSTMENT", "STOCK_ADJUSTMENT");
            tableMapping.ColumnMappings.Add("STOCK_DATE_PRODUCT", "STOCK_DATE_PRODUCT");
            tableMapping.ColumnMappings.Add("STOCK_COUNTER", "STOCK_COUNTER");
            tableMapping.ColumnMappings.Add("STOCK_STATE", "STOCK_STATE");
            tableMapping.ColumnMappings.Add("STOCK_CREATEBY", "STOCK_CREATEBY");
            tableMapping.ColumnMappings.Add("STOCK_UPDATEDBY", "STOCK_UPDATEDBY");
            tableMapping.ColumnMappings.Add("STOCK_CREATEDATE", "STOCK_CREATEDATE");
            tableMapping.ColumnMappings.Add("STOCK_UPDATEDATE", "STOCK_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_STOCK";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_STOCK", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_PRODUCT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pSTOCK_INITIAL_QUANTITY", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pSTOCK_QUANTITY", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pSTOCK_ADJUSTMENT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pSTOCK_DATE_PRODUCT", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pSTOCK_COUNTER", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_STOCKDataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_STOCK, global::System.Nullable<int> pID_PRODUCT, global::System.Nullable<int> pSTOCK_INITIAL_QUANTITY, global::System.Nullable<int> pSTOCK_QUANTITY, global::System.Nullable<int> pSTOCK_ADJUSTMENT, global::System.Nullable<global::System.DateTime> pSTOCK_DATE_PRODUCT, global::System.Nullable<bool> pSTOCK_COUNTER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_STOCK.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_STOCK.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pSTOCK_INITIAL_QUANTITY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pSTOCK_INITIAL_QUANTITY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pSTOCK_QUANTITY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pSTOCK_QUANTITY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pSTOCK_ADJUSTMENT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(pSTOCK_ADJUSTMENT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((pSTOCK_DATE_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((System.DateTime)(pSTOCK_DATE_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((pSTOCK_COUNTER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((bool)(pSTOCK_COUNTER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_STOCKDataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_STOCK, global::System.Nullable<int> pID_PRODUCT, global::System.Nullable<int> pSTOCK_INITIAL_QUANTITY, global::System.Nullable<int> pSTOCK_QUANTITY, global::System.Nullable<int> pSTOCK_ADJUSTMENT, global::System.Nullable<global::System.DateTime> pSTOCK_DATE_PRODUCT, global::System.Nullable<bool> pSTOCK_COUNTER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_STOCK.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_STOCK.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pID_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(pID_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((pSTOCK_INITIAL_QUANTITY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(pSTOCK_INITIAL_QUANTITY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pSTOCK_QUANTITY.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pSTOCK_QUANTITY.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pSTOCK_ADJUSTMENT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(pSTOCK_ADJUSTMENT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((pSTOCK_DATE_PRODUCT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((System.DateTime)(pSTOCK_DATE_PRODUCT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((pSTOCK_COUNTER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((bool)(pSTOCK_COUNTER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            ControlAppDevDataSetIsaac.SP_CRUD_STOCKDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_STOCKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_USERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_USERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_USER";
            tableMapping.ColumnMappings.Add("ID_USER", "ID_USER");
            tableMapping.ColumnMappings.Add("USER_NAME", "USER_NAME");
            tableMapping.ColumnMappings.Add("USER_EMAIL", "USER_EMAIL");
            tableMapping.ColumnMappings.Add("NAME_DPT", "NAME_DPT");
            tableMapping.ColumnMappings.Add("AREA_NAME", "AREA_NAME");
            tableMapping.ColumnMappings.Add("NAME_POSITION", "NAME_POSITION");
            tableMapping.ColumnMappings.Add("NAME_ROLE", "NAME_ROLE");
            tableMapping.ColumnMappings.Add("USER_PASSWORD", "USER_PASSWORD");
            tableMapping.ColumnMappings.Add("USER_NICKNAME", "USER_NICKNAME");
            tableMapping.ColumnMappings.Add("USER_STATE", "USER_STATE");
            tableMapping.ColumnMappings.Add("USER_CREATEBY", "USER_CREATEBY");
            tableMapping.ColumnMappings.Add("USER_UPDATEDBY", "USER_UPDATEDBY");
            tableMapping.ColumnMappings.Add("USER_CREATEDATE", "USER_CREATEDATE");
            tableMapping.ColumnMappings.Add("USER_UPDATEDATE", "USER_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_USER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_USER", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pUSER_NAME", global::System.Data.SqlDbType.VarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pUSER_EMAIL", global::System.Data.SqlDbType.VarChar, 150, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_DPT", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_AREA", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_PST", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_ROLE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pUSER_NICKNAME", global::System.Data.SqlDbType.VarChar, 15, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pUSER_PASSWORD", global::System.Data.SqlDbType.VarChar, 15, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_USERDataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, string pID_USER, string pUSER_NAME, string pUSER_EMAIL, global::System.Nullable<int> pID_DPT, global::System.Nullable<int> pID_AREA, global::System.Nullable<int> pID_PST, global::System.Nullable<int> pID_ROLE, string pUSER_NICKNAME, string pUSER_PASSWORD) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_USER == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pID_USER));
            }
            if ((pUSER_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pUSER_NAME));
            }
            if ((pUSER_EMAIL == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pUSER_EMAIL));
            }
            if ((pID_DPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pID_DPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pID_AREA.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(pID_AREA.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((pID_PST.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(pID_PST.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((pID_ROLE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((int)(pID_ROLE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((pUSER_NICKNAME == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(pUSER_NICKNAME));
            }
            if ((pUSER_PASSWORD == null)) {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = ((string)(pUSER_PASSWORD));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_USERDataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, string pID_USER, string pUSER_NAME, string pUSER_EMAIL, global::System.Nullable<int> pID_DPT, global::System.Nullable<int> pID_AREA, global::System.Nullable<int> pID_PST, global::System.Nullable<int> pID_ROLE, string pUSER_NICKNAME, string pUSER_PASSWORD) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_USER == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(pID_USER));
            }
            if ((pUSER_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pUSER_NAME));
            }
            if ((pUSER_EMAIL == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(pUSER_EMAIL));
            }
            if ((pID_DPT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(pID_DPT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((pID_AREA.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(pID_AREA.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((pID_PST.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(pID_PST.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((pID_ROLE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((int)(pID_ROLE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((pUSER_NICKNAME == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(pUSER_NICKNAME));
            }
            if ((pUSER_PASSWORD == null)) {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = ((string)(pUSER_PASSWORD));
            }
            ControlAppDevDataSetIsaac.SP_CRUD_USERDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_USERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_CRUD_NOTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SP_CRUD_NOTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_CRUD_NOTE";
            tableMapping.ColumnMappings.Add("ID_NOTE", "ID_NOTE");
            tableMapping.ColumnMappings.Add("NOTE_TITLE", "NOTE_TITLE");
            tableMapping.ColumnMappings.Add("NOTE_CONTENT", "NOTE_CONTENT");
            tableMapping.ColumnMappings.Add("NOTE_DATE", "NOTE_DATE");
            tableMapping.ColumnMappings.Add("NOTE_STATE", "NOTE_STATE");
            tableMapping.ColumnMappings.Add("NOTE_CREATEBY", "NOTE_CREATEBY");
            tableMapping.ColumnMappings.Add("NOTE_CREATEDATE", "NOTE_CREATEDATE");
            tableMapping.ColumnMappings.Add("NOTE_UPDATEBY", "NOTE_UPDATEBY");
            tableMapping.ColumnMappings.Add("NOTE_UPDATEDATE", "NOTE_UPDATEDATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppDevConnectionStringIsaac;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_CRUD_NOTE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_ACTION", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_BY", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pID_NOTE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pNOTE_TITLE", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pNOTE_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pNOTE_CONTENT", global::System.Data.SqlDbType.VarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pNOTE_STATE", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ControlAppDevDataSetIsaac.SP_CRUD_NOTEDataTable dataTable, global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_NOTE, string pNOTE_TITLE, global::System.Nullable<global::System.DateTime> pNOTE_DATE, string pNOTE_CONTENT, global::System.Nullable<bool> pNOTE_STATE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_NOTE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_NOTE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pNOTE_TITLE == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pNOTE_TITLE));
            }
            if ((pNOTE_DATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(pNOTE_DATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pNOTE_CONTENT == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(pNOTE_CONTENT));
            }
            if ((pNOTE_STATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(pNOTE_STATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ControlAppDevDataSetIsaac.SP_CRUD_NOTEDataTable GetData(global::System.Nullable<int> p_ACTION, string pID_BY, global::System.Nullable<int> pID_NOTE, string pNOTE_TITLE, global::System.Nullable<global::System.DateTime> pNOTE_DATE, string pNOTE_CONTENT, global::System.Nullable<bool> pNOTE_STATE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_ACTION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(p_ACTION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((pID_BY == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(pID_BY));
            }
            if ((pID_NOTE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(pID_NOTE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((pNOTE_TITLE == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(pNOTE_TITLE));
            }
            if ((pNOTE_DATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(pNOTE_DATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((pNOTE_CONTENT == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(pNOTE_CONTENT));
            }
            if ((pNOTE_STATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(pNOTE_STATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            ControlAppDevDataSetIsaac.SP_CRUD_NOTEDataTable dataTable = new ControlAppDevDataSetIsaac.SP_CRUD_NOTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private LogTableAdapter _logTableAdapter;
        
        private TBL_AREATableAdapter _tBL_AREATableAdapter;
        
        private TBL_CUSTOMERTableAdapter _tBL_CUSTOMERTableAdapter;
        
        private TBL_CXCTableAdapter _tBL_CXCTableAdapter;
        
        private TBL_DPTTableAdapter _tBL_DPTTableAdapter;
        
        private TBL_NOTETableAdapter _tBL_NOTETableAdapter;
        
        private TBL_ORDERTableAdapter _tBL_ORDERTableAdapter;
        
        private TBL_PERMISSIONTableAdapter _tBL_PERMISSIONTableAdapter;
        
        private TBL_POSITIONTableAdapter _tBL_POSITIONTableAdapter;
        
        private TBL_PREPAIDTableAdapter _tBL_PREPAIDTableAdapter;
        
        private TBL_PRODUCTTableAdapter _tBL_PRODUCTTableAdapter;
        
        private TBL_RECEIPTTableAdapter _tBL_RECEIPTTableAdapter;
        
        private TBL_ROLETableAdapter _tBL_ROLETableAdapter;
        
        private TBL_ROLE_PERMISSIONTableAdapter _tBL_ROLE_PERMISSIONTableAdapter;
        
        private TBL_SESSIONTableAdapter _tBL_SESSIONTableAdapter;
        
        private TBL_STOCKTableAdapter _tBL_STOCKTableAdapter;
        
        private TBL_USERTableAdapter _tBL_USERTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LogTableAdapter LogTableAdapter {
            get {
                return this._logTableAdapter;
            }
            set {
                this._logTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_AREATableAdapter TBL_AREATableAdapter {
            get {
                return this._tBL_AREATableAdapter;
            }
            set {
                this._tBL_AREATableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_CUSTOMERTableAdapter TBL_CUSTOMERTableAdapter {
            get {
                return this._tBL_CUSTOMERTableAdapter;
            }
            set {
                this._tBL_CUSTOMERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_CXCTableAdapter TBL_CXCTableAdapter {
            get {
                return this._tBL_CXCTableAdapter;
            }
            set {
                this._tBL_CXCTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_DPTTableAdapter TBL_DPTTableAdapter {
            get {
                return this._tBL_DPTTableAdapter;
            }
            set {
                this._tBL_DPTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_NOTETableAdapter TBL_NOTETableAdapter {
            get {
                return this._tBL_NOTETableAdapter;
            }
            set {
                this._tBL_NOTETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_ORDERTableAdapter TBL_ORDERTableAdapter {
            get {
                return this._tBL_ORDERTableAdapter;
            }
            set {
                this._tBL_ORDERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_PERMISSIONTableAdapter TBL_PERMISSIONTableAdapter {
            get {
                return this._tBL_PERMISSIONTableAdapter;
            }
            set {
                this._tBL_PERMISSIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_POSITIONTableAdapter TBL_POSITIONTableAdapter {
            get {
                return this._tBL_POSITIONTableAdapter;
            }
            set {
                this._tBL_POSITIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_PREPAIDTableAdapter TBL_PREPAIDTableAdapter {
            get {
                return this._tBL_PREPAIDTableAdapter;
            }
            set {
                this._tBL_PREPAIDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_PRODUCTTableAdapter TBL_PRODUCTTableAdapter {
            get {
                return this._tBL_PRODUCTTableAdapter;
            }
            set {
                this._tBL_PRODUCTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_RECEIPTTableAdapter TBL_RECEIPTTableAdapter {
            get {
                return this._tBL_RECEIPTTableAdapter;
            }
            set {
                this._tBL_RECEIPTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_ROLETableAdapter TBL_ROLETableAdapter {
            get {
                return this._tBL_ROLETableAdapter;
            }
            set {
                this._tBL_ROLETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_ROLE_PERMISSIONTableAdapter TBL_ROLE_PERMISSIONTableAdapter {
            get {
                return this._tBL_ROLE_PERMISSIONTableAdapter;
            }
            set {
                this._tBL_ROLE_PERMISSIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_SESSIONTableAdapter TBL_SESSIONTableAdapter {
            get {
                return this._tBL_SESSIONTableAdapter;
            }
            set {
                this._tBL_SESSIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_STOCKTableAdapter TBL_STOCKTableAdapter {
            get {
                return this._tBL_STOCKTableAdapter;
            }
            set {
                this._tBL_STOCKTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_USERTableAdapter TBL_USERTableAdapter {
            get {
                return this._tBL_USERTableAdapter;
            }
            set {
                this._tBL_USERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._logTableAdapter != null) 
                            && (this._logTableAdapter.Connection != null))) {
                    return this._logTableAdapter.Connection;
                }
                if (((this._tBL_AREATableAdapter != null) 
                            && (this._tBL_AREATableAdapter.Connection != null))) {
                    return this._tBL_AREATableAdapter.Connection;
                }
                if (((this._tBL_CUSTOMERTableAdapter != null) 
                            && (this._tBL_CUSTOMERTableAdapter.Connection != null))) {
                    return this._tBL_CUSTOMERTableAdapter.Connection;
                }
                if (((this._tBL_CXCTableAdapter != null) 
                            && (this._tBL_CXCTableAdapter.Connection != null))) {
                    return this._tBL_CXCTableAdapter.Connection;
                }
                if (((this._tBL_DPTTableAdapter != null) 
                            && (this._tBL_DPTTableAdapter.Connection != null))) {
                    return this._tBL_DPTTableAdapter.Connection;
                }
                if (((this._tBL_NOTETableAdapter != null) 
                            && (this._tBL_NOTETableAdapter.Connection != null))) {
                    return this._tBL_NOTETableAdapter.Connection;
                }
                if (((this._tBL_ORDERTableAdapter != null) 
                            && (this._tBL_ORDERTableAdapter.Connection != null))) {
                    return this._tBL_ORDERTableAdapter.Connection;
                }
                if (((this._tBL_PERMISSIONTableAdapter != null) 
                            && (this._tBL_PERMISSIONTableAdapter.Connection != null))) {
                    return this._tBL_PERMISSIONTableAdapter.Connection;
                }
                if (((this._tBL_POSITIONTableAdapter != null) 
                            && (this._tBL_POSITIONTableAdapter.Connection != null))) {
                    return this._tBL_POSITIONTableAdapter.Connection;
                }
                if (((this._tBL_PREPAIDTableAdapter != null) 
                            && (this._tBL_PREPAIDTableAdapter.Connection != null))) {
                    return this._tBL_PREPAIDTableAdapter.Connection;
                }
                if (((this._tBL_PRODUCTTableAdapter != null) 
                            && (this._tBL_PRODUCTTableAdapter.Connection != null))) {
                    return this._tBL_PRODUCTTableAdapter.Connection;
                }
                if (((this._tBL_RECEIPTTableAdapter != null) 
                            && (this._tBL_RECEIPTTableAdapter.Connection != null))) {
                    return this._tBL_RECEIPTTableAdapter.Connection;
                }
                if (((this._tBL_ROLETableAdapter != null) 
                            && (this._tBL_ROLETableAdapter.Connection != null))) {
                    return this._tBL_ROLETableAdapter.Connection;
                }
                if (((this._tBL_ROLE_PERMISSIONTableAdapter != null) 
                            && (this._tBL_ROLE_PERMISSIONTableAdapter.Connection != null))) {
                    return this._tBL_ROLE_PERMISSIONTableAdapter.Connection;
                }
                if (((this._tBL_SESSIONTableAdapter != null) 
                            && (this._tBL_SESSIONTableAdapter.Connection != null))) {
                    return this._tBL_SESSIONTableAdapter.Connection;
                }
                if (((this._tBL_STOCKTableAdapter != null) 
                            && (this._tBL_STOCKTableAdapter.Connection != null))) {
                    return this._tBL_STOCKTableAdapter.Connection;
                }
                if (((this._tBL_USERTableAdapter != null) 
                            && (this._tBL_USERTableAdapter.Connection != null))) {
                    return this._tBL_USERTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._logTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_AREATableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_CUSTOMERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_CXCTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_DPTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_NOTETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_ORDERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_PERMISSIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_POSITIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_PREPAIDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_PRODUCTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_RECEIPTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_ROLETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_ROLE_PERMISSIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_SESSIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_STOCKTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBL_USERTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(ControlAppDevDataSetIsaac dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tBL_DPTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_DPT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_DPTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_AREATableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_AREA.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_AREATableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_ROLETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_ROLE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_ROLETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_POSITIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_POSITION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_POSITIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_USERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_USER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_USERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_CUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_CUSTOMERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_PRODUCTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_PRODUCT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_PRODUCTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_STOCK.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_STOCKTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_PREPAIDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_PREPAID.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_PREPAIDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_PERMISSIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_PERMISSION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_PERMISSIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._logTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Log.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._logTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_SESSIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_SESSION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_SESSIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_ROLE_PERMISSIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_ROLE_PERMISSION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_ROLE_PERMISSIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_RECEIPTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_RECEIPT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_RECEIPTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_ORDERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_ORDER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_ORDERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_NOTETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_NOTE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_NOTETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBL_CXCTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_CXC.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_CXCTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(ControlAppDevDataSetIsaac dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tBL_DPTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_DPT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_DPTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_AREATableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_AREA.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_AREATableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_ROLETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_ROLE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_ROLETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_POSITIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_POSITION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_POSITIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_USERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_USER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_USERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_CUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_CUSTOMERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_PRODUCTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_PRODUCT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_PRODUCTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_STOCK.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_STOCKTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_PREPAIDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_PREPAID.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_PREPAIDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_PERMISSIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_PERMISSION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_PERMISSIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._logTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Log.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._logTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_SESSIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_SESSION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_SESSIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_ROLE_PERMISSIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_ROLE_PERMISSION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_ROLE_PERMISSIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_RECEIPTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_RECEIPT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_RECEIPTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_ORDERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_ORDER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_ORDERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_NOTETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_NOTE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_NOTETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBL_CXCTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_CXC.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_CXCTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(ControlAppDevDataSetIsaac dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tBL_CXCTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_CXC.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_CXCTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_NOTETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_NOTE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_NOTETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_ORDERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_ORDER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_ORDERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_RECEIPTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_RECEIPT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_RECEIPTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_ROLE_PERMISSIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_ROLE_PERMISSION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_ROLE_PERMISSIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_SESSIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_SESSION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_SESSIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._logTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Log.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._logTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_PERMISSIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_PERMISSION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_PERMISSIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_PREPAIDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_PREPAID.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_PREPAIDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_STOCKTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_STOCK.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_STOCKTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_PRODUCTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_PRODUCT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_PRODUCTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_CUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_CUSTOMERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_USERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_USER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_USERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_POSITIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_POSITION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_POSITIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_ROLETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_ROLE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_ROLETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_AREATableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_AREA.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_AREATableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBL_DPTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_DPT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_DPTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(ControlAppDevDataSetIsaac dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._logTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._logTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_AREATableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_AREATableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_CUSTOMERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_CUSTOMERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_CXCTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_CXCTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_DPTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_DPTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_NOTETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_NOTETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_ORDERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_ORDERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_PERMISSIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_PERMISSIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_POSITIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_POSITIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_PREPAIDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_PREPAIDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_PRODUCTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_PRODUCTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_RECEIPTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_RECEIPTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_ROLETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_ROLETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_ROLE_PERMISSIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_ROLE_PERMISSIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_SESSIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_SESSIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_STOCKTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_STOCKTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tBL_USERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_USERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._logTableAdapter != null)) {
                    revertConnections.Add(this._logTableAdapter, this._logTableAdapter.Connection);
                    this._logTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._logTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._logTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._logTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._logTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_AREATableAdapter != null)) {
                    revertConnections.Add(this._tBL_AREATableAdapter, this._tBL_AREATableAdapter.Connection);
                    this._tBL_AREATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_AREATableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_AREATableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_AREATableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_AREATableAdapter.Adapter);
                    }
                }
                if ((this._tBL_CUSTOMERTableAdapter != null)) {
                    revertConnections.Add(this._tBL_CUSTOMERTableAdapter, this._tBL_CUSTOMERTableAdapter.Connection);
                    this._tBL_CUSTOMERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_CUSTOMERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_CUSTOMERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_CUSTOMERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_CUSTOMERTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_CXCTableAdapter != null)) {
                    revertConnections.Add(this._tBL_CXCTableAdapter, this._tBL_CXCTableAdapter.Connection);
                    this._tBL_CXCTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_CXCTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_CXCTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_CXCTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_CXCTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_DPTTableAdapter != null)) {
                    revertConnections.Add(this._tBL_DPTTableAdapter, this._tBL_DPTTableAdapter.Connection);
                    this._tBL_DPTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_DPTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_DPTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_DPTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_DPTTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_NOTETableAdapter != null)) {
                    revertConnections.Add(this._tBL_NOTETableAdapter, this._tBL_NOTETableAdapter.Connection);
                    this._tBL_NOTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_NOTETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_NOTETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_NOTETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_NOTETableAdapter.Adapter);
                    }
                }
                if ((this._tBL_ORDERTableAdapter != null)) {
                    revertConnections.Add(this._tBL_ORDERTableAdapter, this._tBL_ORDERTableAdapter.Connection);
                    this._tBL_ORDERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_ORDERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_ORDERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_ORDERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_ORDERTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_PERMISSIONTableAdapter != null)) {
                    revertConnections.Add(this._tBL_PERMISSIONTableAdapter, this._tBL_PERMISSIONTableAdapter.Connection);
                    this._tBL_PERMISSIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_PERMISSIONTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_PERMISSIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_PERMISSIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_PERMISSIONTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_POSITIONTableAdapter != null)) {
                    revertConnections.Add(this._tBL_POSITIONTableAdapter, this._tBL_POSITIONTableAdapter.Connection);
                    this._tBL_POSITIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_POSITIONTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_POSITIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_POSITIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_POSITIONTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_PREPAIDTableAdapter != null)) {
                    revertConnections.Add(this._tBL_PREPAIDTableAdapter, this._tBL_PREPAIDTableAdapter.Connection);
                    this._tBL_PREPAIDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_PREPAIDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_PREPAIDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_PREPAIDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_PREPAIDTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_PRODUCTTableAdapter != null)) {
                    revertConnections.Add(this._tBL_PRODUCTTableAdapter, this._tBL_PRODUCTTableAdapter.Connection);
                    this._tBL_PRODUCTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_PRODUCTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_PRODUCTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_PRODUCTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_PRODUCTTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_RECEIPTTableAdapter != null)) {
                    revertConnections.Add(this._tBL_RECEIPTTableAdapter, this._tBL_RECEIPTTableAdapter.Connection);
                    this._tBL_RECEIPTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_RECEIPTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_RECEIPTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_RECEIPTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_RECEIPTTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_ROLETableAdapter != null)) {
                    revertConnections.Add(this._tBL_ROLETableAdapter, this._tBL_ROLETableAdapter.Connection);
                    this._tBL_ROLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_ROLETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_ROLETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_ROLETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_ROLETableAdapter.Adapter);
                    }
                }
                if ((this._tBL_ROLE_PERMISSIONTableAdapter != null)) {
                    revertConnections.Add(this._tBL_ROLE_PERMISSIONTableAdapter, this._tBL_ROLE_PERMISSIONTableAdapter.Connection);
                    this._tBL_ROLE_PERMISSIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_ROLE_PERMISSIONTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_ROLE_PERMISSIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_ROLE_PERMISSIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_ROLE_PERMISSIONTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_SESSIONTableAdapter != null)) {
                    revertConnections.Add(this._tBL_SESSIONTableAdapter, this._tBL_SESSIONTableAdapter.Connection);
                    this._tBL_SESSIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_SESSIONTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_SESSIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_SESSIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_SESSIONTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_STOCKTableAdapter != null)) {
                    revertConnections.Add(this._tBL_STOCKTableAdapter, this._tBL_STOCKTableAdapter.Connection);
                    this._tBL_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_STOCKTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_STOCKTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_STOCKTableAdapter.Adapter);
                    }
                }
                if ((this._tBL_USERTableAdapter != null)) {
                    revertConnections.Add(this._tBL_USERTableAdapter, this._tBL_USERTableAdapter.Connection);
                    this._tBL_USERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_USERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_USERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_USERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_USERTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._logTableAdapter != null)) {
                    this._logTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._logTableAdapter]));
                    this._logTableAdapter.Transaction = null;
                }
                if ((this._tBL_AREATableAdapter != null)) {
                    this._tBL_AREATableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_AREATableAdapter]));
                    this._tBL_AREATableAdapter.Transaction = null;
                }
                if ((this._tBL_CUSTOMERTableAdapter != null)) {
                    this._tBL_CUSTOMERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_CUSTOMERTableAdapter]));
                    this._tBL_CUSTOMERTableAdapter.Transaction = null;
                }
                if ((this._tBL_CXCTableAdapter != null)) {
                    this._tBL_CXCTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_CXCTableAdapter]));
                    this._tBL_CXCTableAdapter.Transaction = null;
                }
                if ((this._tBL_DPTTableAdapter != null)) {
                    this._tBL_DPTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_DPTTableAdapter]));
                    this._tBL_DPTTableAdapter.Transaction = null;
                }
                if ((this._tBL_NOTETableAdapter != null)) {
                    this._tBL_NOTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_NOTETableAdapter]));
                    this._tBL_NOTETableAdapter.Transaction = null;
                }
                if ((this._tBL_ORDERTableAdapter != null)) {
                    this._tBL_ORDERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_ORDERTableAdapter]));
                    this._tBL_ORDERTableAdapter.Transaction = null;
                }
                if ((this._tBL_PERMISSIONTableAdapter != null)) {
                    this._tBL_PERMISSIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_PERMISSIONTableAdapter]));
                    this._tBL_PERMISSIONTableAdapter.Transaction = null;
                }
                if ((this._tBL_POSITIONTableAdapter != null)) {
                    this._tBL_POSITIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_POSITIONTableAdapter]));
                    this._tBL_POSITIONTableAdapter.Transaction = null;
                }
                if ((this._tBL_PREPAIDTableAdapter != null)) {
                    this._tBL_PREPAIDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_PREPAIDTableAdapter]));
                    this._tBL_PREPAIDTableAdapter.Transaction = null;
                }
                if ((this._tBL_PRODUCTTableAdapter != null)) {
                    this._tBL_PRODUCTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_PRODUCTTableAdapter]));
                    this._tBL_PRODUCTTableAdapter.Transaction = null;
                }
                if ((this._tBL_RECEIPTTableAdapter != null)) {
                    this._tBL_RECEIPTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_RECEIPTTableAdapter]));
                    this._tBL_RECEIPTTableAdapter.Transaction = null;
                }
                if ((this._tBL_ROLETableAdapter != null)) {
                    this._tBL_ROLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_ROLETableAdapter]));
                    this._tBL_ROLETableAdapter.Transaction = null;
                }
                if ((this._tBL_ROLE_PERMISSIONTableAdapter != null)) {
                    this._tBL_ROLE_PERMISSIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_ROLE_PERMISSIONTableAdapter]));
                    this._tBL_ROLE_PERMISSIONTableAdapter.Transaction = null;
                }
                if ((this._tBL_SESSIONTableAdapter != null)) {
                    this._tBL_SESSIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_SESSIONTableAdapter]));
                    this._tBL_SESSIONTableAdapter.Transaction = null;
                }
                if ((this._tBL_STOCKTableAdapter != null)) {
                    this._tBL_STOCKTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_STOCKTableAdapter]));
                    this._tBL_STOCKTableAdapter.Transaction = null;
                }
                if ((this._tBL_USERTableAdapter != null)) {
                    this._tBL_USERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_USERTableAdapter]));
                    this._tBL_USERTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591